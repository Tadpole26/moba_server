// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_serverinner.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverinner_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverinner_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_common.pb.h"
#include "result_code.pb.h"
#include "server_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fmodule_5fserverinner_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmodule_5fserverinner_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fmodule_5fserverinner_2eproto;
namespace ProtoMsg {
class MsgModule_ServerInner;
struct MsgModule_ServerInnerDefaultTypeInternal;
extern MsgModule_ServerInnerDefaultTypeInternal _MsgModule_ServerInner_default_instance_;
class Msg_ServerInner_GG_Create_Req;
struct Msg_ServerInner_GG_Create_ReqDefaultTypeInternal;
extern Msg_ServerInner_GG_Create_ReqDefaultTypeInternal _Msg_ServerInner_GG_Create_Req_default_instance_;
class Msg_ServerInner_GG_Create_Rsp;
struct Msg_ServerInner_GG_Create_RspDefaultTypeInternal;
extern Msg_ServerInner_GG_Create_RspDefaultTypeInternal _Msg_ServerInner_GG_Create_Rsp_default_instance_;
class Msg_ServerInner_GG_Kick_Notify;
struct Msg_ServerInner_GG_Kick_NotifyDefaultTypeInternal;
extern Msg_ServerInner_GG_Kick_NotifyDefaultTypeInternal _Msg_ServerInner_GG_Kick_Notify_default_instance_;
class Msg_ServerInner_GG_Login_Req;
struct Msg_ServerInner_GG_Login_ReqDefaultTypeInternal;
extern Msg_ServerInner_GG_Login_ReqDefaultTypeInternal _Msg_ServerInner_GG_Login_Req_default_instance_;
class Msg_ServerInner_GG_Login_Rsp;
struct Msg_ServerInner_GG_Login_RspDefaultTypeInternal;
extern Msg_ServerInner_GG_Login_RspDefaultTypeInternal _Msg_ServerInner_GG_Login_Rsp_default_instance_;
class Msg_ServerInner_GG_Msg_Notify;
struct Msg_ServerInner_GG_Msg_NotifyDefaultTypeInternal;
extern Msg_ServerInner_GG_Msg_NotifyDefaultTypeInternal _Msg_ServerInner_GG_Msg_Notify_default_instance_;
class Msg_ServerInner_GG_Save_Ntf;
struct Msg_ServerInner_GG_Save_NtfDefaultTypeInternal;
extern Msg_ServerInner_GG_Save_NtfDefaultTypeInternal _Msg_ServerInner_GG_Save_Ntf_default_instance_;
class Msg_ServerInner_GS_ClearOnline;
struct Msg_ServerInner_GS_ClearOnlineDefaultTypeInternal;
extern Msg_ServerInner_GS_ClearOnlineDefaultTypeInternal _Msg_ServerInner_GS_ClearOnline_default_instance_;
class Msg_ServerInner_GS_KickPlayerNotify;
struct Msg_ServerInner_GS_KickPlayerNotifyDefaultTypeInternal;
extern Msg_ServerInner_GS_KickPlayerNotifyDefaultTypeInternal _Msg_ServerInner_GS_KickPlayerNotify_default_instance_;
class Msg_ServerInner_GS_ModifyNameReq;
struct Msg_ServerInner_GS_ModifyNameReqDefaultTypeInternal;
extern Msg_ServerInner_GS_ModifyNameReqDefaultTypeInternal _Msg_ServerInner_GS_ModifyNameReq_default_instance_;
class Msg_ServerInner_GS_ModifyNameRsp;
struct Msg_ServerInner_GS_ModifyNameRspDefaultTypeInternal;
extern Msg_ServerInner_GS_ModifyNameRspDefaultTypeInternal _Msg_ServerInner_GS_ModifyNameRsp_default_instance_;
class Msg_ServerInner_GS_NotifyLogout;
struct Msg_ServerInner_GS_NotifyLogoutDefaultTypeInternal;
extern Msg_ServerInner_GS_NotifyLogoutDefaultTypeInternal _Msg_ServerInner_GS_NotifyLogout_default_instance_;
class Msg_ServerInner_GS_NotifyOnline;
struct Msg_ServerInner_GS_NotifyOnlineDefaultTypeInternal;
extern Msg_ServerInner_GS_NotifyOnlineDefaultTypeInternal _Msg_ServerInner_GS_NotifyOnline_default_instance_;
class Msg_ServerInner_GS_PlayerLoginReq;
struct Msg_ServerInner_GS_PlayerLoginReqDefaultTypeInternal;
extern Msg_ServerInner_GS_PlayerLoginReqDefaultTypeInternal _Msg_ServerInner_GS_PlayerLoginReq_default_instance_;
class Msg_ServerInner_GS_PlayerLoginRsp;
struct Msg_ServerInner_GS_PlayerLoginRspDefaultTypeInternal;
extern Msg_ServerInner_GS_PlayerLoginRspDefaultTypeInternal _Msg_ServerInner_GS_PlayerLoginRsp_default_instance_;
class Msg_ServerInner_GS_RecordOnline;
struct Msg_ServerInner_GS_RecordOnlineDefaultTypeInternal;
extern Msg_ServerInner_GS_RecordOnlineDefaultTypeInternal _Msg_ServerInner_GS_RecordOnline_default_instance_;
class Msg_ServerInner_GS_TransmitNotify;
struct Msg_ServerInner_GS_TransmitNotifyDefaultTypeInternal;
extern Msg_ServerInner_GS_TransmitNotifyDefaultTypeInternal _Msg_ServerInner_GS_TransmitNotify_default_instance_;
class Msg_ServerInner_GS_UniqueIdReq;
struct Msg_ServerInner_GS_UniqueIdReqDefaultTypeInternal;
extern Msg_ServerInner_GS_UniqueIdReqDefaultTypeInternal _Msg_ServerInner_GS_UniqueIdReq_default_instance_;
class Msg_ServerInner_GS_UniqueIdRsp;
struct Msg_ServerInner_GS_UniqueIdRspDefaultTypeInternal;
extern Msg_ServerInner_GS_UniqueIdRspDefaultTypeInternal _Msg_ServerInner_GS_UniqueIdRsp_default_instance_;
class Msg_ServerInner_GS_UpdatePlayer;
struct Msg_ServerInner_GS_UpdatePlayerDefaultTypeInternal;
extern Msg_ServerInner_GS_UpdatePlayerDefaultTypeInternal _Msg_ServerInner_GS_UpdatePlayer_default_instance_;
class Msg_ServerInner_GS_UpdateRmb;
struct Msg_ServerInner_GS_UpdateRmbDefaultTypeInternal;
extern Msg_ServerInner_GS_UpdateRmbDefaultTypeInternal _Msg_ServerInner_GS_UpdateRmb_default_instance_;
class Msg_ServerInner_GS_WMsg;
struct Msg_ServerInner_GS_WMsgDefaultTypeInternal;
extern Msg_ServerInner_GS_WMsgDefaultTypeInternal _Msg_ServerInner_GS_WMsg_default_instance_;
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMsg::MsgModule_ServerInner* Arena::CreateMaybeMessage<::ProtoMsg::MsgModule_ServerInner>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Create_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Create_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Create_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Create_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Kick_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Kick_Notify>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Login_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Login_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Login_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Login_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Msg_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Msg_Notify>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GG_Save_Ntf* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GG_Save_Ntf>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_ClearOnline* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_ClearOnline>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_KickPlayerNotify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_KickPlayerNotify>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_ModifyNameReq* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_ModifyNameReq>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_ModifyNameRsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_ModifyNameRsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_NotifyLogout* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_NotifyLogout>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_NotifyOnline* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_NotifyOnline>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_PlayerLoginReq* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_PlayerLoginReq>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_PlayerLoginRsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_PlayerLoginRsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_RecordOnline* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_RecordOnline>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_TransmitNotify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_TransmitNotify>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_UniqueIdReq* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_UniqueIdReq>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_UniqueIdRsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_UniqueIdRsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_UpdatePlayer* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_UpdatePlayer>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_UpdateRmb* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_UpdateRmb>(Arena*);
template<> ::ProtoMsg::Msg_ServerInner_GS_WMsg* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerInner_GS_WMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMsg {

enum MsgModule_ServerInner_MsgCmd : int {
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_None = 0,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Login_Req = 1,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Login_Rsp = 2,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Create_Req = 3,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Create_Rsp = 4,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Save_Ntf = 5,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Kick_Notify = 6,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Msg_Notify = 7,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_RecordOnline = 10,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ClearOnline = 11,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_NotifyOnline = 12,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_NotifyLogout = 13,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_PlayerLoginReq = 14,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_PlayerLoginRsp = 15,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UniqueIdReq = 16,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UniqueIdRsp = 17,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_KickPlayerNotify = 18,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_TransmitNotify = 19,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_WMsg = 20,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ModifyNameReq = 21,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ModifyNameRsp = 22,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UpdatePlayer = 23,
  MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UpdateRmb = 24,
  MsgModule_ServerInner_MsgCmd_MsgModule_ServerInner_MsgCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgModule_ServerInner_MsgCmd_MsgModule_ServerInner_MsgCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgModule_ServerInner_MsgCmd_IsValid(int value);
constexpr MsgModule_ServerInner_MsgCmd MsgModule_ServerInner_MsgCmd_MsgCmd_MIN = MsgModule_ServerInner_MsgCmd_Msg_ServerInner_None;
constexpr MsgModule_ServerInner_MsgCmd MsgModule_ServerInner_MsgCmd_MsgCmd_MAX = MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UpdateRmb;
constexpr int MsgModule_ServerInner_MsgCmd_MsgCmd_ARRAYSIZE = MsgModule_ServerInner_MsgCmd_MsgCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_ServerInner_MsgCmd_descriptor();
template<typename T>
inline const std::string& MsgModule_ServerInner_MsgCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgModule_ServerInner_MsgCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgModule_ServerInner_MsgCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgModule_ServerInner_MsgCmd_descriptor(), enum_t_value);
}
inline bool MsgModule_ServerInner_MsgCmd_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgModule_ServerInner_MsgCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgModule_ServerInner_MsgCmd>(
    MsgModule_ServerInner_MsgCmd_descriptor(), name, value);
}
// ===================================================================

class MsgModule_ServerInner final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.MsgModule_ServerInner) */ {
 public:
  inline MsgModule_ServerInner() : MsgModule_ServerInner(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgModule_ServerInner(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgModule_ServerInner(const MsgModule_ServerInner& from);
  MsgModule_ServerInner(MsgModule_ServerInner&& from) noexcept
    : MsgModule_ServerInner() {
    *this = ::std::move(from);
  }

  inline MsgModule_ServerInner& operator=(const MsgModule_ServerInner& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModule_ServerInner& operator=(MsgModule_ServerInner&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgModule_ServerInner& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgModule_ServerInner* internal_default_instance() {
    return reinterpret_cast<const MsgModule_ServerInner*>(
               &_MsgModule_ServerInner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgModule_ServerInner& a, MsgModule_ServerInner& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModule_ServerInner* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModule_ServerInner* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgModule_ServerInner* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgModule_ServerInner>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgModule_ServerInner& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgModule_ServerInner& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.MsgModule_ServerInner";
  }
  protected:
  explicit MsgModule_ServerInner(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgModule_ServerInner_MsgCmd MsgCmd;
  static constexpr MsgCmd Msg_ServerInner_None =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_None;
  static constexpr MsgCmd Msg_ServerInner_GG_Login_Req =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Login_Req;
  static constexpr MsgCmd Msg_ServerInner_GG_Login_Rsp =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Login_Rsp;
  static constexpr MsgCmd Msg_ServerInner_GG_Create_Req =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Create_Req;
  static constexpr MsgCmd Msg_ServerInner_GG_Create_Rsp =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Create_Rsp;
  static constexpr MsgCmd Msg_ServerInner_GG_Save_Ntf =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Save_Ntf;
  static constexpr MsgCmd Msg_ServerInner_GG_Kick_Notify =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Kick_Notify;
  static constexpr MsgCmd Msg_ServerInner_GG_Msg_Notify =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GG_Msg_Notify;
  static constexpr MsgCmd Msg_ServerInner_GS_RecordOnline =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_RecordOnline;
  static constexpr MsgCmd Msg_ServerInner_GS_ClearOnline =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ClearOnline;
  static constexpr MsgCmd Msg_ServerInner_GS_NotifyOnline =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_NotifyOnline;
  static constexpr MsgCmd Msg_ServerInner_GS_NotifyLogout =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_NotifyLogout;
  static constexpr MsgCmd Msg_ServerInner_GS_PlayerLoginReq =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_PlayerLoginReq;
  static constexpr MsgCmd Msg_ServerInner_GS_PlayerLoginRsp =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_PlayerLoginRsp;
  static constexpr MsgCmd Msg_ServerInner_GS_UniqueIdReq =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UniqueIdReq;
  static constexpr MsgCmd Msg_ServerInner_GS_UniqueIdRsp =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UniqueIdRsp;
  static constexpr MsgCmd Msg_ServerInner_GS_KickPlayerNotify =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_KickPlayerNotify;
  static constexpr MsgCmd Msg_ServerInner_GS_TransmitNotify =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_TransmitNotify;
  static constexpr MsgCmd Msg_ServerInner_GS_WMsg =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_WMsg;
  static constexpr MsgCmd Msg_ServerInner_GS_ModifyNameReq =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ModifyNameReq;
  static constexpr MsgCmd Msg_ServerInner_GS_ModifyNameRsp =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_ModifyNameRsp;
  static constexpr MsgCmd Msg_ServerInner_GS_UpdatePlayer =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UpdatePlayer;
  static constexpr MsgCmd Msg_ServerInner_GS_UpdateRmb =
    MsgModule_ServerInner_MsgCmd_Msg_ServerInner_GS_UpdateRmb;
  static inline bool MsgCmd_IsValid(int value) {
    return MsgModule_ServerInner_MsgCmd_IsValid(value);
  }
  static constexpr MsgCmd MsgCmd_MIN =
    MsgModule_ServerInner_MsgCmd_MsgCmd_MIN;
  static constexpr MsgCmd MsgCmd_MAX =
    MsgModule_ServerInner_MsgCmd_MsgCmd_MAX;
  static constexpr int MsgCmd_ARRAYSIZE =
    MsgModule_ServerInner_MsgCmd_MsgCmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgCmd_descriptor() {
    return MsgModule_ServerInner_MsgCmd_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgCmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgCmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgCmd_Name.");
    return MsgModule_ServerInner_MsgCmd_Name(enum_t_value);
  }
  static inline bool MsgCmd_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgCmd* value) {
    return MsgModule_ServerInner_MsgCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MsgModule_ServerInner)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Login_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Login_Req) */ {
 public:
  inline Msg_ServerInner_GG_Login_Req() : Msg_ServerInner_GG_Login_Req(nullptr) {}
  ~Msg_ServerInner_GG_Login_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Login_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Login_Req(const Msg_ServerInner_GG_Login_Req& from);
  Msg_ServerInner_GG_Login_Req(Msg_ServerInner_GG_Login_Req&& from) noexcept
    : Msg_ServerInner_GG_Login_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Login_Req& operator=(const Msg_ServerInner_GG_Login_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Login_Req& operator=(Msg_ServerInner_GG_Login_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Login_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Login_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Login_Req*>(
               &_Msg_ServerInner_GG_Login_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Msg_ServerInner_GG_Login_Req& a, Msg_ServerInner_GG_Login_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Login_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Login_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Login_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Login_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Login_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Login_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Login_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Login_Req";
  }
  protected:
  explicit Msg_ServerInner_GG_Login_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrAccNameFieldNumber = 2,
    kStrSessionFieldNumber = 3,
    kStrClientIpFieldNumber = 5,
    kStrProvinceNameFieldNumber = 9,
    kStrDeviceIdFieldNumber = 11,
    kStrChannelFieldNumber = 14,
    kStrCityCodeFieldNumber = 15,
    kLlUserIdFieldNumber = 1,
    kUiSdkFieldNumber = 4,
    kUiReLoginFieldNumber = 6,
    kISeqIdFieldNumber = 7,
    kUiProvinceFieldNumber = 8,
    kUiGmLevelFieldNumber = 10,
    kUiProAreaFieldNumber = 12,
    kBAntiAddFieldNumber = 13,
  };
  // string strAccName = 2;
  void clear_straccname();
  const std::string& straccname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_straccname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_straccname();
  PROTOBUF_NODISCARD std::string* release_straccname();
  void set_allocated_straccname(std::string* straccname);
  private:
  const std::string& _internal_straccname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_straccname(const std::string& value);
  std::string* _internal_mutable_straccname();
  public:

  // string strSession = 3;
  void clear_strsession();
  const std::string& strsession() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strsession(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strsession();
  PROTOBUF_NODISCARD std::string* release_strsession();
  void set_allocated_strsession(std::string* strsession);
  private:
  const std::string& _internal_strsession() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strsession(const std::string& value);
  std::string* _internal_mutable_strsession();
  public:

  // string strClientIp = 5;
  void clear_strclientip();
  const std::string& strclientip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strclientip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strclientip();
  PROTOBUF_NODISCARD std::string* release_strclientip();
  void set_allocated_strclientip(std::string* strclientip);
  private:
  const std::string& _internal_strclientip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strclientip(const std::string& value);
  std::string* _internal_mutable_strclientip();
  public:

  // string strProvinceName = 9;
  void clear_strprovincename();
  const std::string& strprovincename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strprovincename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strprovincename();
  PROTOBUF_NODISCARD std::string* release_strprovincename();
  void set_allocated_strprovincename(std::string* strprovincename);
  private:
  const std::string& _internal_strprovincename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strprovincename(const std::string& value);
  std::string* _internal_mutable_strprovincename();
  public:

  // string strDeviceId = 11;
  void clear_strdeviceid();
  const std::string& strdeviceid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strdeviceid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strdeviceid();
  PROTOBUF_NODISCARD std::string* release_strdeviceid();
  void set_allocated_strdeviceid(std::string* strdeviceid);
  private:
  const std::string& _internal_strdeviceid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strdeviceid(const std::string& value);
  std::string* _internal_mutable_strdeviceid();
  public:

  // string strChannel = 14;
  void clear_strchannel();
  const std::string& strchannel() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strchannel(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strchannel();
  PROTOBUF_NODISCARD std::string* release_strchannel();
  void set_allocated_strchannel(std::string* strchannel);
  private:
  const std::string& _internal_strchannel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strchannel(const std::string& value);
  std::string* _internal_mutable_strchannel();
  public:

  // string strCityCode = 15;
  void clear_strcitycode();
  const std::string& strcitycode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strcitycode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strcitycode();
  PROTOBUF_NODISCARD std::string* release_strcitycode();
  void set_allocated_strcitycode(std::string* strcitycode);
  private:
  const std::string& _internal_strcitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strcitycode(const std::string& value);
  std::string* _internal_mutable_strcitycode();
  public:

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // uint32 uiSdk = 4;
  void clear_uisdk();
  uint32_t uisdk() const;
  void set_uisdk(uint32_t value);
  private:
  uint32_t _internal_uisdk() const;
  void _internal_set_uisdk(uint32_t value);
  public:

  // uint32 uiReLogin = 6;
  void clear_uirelogin();
  uint32_t uirelogin() const;
  void set_uirelogin(uint32_t value);
  private:
  uint32_t _internal_uirelogin() const;
  void _internal_set_uirelogin(uint32_t value);
  public:

  // int32 iSeqId = 7;
  void clear_iseqid();
  int32_t iseqid() const;
  void set_iseqid(int32_t value);
  private:
  int32_t _internal_iseqid() const;
  void _internal_set_iseqid(int32_t value);
  public:

  // uint32 uiProvince = 8;
  void clear_uiprovince();
  uint32_t uiprovince() const;
  void set_uiprovince(uint32_t value);
  private:
  uint32_t _internal_uiprovince() const;
  void _internal_set_uiprovince(uint32_t value);
  public:

  // uint32 uiGmLevel = 10;
  void clear_uigmlevel();
  uint32_t uigmlevel() const;
  void set_uigmlevel(uint32_t value);
  private:
  uint32_t _internal_uigmlevel() const;
  void _internal_set_uigmlevel(uint32_t value);
  public:

  // uint32 uiProArea = 12;
  void clear_uiproarea();
  uint32_t uiproarea() const;
  void set_uiproarea(uint32_t value);
  private:
  uint32_t _internal_uiproarea() const;
  void _internal_set_uiproarea(uint32_t value);
  public:

  // bool bAntiAdd = 13;
  void clear_bantiadd();
  bool bantiadd() const;
  void set_bantiadd(bool value);
  private:
  bool _internal_bantiadd() const;
  void _internal_set_bantiadd(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Login_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr straccname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strsession_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strclientip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strprovincename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strdeviceid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strchannel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcitycode_;
  int64_t lluserid_;
  uint32_t uisdk_;
  uint32_t uirelogin_;
  int32_t iseqid_;
  uint32_t uiprovince_;
  uint32_t uigmlevel_;
  uint32_t uiproarea_;
  bool bantiadd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Login_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Login_Rsp) */ {
 public:
  inline Msg_ServerInner_GG_Login_Rsp() : Msg_ServerInner_GG_Login_Rsp(nullptr) {}
  ~Msg_ServerInner_GG_Login_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Login_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Login_Rsp(const Msg_ServerInner_GG_Login_Rsp& from);
  Msg_ServerInner_GG_Login_Rsp(Msg_ServerInner_GG_Login_Rsp&& from) noexcept
    : Msg_ServerInner_GG_Login_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Login_Rsp& operator=(const Msg_ServerInner_GG_Login_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Login_Rsp& operator=(Msg_ServerInner_GG_Login_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Login_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Login_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Login_Rsp*>(
               &_Msg_ServerInner_GG_Login_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_ServerInner_GG_Login_Rsp& a, Msg_ServerInner_GG_Login_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Login_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Login_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Login_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Login_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Login_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Login_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Login_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Login_Rsp";
  }
  protected:
  explicit Msg_ServerInner_GG_Login_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrUserNameFieldNumber = 8,
    kLlUserIdFieldNumber = 1,
    kEFlagFieldNumber = 2,
    kISeqIdFieldNumber = 3,
    kLlRoleIdFieldNumber = 4,
    kBRequestFieldNumber = 5,
    kEStateFieldNumber = 6,
    kLlOpenDateFieldNumber = 7,
    kUiBanTimeFieldNumber = 9,
  };
  // string strUserName = 8;
  void clear_strusername();
  const std::string& strusername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strusername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strusername();
  PROTOBUF_NODISCARD std::string* release_strusername();
  void set_allocated_strusername(std::string* strusername);
  private:
  const std::string& _internal_strusername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strusername(const std::string& value);
  std::string* _internal_mutable_strusername();
  public:

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eFlag = 2;
  void clear_eflag();
  ::ProtoMsg::ResultCode eflag() const;
  void set_eflag(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_eflag() const;
  void _internal_set_eflag(::ProtoMsg::ResultCode value);
  public:

  // int32 iSeqId = 3;
  void clear_iseqid();
  int32_t iseqid() const;
  void set_iseqid(int32_t value);
  private:
  int32_t _internal_iseqid() const;
  void _internal_set_iseqid(int32_t value);
  public:

  // int64 llRoleId = 4;
  void clear_llroleid();
  int64_t llroleid() const;
  void set_llroleid(int64_t value);
  private:
  int64_t _internal_llroleid() const;
  void _internal_set_llroleid(int64_t value);
  public:

  // bool bRequest = 5;
  void clear_brequest();
  bool brequest() const;
  void set_brequest(bool value);
  private:
  bool _internal_brequest() const;
  void _internal_set_brequest(bool value);
  public:

  // .ProtoMsg.EPlayerStatus eState = 6;
  void clear_estate();
  ::ProtoMsg::EPlayerStatus estate() const;
  void set_estate(::ProtoMsg::EPlayerStatus value);
  private:
  ::ProtoMsg::EPlayerStatus _internal_estate() const;
  void _internal_set_estate(::ProtoMsg::EPlayerStatus value);
  public:

  // int64 llOpenDate = 7;
  void clear_llopendate();
  int64_t llopendate() const;
  void set_llopendate(int64_t value);
  private:
  int64_t _internal_llopendate() const;
  void _internal_set_llopendate(int64_t value);
  public:

  // uint32 uiBanTime = 9;
  void clear_uibantime();
  uint32_t uibantime() const;
  void set_uibantime(uint32_t value);
  private:
  uint32_t _internal_uibantime() const;
  void _internal_set_uibantime(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Login_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strusername_;
  int64_t lluserid_;
  int eflag_;
  int32_t iseqid_;
  int64_t llroleid_;
  bool brequest_;
  int estate_;
  int64_t llopendate_;
  uint32_t uibantime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Create_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Create_Req) */ {
 public:
  inline Msg_ServerInner_GG_Create_Req() : Msg_ServerInner_GG_Create_Req(nullptr) {}
  ~Msg_ServerInner_GG_Create_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Create_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Create_Req(const Msg_ServerInner_GG_Create_Req& from);
  Msg_ServerInner_GG_Create_Req(Msg_ServerInner_GG_Create_Req&& from) noexcept
    : Msg_ServerInner_GG_Create_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Create_Req& operator=(const Msg_ServerInner_GG_Create_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Create_Req& operator=(Msg_ServerInner_GG_Create_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Create_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Create_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Create_Req*>(
               &_Msg_ServerInner_GG_Create_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_ServerInner_GG_Create_Req& a, Msg_ServerInner_GG_Create_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Create_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Create_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Create_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Create_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Create_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Create_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Create_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Create_Req";
  }
  protected:
  explicit Msg_ServerInner_GG_Create_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrUserNameFieldNumber = 4,
    kLlUserIdFieldNumber = 1,
    kUiCareerIdFieldNumber = 2,
    kUiGenderFieldNumber = 3,
    kUiIconIdFieldNumber = 5,
    kUiSeqIdFieldNumber = 6,
  };
  // string strUserName = 4;
  void clear_strusername();
  const std::string& strusername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strusername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strusername();
  PROTOBUF_NODISCARD std::string* release_strusername();
  void set_allocated_strusername(std::string* strusername);
  private:
  const std::string& _internal_strusername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strusername(const std::string& value);
  std::string* _internal_mutable_strusername();
  public:

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // uint32 uiCareerId = 2;
  void clear_uicareerid();
  uint32_t uicareerid() const;
  void set_uicareerid(uint32_t value);
  private:
  uint32_t _internal_uicareerid() const;
  void _internal_set_uicareerid(uint32_t value);
  public:

  // uint32 uiGender = 3;
  void clear_uigender();
  uint32_t uigender() const;
  void set_uigender(uint32_t value);
  private:
  uint32_t _internal_uigender() const;
  void _internal_set_uigender(uint32_t value);
  public:

  // uint32 uiIconId = 5;
  void clear_uiiconid();
  uint32_t uiiconid() const;
  void set_uiiconid(uint32_t value);
  private:
  uint32_t _internal_uiiconid() const;
  void _internal_set_uiiconid(uint32_t value);
  public:

  // uint32 uiSeqId = 6;
  void clear_uiseqid();
  uint32_t uiseqid() const;
  void set_uiseqid(uint32_t value);
  private:
  uint32_t _internal_uiseqid() const;
  void _internal_set_uiseqid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Create_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strusername_;
  int64_t lluserid_;
  uint32_t uicareerid_;
  uint32_t uigender_;
  uint32_t uiiconid_;
  uint32_t uiseqid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Create_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Create_Rsp) */ {
 public:
  inline Msg_ServerInner_GG_Create_Rsp() : Msg_ServerInner_GG_Create_Rsp(nullptr) {}
  ~Msg_ServerInner_GG_Create_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Create_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Create_Rsp(const Msg_ServerInner_GG_Create_Rsp& from);
  Msg_ServerInner_GG_Create_Rsp(Msg_ServerInner_GG_Create_Rsp&& from) noexcept
    : Msg_ServerInner_GG_Create_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Create_Rsp& operator=(const Msg_ServerInner_GG_Create_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Create_Rsp& operator=(Msg_ServerInner_GG_Create_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Create_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Create_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Create_Rsp*>(
               &_Msg_ServerInner_GG_Create_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Msg_ServerInner_GG_Create_Rsp& a, Msg_ServerInner_GG_Create_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Create_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Create_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Create_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Create_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Create_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Create_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Create_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Create_Rsp";
  }
  protected:
  explicit Msg_ServerInner_GG_Create_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrUserNameFieldNumber = 2,
    kLlUserIdFieldNumber = 1,
    kLlCreateTimeFieldNumber = 5,
    kILevelFieldNumber = 4,
    kECodeFieldNumber = 6,
    kISeqIdFieldNumber = 7,
  };
  // string strUserName = 2;
  void clear_strusername();
  const std::string& strusername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strusername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strusername();
  PROTOBUF_NODISCARD std::string* release_strusername();
  void set_allocated_strusername(std::string* strusername);
  private:
  const std::string& _internal_strusername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strusername(const std::string& value);
  std::string* _internal_mutable_strusername();
  public:

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // int64 llCreateTime = 5;
  void clear_llcreatetime();
  int64_t llcreatetime() const;
  void set_llcreatetime(int64_t value);
  private:
  int64_t _internal_llcreatetime() const;
  void _internal_set_llcreatetime(int64_t value);
  public:

  // int32 iLevel = 4;
  void clear_ilevel();
  int32_t ilevel() const;
  void set_ilevel(int32_t value);
  private:
  int32_t _internal_ilevel() const;
  void _internal_set_ilevel(int32_t value);
  public:

  // .ProtoMsg.ResultCode eCode = 6;
  void clear_ecode();
  ::ProtoMsg::ResultCode ecode() const;
  void set_ecode(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_ecode() const;
  void _internal_set_ecode(::ProtoMsg::ResultCode value);
  public:

  // int32 iSeqId = 7;
  void clear_iseqid();
  int32_t iseqid() const;
  void set_iseqid(int32_t value);
  private:
  int32_t _internal_iseqid() const;
  void _internal_set_iseqid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Create_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strusername_;
  int64_t lluserid_;
  int64_t llcreatetime_;
  int32_t ilevel_;
  int ecode_;
  int32_t iseqid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Save_Ntf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Save_Ntf) */ {
 public:
  inline Msg_ServerInner_GG_Save_Ntf() : Msg_ServerInner_GG_Save_Ntf(nullptr) {}
  ~Msg_ServerInner_GG_Save_Ntf() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Save_Ntf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Save_Ntf(const Msg_ServerInner_GG_Save_Ntf& from);
  Msg_ServerInner_GG_Save_Ntf(Msg_ServerInner_GG_Save_Ntf&& from) noexcept
    : Msg_ServerInner_GG_Save_Ntf() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Save_Ntf& operator=(const Msg_ServerInner_GG_Save_Ntf& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Save_Ntf& operator=(Msg_ServerInner_GG_Save_Ntf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Save_Ntf& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Save_Ntf* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Save_Ntf*>(
               &_Msg_ServerInner_GG_Save_Ntf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Msg_ServerInner_GG_Save_Ntf& a, Msg_ServerInner_GG_Save_Ntf& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Save_Ntf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Save_Ntf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Save_Ntf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Save_Ntf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Save_Ntf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Save_Ntf& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Save_Ntf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Save_Ntf";
  }
  protected:
  explicit Msg_ServerInner_GG_Save_Ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrMsgFieldNumber = 3,
    kLlPlayerIdFieldNumber = 1,
    kUiSaveFlagFieldNumber = 2,
    kUiGateIdFieldNumber = 4,
  };
  // string strMsg = 3;
  void clear_strmsg();
  const std::string& strmsg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strmsg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strmsg();
  PROTOBUF_NODISCARD std::string* release_strmsg();
  void set_allocated_strmsg(std::string* strmsg);
  private:
  const std::string& _internal_strmsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strmsg(const std::string& value);
  std::string* _internal_mutable_strmsg();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiSaveFlag = 2;
  void clear_uisaveflag();
  uint32_t uisaveflag() const;
  void set_uisaveflag(uint32_t value);
  private:
  uint32_t _internal_uisaveflag() const;
  void _internal_set_uisaveflag(uint32_t value);
  public:

  // uint32 uiGateId = 4;
  void clear_uigateid();
  uint32_t uigateid() const;
  void set_uigateid(uint32_t value);
  private:
  uint32_t _internal_uigateid() const;
  void _internal_set_uigateid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Save_Ntf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strmsg_;
  int64_t llplayerid_;
  uint32_t uisaveflag_;
  uint32_t uigateid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Kick_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Kick_Notify) */ {
 public:
  inline Msg_ServerInner_GG_Kick_Notify() : Msg_ServerInner_GG_Kick_Notify(nullptr) {}
  ~Msg_ServerInner_GG_Kick_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Kick_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Kick_Notify(const Msg_ServerInner_GG_Kick_Notify& from);
  Msg_ServerInner_GG_Kick_Notify(Msg_ServerInner_GG_Kick_Notify&& from) noexcept
    : Msg_ServerInner_GG_Kick_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Kick_Notify& operator=(const Msg_ServerInner_GG_Kick_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Kick_Notify& operator=(Msg_ServerInner_GG_Kick_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Kick_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Kick_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Kick_Notify*>(
               &_Msg_ServerInner_GG_Kick_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Msg_ServerInner_GG_Kick_Notify& a, Msg_ServerInner_GG_Kick_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Kick_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Kick_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Kick_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Kick_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Kick_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Kick_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Kick_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Kick_Notify";
  }
  protected:
  explicit Msg_ServerInner_GG_Kick_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUserIdFieldNumber = 1,
    kUiSaveFlagFieldNumber = 2,
    kUiSeqIdFieldNumber = 3,
    kECodeFieldNumber = 4,
  };
  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // int32 uiSaveFlag = 2;
  void clear_uisaveflag();
  int32_t uisaveflag() const;
  void set_uisaveflag(int32_t value);
  private:
  int32_t _internal_uisaveflag() const;
  void _internal_set_uisaveflag(int32_t value);
  public:

  // int32 uiSeqId = 3;
  void clear_uiseqid();
  int32_t uiseqid() const;
  void set_uiseqid(int32_t value);
  private:
  int32_t _internal_uiseqid() const;
  void _internal_set_uiseqid(int32_t value);
  public:

  // .ProtoMsg.ResultCode eCode = 4;
  void clear_ecode();
  ::ProtoMsg::ResultCode ecode() const;
  void set_ecode(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_ecode() const;
  void _internal_set_ecode(::ProtoMsg::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Kick_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t lluserid_;
  int32_t uisaveflag_;
  int32_t uiseqid_;
  int ecode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GG_Msg_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GG_Msg_Notify) */ {
 public:
  inline Msg_ServerInner_GG_Msg_Notify() : Msg_ServerInner_GG_Msg_Notify(nullptr) {}
  ~Msg_ServerInner_GG_Msg_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GG_Msg_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GG_Msg_Notify(const Msg_ServerInner_GG_Msg_Notify& from);
  Msg_ServerInner_GG_Msg_Notify(Msg_ServerInner_GG_Msg_Notify&& from) noexcept
    : Msg_ServerInner_GG_Msg_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GG_Msg_Notify& operator=(const Msg_ServerInner_GG_Msg_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GG_Msg_Notify& operator=(Msg_ServerInner_GG_Msg_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GG_Msg_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GG_Msg_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GG_Msg_Notify*>(
               &_Msg_ServerInner_GG_Msg_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_ServerInner_GG_Msg_Notify& a, Msg_ServerInner_GG_Msg_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GG_Msg_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GG_Msg_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GG_Msg_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GG_Msg_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GG_Msg_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GG_Msg_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GG_Msg_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GG_Msg_Notify";
  }
  protected:
  explicit Msg_ServerInner_GG_Msg_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecPlayerIdFieldNumber = 1,
    kStrCmdMsgFieldNumber = 2,
    kUiModuleIdFieldNumber = 3,
    kUiCmdIdFieldNumber = 4,
    kUiIntervalFieldNumber = 5,
  };
  // repeated int64 vecPlayerId = 1;
  int vecplayerid_size() const;
  private:
  int _internal_vecplayerid_size() const;
  public:
  void clear_vecplayerid();
  private:
  int64_t _internal_vecplayerid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_vecplayerid() const;
  void _internal_add_vecplayerid(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_vecplayerid();
  public:
  int64_t vecplayerid(int index) const;
  void set_vecplayerid(int index, int64_t value);
  void add_vecplayerid(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      vecplayerid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_vecplayerid();

  // bytes strCmdMsg = 2;
  void clear_strcmdmsg();
  const std::string& strcmdmsg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strcmdmsg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strcmdmsg();
  PROTOBUF_NODISCARD std::string* release_strcmdmsg();
  void set_allocated_strcmdmsg(std::string* strcmdmsg);
  private:
  const std::string& _internal_strcmdmsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strcmdmsg(const std::string& value);
  std::string* _internal_mutable_strcmdmsg();
  public:

  // uint32 uiModuleId = 3;
  void clear_uimoduleid();
  uint32_t uimoduleid() const;
  void set_uimoduleid(uint32_t value);
  private:
  uint32_t _internal_uimoduleid() const;
  void _internal_set_uimoduleid(uint32_t value);
  public:

  // uint32 uiCmdId = 4;
  void clear_uicmdid();
  uint32_t uicmdid() const;
  void set_uicmdid(uint32_t value);
  private:
  uint32_t _internal_uicmdid() const;
  void _internal_set_uicmdid(uint32_t value);
  public:

  // uint32 uiInterval = 5;
  void clear_uiinterval();
  uint32_t uiinterval() const;
  void set_uiinterval(uint32_t value);
  private:
  uint32_t _internal_uiinterval() const;
  void _internal_set_uiinterval(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GG_Msg_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > vecplayerid_;
  mutable std::atomic<int> _vecplayerid_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcmdmsg_;
  uint32_t uimoduleid_;
  uint32_t uicmdid_;
  uint32_t uiinterval_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_RecordOnline final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_RecordOnline) */ {
 public:
  inline Msg_ServerInner_GS_RecordOnline() : Msg_ServerInner_GS_RecordOnline(nullptr) {}
  ~Msg_ServerInner_GS_RecordOnline() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_RecordOnline(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_RecordOnline(const Msg_ServerInner_GS_RecordOnline& from);
  Msg_ServerInner_GS_RecordOnline(Msg_ServerInner_GS_RecordOnline&& from) noexcept
    : Msg_ServerInner_GS_RecordOnline() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_RecordOnline& operator=(const Msg_ServerInner_GS_RecordOnline& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_RecordOnline& operator=(Msg_ServerInner_GS_RecordOnline&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_RecordOnline& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_RecordOnline* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_RecordOnline*>(
               &_Msg_ServerInner_GS_RecordOnline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg_ServerInner_GS_RecordOnline& a, Msg_ServerInner_GS_RecordOnline& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_RecordOnline* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_RecordOnline* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_RecordOnline* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_RecordOnline>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_RecordOnline& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_RecordOnline& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_RecordOnline* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_RecordOnline";
  }
  protected:
  explicit Msg_ServerInner_GS_RecordOnline(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrIpFieldNumber = 5,
    kStrVersionFieldNumber = 9,
    kLlCurTimeFieldNumber = 2,
    kUiServerIdFieldNumber = 1,
    kUiOnlineNumFieldNumber = 3,
    kUiWaitNumFieldNumber = 4,
    kUiPortFieldNumber = 6,
    kUiAreaNoFieldNumber = 7,
    kUiMaxNumFieldNumber = 8,
  };
  // string strIp = 5;
  void clear_strip();
  const std::string& strip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strip();
  PROTOBUF_NODISCARD std::string* release_strip();
  void set_allocated_strip(std::string* strip);
  private:
  const std::string& _internal_strip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strip(const std::string& value);
  std::string* _internal_mutable_strip();
  public:

  // string strVersion = 9;
  void clear_strversion();
  const std::string& strversion() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strversion(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strversion();
  PROTOBUF_NODISCARD std::string* release_strversion();
  void set_allocated_strversion(std::string* strversion);
  private:
  const std::string& _internal_strversion() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strversion(const std::string& value);
  std::string* _internal_mutable_strversion();
  public:

  // int64 llCurTime = 2;
  void clear_llcurtime();
  int64_t llcurtime() const;
  void set_llcurtime(int64_t value);
  private:
  int64_t _internal_llcurtime() const;
  void _internal_set_llcurtime(int64_t value);
  public:

  // uint32 uiServerId = 1;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // uint32 uiOnlineNum = 3;
  void clear_uionlinenum();
  uint32_t uionlinenum() const;
  void set_uionlinenum(uint32_t value);
  private:
  uint32_t _internal_uionlinenum() const;
  void _internal_set_uionlinenum(uint32_t value);
  public:

  // uint32 uiWaitNum = 4;
  void clear_uiwaitnum();
  uint32_t uiwaitnum() const;
  void set_uiwaitnum(uint32_t value);
  private:
  uint32_t _internal_uiwaitnum() const;
  void _internal_set_uiwaitnum(uint32_t value);
  public:

  // uint32 uiPort = 6;
  void clear_uiport();
  uint32_t uiport() const;
  void set_uiport(uint32_t value);
  private:
  uint32_t _internal_uiport() const;
  void _internal_set_uiport(uint32_t value);
  public:

  // uint32 uiAreaNo = 7;
  void clear_uiareano();
  uint32_t uiareano() const;
  void set_uiareano(uint32_t value);
  private:
  uint32_t _internal_uiareano() const;
  void _internal_set_uiareano(uint32_t value);
  public:

  // uint32 uiMaxNum = 8;
  void clear_uimaxnum();
  uint32_t uimaxnum() const;
  void set_uimaxnum(uint32_t value);
  private:
  uint32_t _internal_uimaxnum() const;
  void _internal_set_uimaxnum(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_RecordOnline)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strversion_;
  int64_t llcurtime_;
  uint32_t uiserverid_;
  uint32_t uionlinenum_;
  uint32_t uiwaitnum_;
  uint32_t uiport_;
  uint32_t uiareano_;
  uint32_t uimaxnum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_ClearOnline final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_ClearOnline) */ {
 public:
  inline Msg_ServerInner_GS_ClearOnline() : Msg_ServerInner_GS_ClearOnline(nullptr) {}
  ~Msg_ServerInner_GS_ClearOnline() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_ClearOnline(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_ClearOnline(const Msg_ServerInner_GS_ClearOnline& from);
  Msg_ServerInner_GS_ClearOnline(Msg_ServerInner_GS_ClearOnline&& from) noexcept
    : Msg_ServerInner_GS_ClearOnline() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_ClearOnline& operator=(const Msg_ServerInner_GS_ClearOnline& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_ClearOnline& operator=(Msg_ServerInner_GS_ClearOnline&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_ClearOnline& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_ClearOnline* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_ClearOnline*>(
               &_Msg_ServerInner_GS_ClearOnline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Msg_ServerInner_GS_ClearOnline& a, Msg_ServerInner_GS_ClearOnline& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_ClearOnline* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_ClearOnline* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_ClearOnline* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_ClearOnline>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_ClearOnline& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_ClearOnline& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_ClearOnline* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_ClearOnline";
  }
  protected:
  explicit Msg_ServerInner_GS_ClearOnline(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlCurTimeFieldNumber = 2,
    kUiServerIdFieldNumber = 1,
    kUiAreaNoFieldNumber = 3,
  };
  // int64 llCurTime = 2;
  void clear_llcurtime();
  int64_t llcurtime() const;
  void set_llcurtime(int64_t value);
  private:
  int64_t _internal_llcurtime() const;
  void _internal_set_llcurtime(int64_t value);
  public:

  // uint32 uiServerId = 1;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // uint32 uiAreaNo = 3;
  void clear_uiareano();
  uint32_t uiareano() const;
  void set_uiareano(uint32_t value);
  private:
  uint32_t _internal_uiareano() const;
  void _internal_set_uiareano(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_ClearOnline)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llcurtime_;
  uint32_t uiserverid_;
  uint32_t uiareano_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_NotifyOnline final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_NotifyOnline) */ {
 public:
  inline Msg_ServerInner_GS_NotifyOnline() : Msg_ServerInner_GS_NotifyOnline(nullptr) {}
  ~Msg_ServerInner_GS_NotifyOnline() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_NotifyOnline(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_NotifyOnline(const Msg_ServerInner_GS_NotifyOnline& from);
  Msg_ServerInner_GS_NotifyOnline(Msg_ServerInner_GS_NotifyOnline&& from) noexcept
    : Msg_ServerInner_GS_NotifyOnline() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_NotifyOnline& operator=(const Msg_ServerInner_GS_NotifyOnline& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_NotifyOnline& operator=(Msg_ServerInner_GS_NotifyOnline&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_NotifyOnline& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_NotifyOnline* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_NotifyOnline*>(
               &_Msg_ServerInner_GS_NotifyOnline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Msg_ServerInner_GS_NotifyOnline& a, Msg_ServerInner_GS_NotifyOnline& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_NotifyOnline* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_NotifyOnline* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_NotifyOnline* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_NotifyOnline>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_NotifyOnline& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_NotifyOnline& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_NotifyOnline* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_NotifyOnline";
  }
  protected:
  explicit Msg_ServerInner_GS_NotifyOnline(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlPlayerIdFieldNumber = 2,
    kLlCurTimeFieldNumber = 3,
    kUiServerIdFieldNumber = 1,
  };
  // int64 llPlayerId = 2;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // int64 llCurTime = 3;
  void clear_llcurtime();
  int64_t llcurtime() const;
  void set_llcurtime(int64_t value);
  private:
  int64_t _internal_llcurtime() const;
  void _internal_set_llcurtime(int64_t value);
  public:

  // uint32 uiServerId = 1;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_NotifyOnline)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llplayerid_;
  int64_t llcurtime_;
  uint32_t uiserverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_NotifyLogout final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_NotifyLogout) */ {
 public:
  inline Msg_ServerInner_GS_NotifyLogout() : Msg_ServerInner_GS_NotifyLogout(nullptr) {}
  ~Msg_ServerInner_GS_NotifyLogout() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_NotifyLogout(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_NotifyLogout(const Msg_ServerInner_GS_NotifyLogout& from);
  Msg_ServerInner_GS_NotifyLogout(Msg_ServerInner_GS_NotifyLogout&& from) noexcept
    : Msg_ServerInner_GS_NotifyLogout() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_NotifyLogout& operator=(const Msg_ServerInner_GS_NotifyLogout& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_NotifyLogout& operator=(Msg_ServerInner_GS_NotifyLogout&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_NotifyLogout& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_NotifyLogout* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_NotifyLogout*>(
               &_Msg_ServerInner_GS_NotifyLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Msg_ServerInner_GS_NotifyLogout& a, Msg_ServerInner_GS_NotifyLogout& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_NotifyLogout* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_NotifyLogout* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_NotifyLogout* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_NotifyLogout>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_NotifyLogout& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_NotifyLogout& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_NotifyLogout* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_NotifyLogout";
  }
  protected:
  explicit Msg_ServerInner_GS_NotifyLogout(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlPlayerIdFieldNumber = 2,
    kLlCurTimeFieldNumber = 3,
    kUiServerIdFieldNumber = 1,
  };
  // int64 llPlayerId = 2;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // int64 llCurTime = 3;
  void clear_llcurtime();
  int64_t llcurtime() const;
  void set_llcurtime(int64_t value);
  private:
  int64_t _internal_llcurtime() const;
  void _internal_set_llcurtime(int64_t value);
  public:

  // uint32 uiServerId = 1;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_NotifyLogout)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llplayerid_;
  int64_t llcurtime_;
  uint32_t uiserverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_PlayerLoginReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq) */ {
 public:
  inline Msg_ServerInner_GS_PlayerLoginReq() : Msg_ServerInner_GS_PlayerLoginReq(nullptr) {}
  ~Msg_ServerInner_GS_PlayerLoginReq() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_PlayerLoginReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_PlayerLoginReq(const Msg_ServerInner_GS_PlayerLoginReq& from);
  Msg_ServerInner_GS_PlayerLoginReq(Msg_ServerInner_GS_PlayerLoginReq&& from) noexcept
    : Msg_ServerInner_GS_PlayerLoginReq() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_PlayerLoginReq& operator=(const Msg_ServerInner_GS_PlayerLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_PlayerLoginReq& operator=(Msg_ServerInner_GS_PlayerLoginReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_PlayerLoginReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_PlayerLoginReq* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_PlayerLoginReq*>(
               &_Msg_ServerInner_GS_PlayerLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Msg_ServerInner_GS_PlayerLoginReq& a, Msg_ServerInner_GS_PlayerLoginReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_PlayerLoginReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_PlayerLoginReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_PlayerLoginReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_PlayerLoginReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_PlayerLoginReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_PlayerLoginReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_PlayerLoginReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq";
  }
  protected:
  explicit Msg_ServerInner_GS_PlayerLoginReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrSessionIdFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kUiServerIdFieldNumber = 3,
  };
  // string strSessionId = 2;
  void clear_strsessionid();
  const std::string& strsessionid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strsessionid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strsessionid();
  PROTOBUF_NODISCARD std::string* release_strsessionid();
  void set_allocated_strsessionid(std::string* strsessionid);
  private:
  const std::string& _internal_strsessionid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strsessionid(const std::string& value);
  std::string* _internal_mutable_strsessionid();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiServerId = 3;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strsessionid_;
  int64_t llplayerid_;
  uint32_t uiserverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_PlayerLoginRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp) */ {
 public:
  inline Msg_ServerInner_GS_PlayerLoginRsp() : Msg_ServerInner_GS_PlayerLoginRsp(nullptr) {}
  ~Msg_ServerInner_GS_PlayerLoginRsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_PlayerLoginRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_PlayerLoginRsp(const Msg_ServerInner_GS_PlayerLoginRsp& from);
  Msg_ServerInner_GS_PlayerLoginRsp(Msg_ServerInner_GS_PlayerLoginRsp&& from) noexcept
    : Msg_ServerInner_GS_PlayerLoginRsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_PlayerLoginRsp& operator=(const Msg_ServerInner_GS_PlayerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_PlayerLoginRsp& operator=(Msg_ServerInner_GS_PlayerLoginRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_PlayerLoginRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_PlayerLoginRsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_PlayerLoginRsp*>(
               &_Msg_ServerInner_GS_PlayerLoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Msg_ServerInner_GS_PlayerLoginRsp& a, Msg_ServerInner_GS_PlayerLoginRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_PlayerLoginRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_PlayerLoginRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_PlayerLoginRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_PlayerLoginRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_PlayerLoginRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_PlayerLoginRsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_PlayerLoginRsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp";
  }
  protected:
  explicit Msg_ServerInner_GS_PlayerLoginRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrProvinceNameFieldNumber = 5,
    kStrSessionIdFieldNumber = 6,
    kStrDevIdFieldNumber = 8,
    kStrChannelFieldNumber = 10,
    kStrPlayerNameFieldNumber = 11,
    kStrCityCodeFieldNumber = 12,
    kLlPlayerIdFieldNumber = 1,
    kEResultFieldNumber = 2,
    kUiGameIdFieldNumber = 3,
    kUiProvinceFieldNumber = 4,
    kUiGmLevelFieldNumber = 7,
    kUiProAreaFieldNumber = 9,
  };
  // string strProvinceName = 5;
  void clear_strprovincename();
  const std::string& strprovincename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strprovincename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strprovincename();
  PROTOBUF_NODISCARD std::string* release_strprovincename();
  void set_allocated_strprovincename(std::string* strprovincename);
  private:
  const std::string& _internal_strprovincename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strprovincename(const std::string& value);
  std::string* _internal_mutable_strprovincename();
  public:

  // string strSessionId = 6;
  void clear_strsessionid();
  const std::string& strsessionid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strsessionid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strsessionid();
  PROTOBUF_NODISCARD std::string* release_strsessionid();
  void set_allocated_strsessionid(std::string* strsessionid);
  private:
  const std::string& _internal_strsessionid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strsessionid(const std::string& value);
  std::string* _internal_mutable_strsessionid();
  public:

  // string strDevId = 8;
  void clear_strdevid();
  const std::string& strdevid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strdevid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strdevid();
  PROTOBUF_NODISCARD std::string* release_strdevid();
  void set_allocated_strdevid(std::string* strdevid);
  private:
  const std::string& _internal_strdevid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strdevid(const std::string& value);
  std::string* _internal_mutable_strdevid();
  public:

  // string strChannel = 10;
  void clear_strchannel();
  const std::string& strchannel() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strchannel(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strchannel();
  PROTOBUF_NODISCARD std::string* release_strchannel();
  void set_allocated_strchannel(std::string* strchannel);
  private:
  const std::string& _internal_strchannel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strchannel(const std::string& value);
  std::string* _internal_mutable_strchannel();
  public:

  // string strPlayerName = 11;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // string strCityCode = 12;
  void clear_strcitycode();
  const std::string& strcitycode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strcitycode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strcitycode();
  PROTOBUF_NODISCARD std::string* release_strcitycode();
  void set_allocated_strcitycode(std::string* strcitycode);
  private:
  const std::string& _internal_strcitycode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strcitycode(const std::string& value);
  std::string* _internal_mutable_strcitycode();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eResult = 2;
  void clear_eresult();
  ::ProtoMsg::ResultCode eresult() const;
  void set_eresult(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_eresult() const;
  void _internal_set_eresult(::ProtoMsg::ResultCode value);
  public:

  // uint32 uiGameId = 3;
  void clear_uigameid();
  uint32_t uigameid() const;
  void set_uigameid(uint32_t value);
  private:
  uint32_t _internal_uigameid() const;
  void _internal_set_uigameid(uint32_t value);
  public:

  // uint32 uiProvince = 4;
  void clear_uiprovince();
  uint32_t uiprovince() const;
  void set_uiprovince(uint32_t value);
  private:
  uint32_t _internal_uiprovince() const;
  void _internal_set_uiprovince(uint32_t value);
  public:

  // uint32 uiGmLevel = 7;
  void clear_uigmlevel();
  uint32_t uigmlevel() const;
  void set_uigmlevel(uint32_t value);
  private:
  uint32_t _internal_uigmlevel() const;
  void _internal_set_uigmlevel(uint32_t value);
  public:

  // uint32 uiProArea = 9;
  void clear_uiproarea();
  uint32_t uiproarea() const;
  void set_uiproarea(uint32_t value);
  private:
  uint32_t _internal_uiproarea() const;
  void _internal_set_uiproarea(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strprovincename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strsessionid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strdevid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strchannel_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcitycode_;
  int64_t llplayerid_;
  int eresult_;
  uint32_t uigameid_;
  uint32_t uiprovince_;
  uint32_t uigmlevel_;
  uint32_t uiproarea_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_UniqueIdReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq) */ {
 public:
  inline Msg_ServerInner_GS_UniqueIdReq() : Msg_ServerInner_GS_UniqueIdReq(nullptr) {}
  ~Msg_ServerInner_GS_UniqueIdReq() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_UniqueIdReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_UniqueIdReq(const Msg_ServerInner_GS_UniqueIdReq& from);
  Msg_ServerInner_GS_UniqueIdReq(Msg_ServerInner_GS_UniqueIdReq&& from) noexcept
    : Msg_ServerInner_GS_UniqueIdReq() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_UniqueIdReq& operator=(const Msg_ServerInner_GS_UniqueIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_UniqueIdReq& operator=(Msg_ServerInner_GS_UniqueIdReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_UniqueIdReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_UniqueIdReq* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_UniqueIdReq*>(
               &_Msg_ServerInner_GS_UniqueIdReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Msg_ServerInner_GS_UniqueIdReq& a, Msg_ServerInner_GS_UniqueIdReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_UniqueIdReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_UniqueIdReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_UniqueIdReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_UniqueIdReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_UniqueIdReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_UniqueIdReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_UniqueIdReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_UniqueIdReq";
  }
  protected:
  explicit Msg_ServerInner_GS_UniqueIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPlayerNameFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kUiServerIdFieldNumber = 3,
  };
  // string strPlayerName = 2;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiServerId = 3;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  int64_t llplayerid_;
  uint32_t uiserverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_UniqueIdRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp) */ {
 public:
  inline Msg_ServerInner_GS_UniqueIdRsp() : Msg_ServerInner_GS_UniqueIdRsp(nullptr) {}
  ~Msg_ServerInner_GS_UniqueIdRsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_UniqueIdRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_UniqueIdRsp(const Msg_ServerInner_GS_UniqueIdRsp& from);
  Msg_ServerInner_GS_UniqueIdRsp(Msg_ServerInner_GS_UniqueIdRsp&& from) noexcept
    : Msg_ServerInner_GS_UniqueIdRsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_UniqueIdRsp& operator=(const Msg_ServerInner_GS_UniqueIdRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_UniqueIdRsp& operator=(Msg_ServerInner_GS_UniqueIdRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_UniqueIdRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_UniqueIdRsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_UniqueIdRsp*>(
               &_Msg_ServerInner_GS_UniqueIdRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Msg_ServerInner_GS_UniqueIdRsp& a, Msg_ServerInner_GS_UniqueIdRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_UniqueIdRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_UniqueIdRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_UniqueIdRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_UniqueIdRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_UniqueIdRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_UniqueIdRsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_UniqueIdRsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp";
  }
  protected:
  explicit Msg_ServerInner_GS_UniqueIdRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPlayerNameFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kERetFieldNumber = 3,
  };
  // string strPlayerName = 2;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eRet = 3;
  void clear_eret();
  ::ProtoMsg::ResultCode eret() const;
  void set_eret(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_eret() const;
  void _internal_set_eret(::ProtoMsg::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  int64_t llplayerid_;
  int eret_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_KickPlayerNotify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_KickPlayerNotify) */ {
 public:
  inline Msg_ServerInner_GS_KickPlayerNotify() : Msg_ServerInner_GS_KickPlayerNotify(nullptr) {}
  ~Msg_ServerInner_GS_KickPlayerNotify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_KickPlayerNotify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_KickPlayerNotify(const Msg_ServerInner_GS_KickPlayerNotify& from);
  Msg_ServerInner_GS_KickPlayerNotify(Msg_ServerInner_GS_KickPlayerNotify&& from) noexcept
    : Msg_ServerInner_GS_KickPlayerNotify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_KickPlayerNotify& operator=(const Msg_ServerInner_GS_KickPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_KickPlayerNotify& operator=(Msg_ServerInner_GS_KickPlayerNotify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_KickPlayerNotify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_KickPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_KickPlayerNotify*>(
               &_Msg_ServerInner_GS_KickPlayerNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Msg_ServerInner_GS_KickPlayerNotify& a, Msg_ServerInner_GS_KickPlayerNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_KickPlayerNotify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_KickPlayerNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_KickPlayerNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_KickPlayerNotify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_KickPlayerNotify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_KickPlayerNotify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_KickPlayerNotify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_KickPlayerNotify";
  }
  protected:
  explicit Msg_ServerInner_GS_KickPlayerNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlPlayerIdFieldNumber = 1,
  };
  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_KickPlayerNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llplayerid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_TransmitNotify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_TransmitNotify) */ {
 public:
  inline Msg_ServerInner_GS_TransmitNotify() : Msg_ServerInner_GS_TransmitNotify(nullptr) {}
  ~Msg_ServerInner_GS_TransmitNotify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_TransmitNotify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_TransmitNotify(const Msg_ServerInner_GS_TransmitNotify& from);
  Msg_ServerInner_GS_TransmitNotify(Msg_ServerInner_GS_TransmitNotify&& from) noexcept
    : Msg_ServerInner_GS_TransmitNotify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_TransmitNotify& operator=(const Msg_ServerInner_GS_TransmitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_TransmitNotify& operator=(Msg_ServerInner_GS_TransmitNotify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_TransmitNotify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_TransmitNotify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_TransmitNotify*>(
               &_Msg_ServerInner_GS_TransmitNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Msg_ServerInner_GS_TransmitNotify& a, Msg_ServerInner_GS_TransmitNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_TransmitNotify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_TransmitNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_TransmitNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_TransmitNotify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_TransmitNotify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_TransmitNotify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_TransmitNotify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_TransmitNotify";
  }
  protected:
  explicit Msg_ServerInner_GS_TransmitNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPlayerNameFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kUiServerIdFieldNumber = 3,
    kUiAreaNoFieldNumber = 4,
    kBGmFieldNumber = 5,
  };
  // string strPlayerName = 2;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiServerId = 3;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // uint32 uiAreaNo = 4;
  void clear_uiareano();
  uint32_t uiareano() const;
  void set_uiareano(uint32_t value);
  private:
  uint32_t _internal_uiareano() const;
  void _internal_set_uiareano(uint32_t value);
  public:

  // bool bGm = 5;
  void clear_bgm();
  bool bgm() const;
  void set_bgm(bool value);
  private:
  bool _internal_bgm() const;
  void _internal_set_bgm(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_TransmitNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  int64_t llplayerid_;
  uint32_t uiserverid_;
  uint32_t uiareano_;
  bool bgm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_WMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_WMsg) */ {
 public:
  inline Msg_ServerInner_GS_WMsg() : Msg_ServerInner_GS_WMsg(nullptr) {}
  ~Msg_ServerInner_GS_WMsg() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_WMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_WMsg(const Msg_ServerInner_GS_WMsg& from);
  Msg_ServerInner_GS_WMsg(Msg_ServerInner_GS_WMsg&& from) noexcept
    : Msg_ServerInner_GS_WMsg() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_WMsg& operator=(const Msg_ServerInner_GS_WMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_WMsg& operator=(Msg_ServerInner_GS_WMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_WMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_WMsg* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_WMsg*>(
               &_Msg_ServerInner_GS_WMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Msg_ServerInner_GS_WMsg& a, Msg_ServerInner_GS_WMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_WMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_WMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_WMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_WMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_WMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_WMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_WMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_WMsg";
  }
  protected:
  explicit Msg_ServerInner_GS_WMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrClientFieldNumber = 1,
    kStrServerFieldNumber = 2,
    kStrMsgFieldNumber = 3,
  };
  // string strClient = 1;
  void clear_strclient();
  const std::string& strclient() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strclient(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strclient();
  PROTOBUF_NODISCARD std::string* release_strclient();
  void set_allocated_strclient(std::string* strclient);
  private:
  const std::string& _internal_strclient() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strclient(const std::string& value);
  std::string* _internal_mutable_strclient();
  public:

  // string strServer = 2;
  void clear_strserver();
  const std::string& strserver() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strserver(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strserver();
  PROTOBUF_NODISCARD std::string* release_strserver();
  void set_allocated_strserver(std::string* strserver);
  private:
  const std::string& _internal_strserver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strserver(const std::string& value);
  std::string* _internal_mutable_strserver();
  public:

  // string strMsg = 3;
  void clear_strmsg();
  const std::string& strmsg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strmsg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strmsg();
  PROTOBUF_NODISCARD std::string* release_strmsg();
  void set_allocated_strmsg(std::string* strmsg);
  private:
  const std::string& _internal_strmsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strmsg(const std::string& value);
  std::string* _internal_mutable_strmsg();
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_WMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strclient_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strserver_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strmsg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_ModifyNameReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq) */ {
 public:
  inline Msg_ServerInner_GS_ModifyNameReq() : Msg_ServerInner_GS_ModifyNameReq(nullptr) {}
  ~Msg_ServerInner_GS_ModifyNameReq() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_ModifyNameReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_ModifyNameReq(const Msg_ServerInner_GS_ModifyNameReq& from);
  Msg_ServerInner_GS_ModifyNameReq(Msg_ServerInner_GS_ModifyNameReq&& from) noexcept
    : Msg_ServerInner_GS_ModifyNameReq() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_ModifyNameReq& operator=(const Msg_ServerInner_GS_ModifyNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_ModifyNameReq& operator=(Msg_ServerInner_GS_ModifyNameReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_ModifyNameReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_ModifyNameReq* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_ModifyNameReq*>(
               &_Msg_ServerInner_GS_ModifyNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Msg_ServerInner_GS_ModifyNameReq& a, Msg_ServerInner_GS_ModifyNameReq& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_ModifyNameReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_ModifyNameReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_ModifyNameReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_ModifyNameReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_ModifyNameReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_ModifyNameReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_ModifyNameReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_ModifyNameReq";
  }
  protected:
  explicit Msg_ServerInner_GS_ModifyNameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPlayerNameFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kUiServerIdFieldNumber = 3,
    kUiAreaNoFieldNumber = 4,
    kBGmFieldNumber = 5,
  };
  // string strPlayerName = 2;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiServerId = 3;
  void clear_uiserverid();
  uint32_t uiserverid() const;
  void set_uiserverid(uint32_t value);
  private:
  uint32_t _internal_uiserverid() const;
  void _internal_set_uiserverid(uint32_t value);
  public:

  // uint32 uiAreaNo = 4;
  void clear_uiareano();
  uint32_t uiareano() const;
  void set_uiareano(uint32_t value);
  private:
  uint32_t _internal_uiareano() const;
  void _internal_set_uiareano(uint32_t value);
  public:

  // bool bGm = 5;
  void clear_bgm();
  bool bgm() const;
  void set_bgm(bool value);
  private:
  bool _internal_bgm() const;
  void _internal_set_bgm(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  int64_t llplayerid_;
  uint32_t uiserverid_;
  uint32_t uiareano_;
  bool bgm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_ModifyNameRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp) */ {
 public:
  inline Msg_ServerInner_GS_ModifyNameRsp() : Msg_ServerInner_GS_ModifyNameRsp(nullptr) {}
  ~Msg_ServerInner_GS_ModifyNameRsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_ModifyNameRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_ModifyNameRsp(const Msg_ServerInner_GS_ModifyNameRsp& from);
  Msg_ServerInner_GS_ModifyNameRsp(Msg_ServerInner_GS_ModifyNameRsp&& from) noexcept
    : Msg_ServerInner_GS_ModifyNameRsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_ModifyNameRsp& operator=(const Msg_ServerInner_GS_ModifyNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_ModifyNameRsp& operator=(Msg_ServerInner_GS_ModifyNameRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_ModifyNameRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_ModifyNameRsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_ModifyNameRsp*>(
               &_Msg_ServerInner_GS_ModifyNameRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(Msg_ServerInner_GS_ModifyNameRsp& a, Msg_ServerInner_GS_ModifyNameRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_ModifyNameRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_ModifyNameRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_ModifyNameRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_ModifyNameRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_ModifyNameRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_ModifyNameRsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_ModifyNameRsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp";
  }
  protected:
  explicit Msg_ServerInner_GS_ModifyNameRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPlayerNameFieldNumber = 2,
    kLlPlayerIdFieldNumber = 1,
    kERetFieldNumber = 3,
    kBGmFieldNumber = 4,
  };
  // string strPlayerName = 2;
  void clear_strplayername();
  const std::string& strplayername() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strplayername(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strplayername();
  PROTOBUF_NODISCARD std::string* release_strplayername();
  void set_allocated_strplayername(std::string* strplayername);
  private:
  const std::string& _internal_strplayername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strplayername(const std::string& value);
  std::string* _internal_mutable_strplayername();
  public:

  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eRet = 3;
  void clear_eret();
  ::ProtoMsg::ResultCode eret() const;
  void set_eret(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_eret() const;
  void _internal_set_eret(::ProtoMsg::ResultCode value);
  public:

  // bool bGm = 4;
  void clear_bgm();
  bool bgm() const;
  void set_bgm(bool value);
  private:
  bool _internal_bgm() const;
  void _internal_set_bgm(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strplayername_;
  int64_t llplayerid_;
  int eret_;
  bool bgm_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_UpdatePlayer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer) */ {
 public:
  inline Msg_ServerInner_GS_UpdatePlayer() : Msg_ServerInner_GS_UpdatePlayer(nullptr) {}
  ~Msg_ServerInner_GS_UpdatePlayer() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_UpdatePlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_UpdatePlayer(const Msg_ServerInner_GS_UpdatePlayer& from);
  Msg_ServerInner_GS_UpdatePlayer(Msg_ServerInner_GS_UpdatePlayer&& from) noexcept
    : Msg_ServerInner_GS_UpdatePlayer() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_UpdatePlayer& operator=(const Msg_ServerInner_GS_UpdatePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_UpdatePlayer& operator=(Msg_ServerInner_GS_UpdatePlayer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_UpdatePlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_UpdatePlayer* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_UpdatePlayer*>(
               &_Msg_ServerInner_GS_UpdatePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Msg_ServerInner_GS_UpdatePlayer& a, Msg_ServerInner_GS_UpdatePlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_UpdatePlayer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_UpdatePlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_UpdatePlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_UpdatePlayer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_UpdatePlayer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_UpdatePlayer& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_UpdatePlayer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_UpdatePlayer";
  }
  protected:
  explicit Msg_ServerInner_GS_UpdatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOPlayerFieldNumber = 1,
    kBLoginFieldNumber = 2,
  };
  // .ProtoMsg.Svr_Player_Info oPlayer = 1;
  bool has_oplayer() const;
  private:
  bool _internal_has_oplayer() const;
  public:
  void clear_oplayer();
  const ::ProtoMsg::Svr_Player_Info& oplayer() const;
  PROTOBUF_NODISCARD ::ProtoMsg::Svr_Player_Info* release_oplayer();
  ::ProtoMsg::Svr_Player_Info* mutable_oplayer();
  void set_allocated_oplayer(::ProtoMsg::Svr_Player_Info* oplayer);
  private:
  const ::ProtoMsg::Svr_Player_Info& _internal_oplayer() const;
  ::ProtoMsg::Svr_Player_Info* _internal_mutable_oplayer();
  public:
  void unsafe_arena_set_allocated_oplayer(
      ::ProtoMsg::Svr_Player_Info* oplayer);
  ::ProtoMsg::Svr_Player_Info* unsafe_arena_release_oplayer();

  // bool bLogin = 2;
  void clear_blogin();
  bool blogin() const;
  void set_blogin(bool value);
  private:
  bool _internal_blogin() const;
  void _internal_set_blogin(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::ProtoMsg::Svr_Player_Info* oplayer_;
  bool blogin_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerInner_GS_UpdateRmb final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerInner_GS_UpdateRmb) */ {
 public:
  inline Msg_ServerInner_GS_UpdateRmb() : Msg_ServerInner_GS_UpdateRmb(nullptr) {}
  ~Msg_ServerInner_GS_UpdateRmb() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerInner_GS_UpdateRmb(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerInner_GS_UpdateRmb(const Msg_ServerInner_GS_UpdateRmb& from);
  Msg_ServerInner_GS_UpdateRmb(Msg_ServerInner_GS_UpdateRmb&& from) noexcept
    : Msg_ServerInner_GS_UpdateRmb() {
    *this = ::std::move(from);
  }

  inline Msg_ServerInner_GS_UpdateRmb& operator=(const Msg_ServerInner_GS_UpdateRmb& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerInner_GS_UpdateRmb& operator=(Msg_ServerInner_GS_UpdateRmb&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerInner_GS_UpdateRmb& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerInner_GS_UpdateRmb* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerInner_GS_UpdateRmb*>(
               &_Msg_ServerInner_GS_UpdateRmb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Msg_ServerInner_GS_UpdateRmb& a, Msg_ServerInner_GS_UpdateRmb& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerInner_GS_UpdateRmb* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerInner_GS_UpdateRmb* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerInner_GS_UpdateRmb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerInner_GS_UpdateRmb>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerInner_GS_UpdateRmb& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerInner_GS_UpdateRmb& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerInner_GS_UpdateRmb* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerInner_GS_UpdateRmb";
  }
  protected:
  explicit Msg_ServerInner_GS_UpdateRmb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlPlayerIdFieldNumber = 1,
    kUiRmbFieldNumber = 2,
    kUiRechareFieldNumber = 3,
  };
  // int64 llPlayerId = 1;
  void clear_llplayerid();
  int64_t llplayerid() const;
  void set_llplayerid(int64_t value);
  private:
  int64_t _internal_llplayerid() const;
  void _internal_set_llplayerid(int64_t value);
  public:

  // uint32 uiRmb = 2;
  void clear_uirmb();
  uint32_t uirmb() const;
  void set_uirmb(uint32_t value);
  private:
  uint32_t _internal_uirmb() const;
  void _internal_set_uirmb(uint32_t value);
  public:

  // uint32 uiRechare = 3;
  void clear_uirechare();
  uint32_t uirechare() const;
  void set_uirechare(uint32_t value);
  private:
  uint32_t _internal_uirechare() const;
  void _internal_set_uirechare(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerInner_GS_UpdateRmb)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llplayerid_;
  uint32_t uirmb_;
  uint32_t uirechare_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverinner_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgModule_ServerInner

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Login_Req

// int64 llUserId = 1;
inline void Msg_ServerInner_GG_Login_Req::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Login_Req::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerInner_GG_Login_Req::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.llUserId)
}

// string strAccName = 2;
inline void Msg_ServerInner_GG_Login_Req::clear_straccname() {
  straccname_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::straccname() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strAccName)
  return _internal_straccname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_straccname(ArgT0&& arg0, ArgT... args) {
 
 straccname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strAccName)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_straccname() {
  std::string* _s = _internal_mutable_straccname();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strAccName)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_straccname() const {
  return straccname_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_straccname(const std::string& value) {
  
  straccname_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_straccname() {
  
  return straccname_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_straccname() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strAccName)
  return straccname_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_straccname(std::string* straccname) {
  if (straccname != nullptr) {
    
  } else {
    
  }
  straccname_.SetAllocated(straccname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (straccname_.IsDefault()) {
    straccname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strAccName)
}

// string strSession = 3;
inline void Msg_ServerInner_GG_Login_Req::clear_strsession() {
  strsession_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strsession() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strSession)
  return _internal_strsession();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strsession(ArgT0&& arg0, ArgT... args) {
 
 strsession_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strSession)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strsession() {
  std::string* _s = _internal_mutable_strsession();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strSession)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strsession() const {
  return strsession_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strsession(const std::string& value) {
  
  strsession_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strsession() {
  
  return strsession_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strsession() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strSession)
  return strsession_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strsession(std::string* strsession) {
  if (strsession != nullptr) {
    
  } else {
    
  }
  strsession_.SetAllocated(strsession, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strsession_.IsDefault()) {
    strsession_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strSession)
}

// uint32 uiSdk = 4;
inline void Msg_ServerInner_GG_Login_Req::clear_uisdk() {
  uisdk_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::_internal_uisdk() const {
  return uisdk_;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::uisdk() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiSdk)
  return _internal_uisdk();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_uisdk(uint32_t value) {
  
  uisdk_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_uisdk(uint32_t value) {
  _internal_set_uisdk(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiSdk)
}

// string strClientIp = 5;
inline void Msg_ServerInner_GG_Login_Req::clear_strclientip() {
  strclientip_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strclientip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strClientIp)
  return _internal_strclientip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strclientip(ArgT0&& arg0, ArgT... args) {
 
 strclientip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strClientIp)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strclientip() {
  std::string* _s = _internal_mutable_strclientip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strClientIp)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strclientip() const {
  return strclientip_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strclientip(const std::string& value) {
  
  strclientip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strclientip() {
  
  return strclientip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strclientip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strClientIp)
  return strclientip_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strclientip(std::string* strclientip) {
  if (strclientip != nullptr) {
    
  } else {
    
  }
  strclientip_.SetAllocated(strclientip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strclientip_.IsDefault()) {
    strclientip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strClientIp)
}

// uint32 uiReLogin = 6;
inline void Msg_ServerInner_GG_Login_Req::clear_uirelogin() {
  uirelogin_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::_internal_uirelogin() const {
  return uirelogin_;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::uirelogin() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiReLogin)
  return _internal_uirelogin();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_uirelogin(uint32_t value) {
  
  uirelogin_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_uirelogin(uint32_t value) {
  _internal_set_uirelogin(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiReLogin)
}

// int32 iSeqId = 7;
inline void Msg_ServerInner_GG_Login_Req::clear_iseqid() {
  iseqid_ = 0;
}
inline int32_t Msg_ServerInner_GG_Login_Req::_internal_iseqid() const {
  return iseqid_;
}
inline int32_t Msg_ServerInner_GG_Login_Req::iseqid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.iSeqId)
  return _internal_iseqid();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_iseqid(int32_t value) {
  
  iseqid_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_iseqid(int32_t value) {
  _internal_set_iseqid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.iSeqId)
}

// uint32 uiProvince = 8;
inline void Msg_ServerInner_GG_Login_Req::clear_uiprovince() {
  uiprovince_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::_internal_uiprovince() const {
  return uiprovince_;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::uiprovince() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiProvince)
  return _internal_uiprovince();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_uiprovince(uint32_t value) {
  
  uiprovince_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_uiprovince(uint32_t value) {
  _internal_set_uiprovince(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiProvince)
}

// string strProvinceName = 9;
inline void Msg_ServerInner_GG_Login_Req::clear_strprovincename() {
  strprovincename_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strprovincename() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strProvinceName)
  return _internal_strprovincename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strprovincename(ArgT0&& arg0, ArgT... args) {
 
 strprovincename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strProvinceName)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strprovincename() {
  std::string* _s = _internal_mutable_strprovincename();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strProvinceName)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strprovincename() const {
  return strprovincename_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strprovincename(const std::string& value) {
  
  strprovincename_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strprovincename() {
  
  return strprovincename_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strprovincename() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strProvinceName)
  return strprovincename_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strprovincename(std::string* strprovincename) {
  if (strprovincename != nullptr) {
    
  } else {
    
  }
  strprovincename_.SetAllocated(strprovincename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strprovincename_.IsDefault()) {
    strprovincename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strProvinceName)
}

// uint32 uiGmLevel = 10;
inline void Msg_ServerInner_GG_Login_Req::clear_uigmlevel() {
  uigmlevel_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::_internal_uigmlevel() const {
  return uigmlevel_;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::uigmlevel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiGmLevel)
  return _internal_uigmlevel();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_uigmlevel(uint32_t value) {
  
  uigmlevel_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_uigmlevel(uint32_t value) {
  _internal_set_uigmlevel(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiGmLevel)
}

// string strDeviceId = 11;
inline void Msg_ServerInner_GG_Login_Req::clear_strdeviceid() {
  strdeviceid_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strdeviceid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strDeviceId)
  return _internal_strdeviceid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strdeviceid(ArgT0&& arg0, ArgT... args) {
 
 strdeviceid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strDeviceId)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strdeviceid() {
  std::string* _s = _internal_mutable_strdeviceid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strDeviceId)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strdeviceid() const {
  return strdeviceid_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strdeviceid(const std::string& value) {
  
  strdeviceid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strdeviceid() {
  
  return strdeviceid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strdeviceid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strDeviceId)
  return strdeviceid_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strdeviceid(std::string* strdeviceid) {
  if (strdeviceid != nullptr) {
    
  } else {
    
  }
  strdeviceid_.SetAllocated(strdeviceid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strdeviceid_.IsDefault()) {
    strdeviceid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strDeviceId)
}

// uint32 uiProArea = 12;
inline void Msg_ServerInner_GG_Login_Req::clear_uiproarea() {
  uiproarea_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::_internal_uiproarea() const {
  return uiproarea_;
}
inline uint32_t Msg_ServerInner_GG_Login_Req::uiproarea() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiProArea)
  return _internal_uiproarea();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_uiproarea(uint32_t value) {
  
  uiproarea_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_uiproarea(uint32_t value) {
  _internal_set_uiproarea(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.uiProArea)
}

// bool bAntiAdd = 13;
inline void Msg_ServerInner_GG_Login_Req::clear_bantiadd() {
  bantiadd_ = false;
}
inline bool Msg_ServerInner_GG_Login_Req::_internal_bantiadd() const {
  return bantiadd_;
}
inline bool Msg_ServerInner_GG_Login_Req::bantiadd() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.bAntiAdd)
  return _internal_bantiadd();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_bantiadd(bool value) {
  
  bantiadd_ = value;
}
inline void Msg_ServerInner_GG_Login_Req::set_bantiadd(bool value) {
  _internal_set_bantiadd(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.bAntiAdd)
}

// string strChannel = 14;
inline void Msg_ServerInner_GG_Login_Req::clear_strchannel() {
  strchannel_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strchannel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strChannel)
  return _internal_strchannel();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strchannel(ArgT0&& arg0, ArgT... args) {
 
 strchannel_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strChannel)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strchannel() {
  std::string* _s = _internal_mutable_strchannel();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strChannel)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strchannel() const {
  return strchannel_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strchannel(const std::string& value) {
  
  strchannel_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strchannel() {
  
  return strchannel_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strchannel() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strChannel)
  return strchannel_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strchannel(std::string* strchannel) {
  if (strchannel != nullptr) {
    
  } else {
    
  }
  strchannel_.SetAllocated(strchannel, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strchannel_.IsDefault()) {
    strchannel_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strChannel)
}

// string strCityCode = 15;
inline void Msg_ServerInner_GG_Login_Req::clear_strcitycode() {
  strcitycode_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Req::strcitycode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Req.strCityCode)
  return _internal_strcitycode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Req::set_strcitycode(ArgT0&& arg0, ArgT... args) {
 
 strcitycode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Req.strCityCode)
}
inline std::string* Msg_ServerInner_GG_Login_Req::mutable_strcitycode() {
  std::string* _s = _internal_mutable_strcitycode();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Req.strCityCode)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Req::_internal_strcitycode() const {
  return strcitycode_.Get();
}
inline void Msg_ServerInner_GG_Login_Req::_internal_set_strcitycode(const std::string& value) {
  
  strcitycode_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::_internal_mutable_strcitycode() {
  
  return strcitycode_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Req::release_strcitycode() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Req.strCityCode)
  return strcitycode_.Release();
}
inline void Msg_ServerInner_GG_Login_Req::set_allocated_strcitycode(std::string* strcitycode) {
  if (strcitycode != nullptr) {
    
  } else {
    
  }
  strcitycode_.SetAllocated(strcitycode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strcitycode_.IsDefault()) {
    strcitycode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Req.strCityCode)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Login_Rsp

// int64 llUserId = 1;
inline void Msg_ServerInner_GG_Login_Rsp::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llUserId)
}

// .ProtoMsg.ResultCode eFlag = 2;
inline void Msg_ServerInner_GG_Login_Rsp::clear_eflag() {
  eflag_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Login_Rsp::_internal_eflag() const {
  return static_cast< ::ProtoMsg::ResultCode >(eflag_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Login_Rsp::eflag() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.eFlag)
  return _internal_eflag();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_eflag(::ProtoMsg::ResultCode value) {
  
  eflag_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_eflag(::ProtoMsg::ResultCode value) {
  _internal_set_eflag(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.eFlag)
}

// int32 iSeqId = 3;
inline void Msg_ServerInner_GG_Login_Rsp::clear_iseqid() {
  iseqid_ = 0;
}
inline int32_t Msg_ServerInner_GG_Login_Rsp::_internal_iseqid() const {
  return iseqid_;
}
inline int32_t Msg_ServerInner_GG_Login_Rsp::iseqid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.iSeqId)
  return _internal_iseqid();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_iseqid(int32_t value) {
  
  iseqid_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_iseqid(int32_t value) {
  _internal_set_iseqid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.iSeqId)
}

// int64 llRoleId = 4;
inline void Msg_ServerInner_GG_Login_Rsp::clear_llroleid() {
  llroleid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::_internal_llroleid() const {
  return llroleid_;
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::llroleid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llRoleId)
  return _internal_llroleid();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_llroleid(int64_t value) {
  
  llroleid_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_llroleid(int64_t value) {
  _internal_set_llroleid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llRoleId)
}

// bool bRequest = 5;
inline void Msg_ServerInner_GG_Login_Rsp::clear_brequest() {
  brequest_ = false;
}
inline bool Msg_ServerInner_GG_Login_Rsp::_internal_brequest() const {
  return brequest_;
}
inline bool Msg_ServerInner_GG_Login_Rsp::brequest() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.bRequest)
  return _internal_brequest();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_brequest(bool value) {
  
  brequest_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_brequest(bool value) {
  _internal_set_brequest(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.bRequest)
}

// .ProtoMsg.EPlayerStatus eState = 6;
inline void Msg_ServerInner_GG_Login_Rsp::clear_estate() {
  estate_ = 0;
}
inline ::ProtoMsg::EPlayerStatus Msg_ServerInner_GG_Login_Rsp::_internal_estate() const {
  return static_cast< ::ProtoMsg::EPlayerStatus >(estate_);
}
inline ::ProtoMsg::EPlayerStatus Msg_ServerInner_GG_Login_Rsp::estate() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.eState)
  return _internal_estate();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_estate(::ProtoMsg::EPlayerStatus value) {
  
  estate_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_estate(::ProtoMsg::EPlayerStatus value) {
  _internal_set_estate(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.eState)
}

// int64 llOpenDate = 7;
inline void Msg_ServerInner_GG_Login_Rsp::clear_llopendate() {
  llopendate_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::_internal_llopendate() const {
  return llopendate_;
}
inline int64_t Msg_ServerInner_GG_Login_Rsp::llopendate() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llOpenDate)
  return _internal_llopendate();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_llopendate(int64_t value) {
  
  llopendate_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_llopendate(int64_t value) {
  _internal_set_llopendate(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.llOpenDate)
}

// string strUserName = 8;
inline void Msg_ServerInner_GG_Login_Rsp::clear_strusername() {
  strusername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Login_Rsp::strusername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.strUserName)
  return _internal_strusername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Login_Rsp::set_strusername(ArgT0&& arg0, ArgT... args) {
 
 strusername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.strUserName)
}
inline std::string* Msg_ServerInner_GG_Login_Rsp::mutable_strusername() {
  std::string* _s = _internal_mutable_strusername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.strUserName)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Login_Rsp::_internal_strusername() const {
  return strusername_.Get();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_strusername(const std::string& value) {
  
  strusername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Rsp::_internal_mutable_strusername() {
  
  return strusername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Login_Rsp::release_strusername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.strUserName)
  return strusername_.Release();
}
inline void Msg_ServerInner_GG_Login_Rsp::set_allocated_strusername(std::string* strusername) {
  if (strusername != nullptr) {
    
  } else {
    
  }
  strusername_.SetAllocated(strusername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strusername_.IsDefault()) {
    strusername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.strUserName)
}

// uint32 uiBanTime = 9;
inline void Msg_ServerInner_GG_Login_Rsp::clear_uibantime() {
  uibantime_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Login_Rsp::_internal_uibantime() const {
  return uibantime_;
}
inline uint32_t Msg_ServerInner_GG_Login_Rsp::uibantime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.uiBanTime)
  return _internal_uibantime();
}
inline void Msg_ServerInner_GG_Login_Rsp::_internal_set_uibantime(uint32_t value) {
  
  uibantime_ = value;
}
inline void Msg_ServerInner_GG_Login_Rsp::set_uibantime(uint32_t value) {
  _internal_set_uibantime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Login_Rsp.uiBanTime)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Create_Req

// int64 llUserId = 1;
inline void Msg_ServerInner_GG_Create_Req::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Create_Req::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerInner_GG_Create_Req::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerInner_GG_Create_Req::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.llUserId)
}

// uint32 uiCareerId = 2;
inline void Msg_ServerInner_GG_Create_Req::clear_uicareerid() {
  uicareerid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::_internal_uicareerid() const {
  return uicareerid_;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::uicareerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiCareerId)
  return _internal_uicareerid();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_uicareerid(uint32_t value) {
  
  uicareerid_ = value;
}
inline void Msg_ServerInner_GG_Create_Req::set_uicareerid(uint32_t value) {
  _internal_set_uicareerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiCareerId)
}

// uint32 uiGender = 3;
inline void Msg_ServerInner_GG_Create_Req::clear_uigender() {
  uigender_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::_internal_uigender() const {
  return uigender_;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::uigender() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiGender)
  return _internal_uigender();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_uigender(uint32_t value) {
  
  uigender_ = value;
}
inline void Msg_ServerInner_GG_Create_Req::set_uigender(uint32_t value) {
  _internal_set_uigender(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiGender)
}

// string strUserName = 4;
inline void Msg_ServerInner_GG_Create_Req::clear_strusername() {
  strusername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Create_Req::strusername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.strUserName)
  return _internal_strusername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Create_Req::set_strusername(ArgT0&& arg0, ArgT... args) {
 
 strusername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.strUserName)
}
inline std::string* Msg_ServerInner_GG_Create_Req::mutable_strusername() {
  std::string* _s = _internal_mutable_strusername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Create_Req.strUserName)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Create_Req::_internal_strusername() const {
  return strusername_.Get();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_strusername(const std::string& value) {
  
  strusername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Create_Req::_internal_mutable_strusername() {
  
  return strusername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Create_Req::release_strusername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Create_Req.strUserName)
  return strusername_.Release();
}
inline void Msg_ServerInner_GG_Create_Req::set_allocated_strusername(std::string* strusername) {
  if (strusername != nullptr) {
    
  } else {
    
  }
  strusername_.SetAllocated(strusername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strusername_.IsDefault()) {
    strusername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Create_Req.strUserName)
}

// uint32 uiIconId = 5;
inline void Msg_ServerInner_GG_Create_Req::clear_uiiconid() {
  uiiconid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::_internal_uiiconid() const {
  return uiiconid_;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::uiiconid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiIconId)
  return _internal_uiiconid();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_uiiconid(uint32_t value) {
  
  uiiconid_ = value;
}
inline void Msg_ServerInner_GG_Create_Req::set_uiiconid(uint32_t value) {
  _internal_set_uiiconid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiIconId)
}

// uint32 uiSeqId = 6;
inline void Msg_ServerInner_GG_Create_Req::clear_uiseqid() {
  uiseqid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::_internal_uiseqid() const {
  return uiseqid_;
}
inline uint32_t Msg_ServerInner_GG_Create_Req::uiseqid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiSeqId)
  return _internal_uiseqid();
}
inline void Msg_ServerInner_GG_Create_Req::_internal_set_uiseqid(uint32_t value) {
  
  uiseqid_ = value;
}
inline void Msg_ServerInner_GG_Create_Req::set_uiseqid(uint32_t value) {
  _internal_set_uiseqid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Req.uiSeqId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Create_Rsp

// int64 llUserId = 1;
inline void Msg_ServerInner_GG_Create_Rsp::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Create_Rsp::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerInner_GG_Create_Rsp::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerInner_GG_Create_Rsp::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.llUserId)
}

// string strUserName = 2;
inline void Msg_ServerInner_GG_Create_Rsp::clear_strusername() {
  strusername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Create_Rsp::strusername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.strUserName)
  return _internal_strusername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Create_Rsp::set_strusername(ArgT0&& arg0, ArgT... args) {
 
 strusername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.strUserName)
}
inline std::string* Msg_ServerInner_GG_Create_Rsp::mutable_strusername() {
  std::string* _s = _internal_mutable_strusername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.strUserName)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Create_Rsp::_internal_strusername() const {
  return strusername_.Get();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_strusername(const std::string& value) {
  
  strusername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Create_Rsp::_internal_mutable_strusername() {
  
  return strusername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Create_Rsp::release_strusername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.strUserName)
  return strusername_.Release();
}
inline void Msg_ServerInner_GG_Create_Rsp::set_allocated_strusername(std::string* strusername) {
  if (strusername != nullptr) {
    
  } else {
    
  }
  strusername_.SetAllocated(strusername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strusername_.IsDefault()) {
    strusername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.strUserName)
}

// int32 iLevel = 4;
inline void Msg_ServerInner_GG_Create_Rsp::clear_ilevel() {
  ilevel_ = 0;
}
inline int32_t Msg_ServerInner_GG_Create_Rsp::_internal_ilevel() const {
  return ilevel_;
}
inline int32_t Msg_ServerInner_GG_Create_Rsp::ilevel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.iLevel)
  return _internal_ilevel();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_ilevel(int32_t value) {
  
  ilevel_ = value;
}
inline void Msg_ServerInner_GG_Create_Rsp::set_ilevel(int32_t value) {
  _internal_set_ilevel(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.iLevel)
}

// int64 llCreateTime = 5;
inline void Msg_ServerInner_GG_Create_Rsp::clear_llcreatetime() {
  llcreatetime_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Create_Rsp::_internal_llcreatetime() const {
  return llcreatetime_;
}
inline int64_t Msg_ServerInner_GG_Create_Rsp::llcreatetime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.llCreateTime)
  return _internal_llcreatetime();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_llcreatetime(int64_t value) {
  
  llcreatetime_ = value;
}
inline void Msg_ServerInner_GG_Create_Rsp::set_llcreatetime(int64_t value) {
  _internal_set_llcreatetime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.llCreateTime)
}

// .ProtoMsg.ResultCode eCode = 6;
inline void Msg_ServerInner_GG_Create_Rsp::clear_ecode() {
  ecode_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Create_Rsp::_internal_ecode() const {
  return static_cast< ::ProtoMsg::ResultCode >(ecode_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Create_Rsp::ecode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.eCode)
  return _internal_ecode();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_ecode(::ProtoMsg::ResultCode value) {
  
  ecode_ = value;
}
inline void Msg_ServerInner_GG_Create_Rsp::set_ecode(::ProtoMsg::ResultCode value) {
  _internal_set_ecode(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.eCode)
}

// int32 iSeqId = 7;
inline void Msg_ServerInner_GG_Create_Rsp::clear_iseqid() {
  iseqid_ = 0;
}
inline int32_t Msg_ServerInner_GG_Create_Rsp::_internal_iseqid() const {
  return iseqid_;
}
inline int32_t Msg_ServerInner_GG_Create_Rsp::iseqid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.iSeqId)
  return _internal_iseqid();
}
inline void Msg_ServerInner_GG_Create_Rsp::_internal_set_iseqid(int32_t value) {
  
  iseqid_ = value;
}
inline void Msg_ServerInner_GG_Create_Rsp::set_iseqid(int32_t value) {
  _internal_set_iseqid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Create_Rsp.iSeqId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Save_Ntf

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GG_Save_Ntf::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Save_Ntf::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GG_Save_Ntf::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GG_Save_Ntf::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GG_Save_Ntf::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.llPlayerId)
}

// uint32 uiSaveFlag = 2;
inline void Msg_ServerInner_GG_Save_Ntf::clear_uisaveflag() {
  uisaveflag_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Save_Ntf::_internal_uisaveflag() const {
  return uisaveflag_;
}
inline uint32_t Msg_ServerInner_GG_Save_Ntf::uisaveflag() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.uiSaveFlag)
  return _internal_uisaveflag();
}
inline void Msg_ServerInner_GG_Save_Ntf::_internal_set_uisaveflag(uint32_t value) {
  
  uisaveflag_ = value;
}
inline void Msg_ServerInner_GG_Save_Ntf::set_uisaveflag(uint32_t value) {
  _internal_set_uisaveflag(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.uiSaveFlag)
}

// string strMsg = 3;
inline void Msg_ServerInner_GG_Save_Ntf::clear_strmsg() {
  strmsg_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Save_Ntf::strmsg() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.strMsg)
  return _internal_strmsg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Save_Ntf::set_strmsg(ArgT0&& arg0, ArgT... args) {
 
 strmsg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.strMsg)
}
inline std::string* Msg_ServerInner_GG_Save_Ntf::mutable_strmsg() {
  std::string* _s = _internal_mutable_strmsg();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.strMsg)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Save_Ntf::_internal_strmsg() const {
  return strmsg_.Get();
}
inline void Msg_ServerInner_GG_Save_Ntf::_internal_set_strmsg(const std::string& value) {
  
  strmsg_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Save_Ntf::_internal_mutable_strmsg() {
  
  return strmsg_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Save_Ntf::release_strmsg() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.strMsg)
  return strmsg_.Release();
}
inline void Msg_ServerInner_GG_Save_Ntf::set_allocated_strmsg(std::string* strmsg) {
  if (strmsg != nullptr) {
    
  } else {
    
  }
  strmsg_.SetAllocated(strmsg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strmsg_.IsDefault()) {
    strmsg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.strMsg)
}

// uint32 uiGateId = 4;
inline void Msg_ServerInner_GG_Save_Ntf::clear_uigateid() {
  uigateid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Save_Ntf::_internal_uigateid() const {
  return uigateid_;
}
inline uint32_t Msg_ServerInner_GG_Save_Ntf::uigateid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.uiGateId)
  return _internal_uigateid();
}
inline void Msg_ServerInner_GG_Save_Ntf::_internal_set_uigateid(uint32_t value) {
  
  uigateid_ = value;
}
inline void Msg_ServerInner_GG_Save_Ntf::set_uigateid(uint32_t value) {
  _internal_set_uigateid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Save_Ntf.uiGateId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Kick_Notify

// int64 llUserId = 1;
inline void Msg_ServerInner_GG_Kick_Notify::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GG_Kick_Notify::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerInner_GG_Kick_Notify::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerInner_GG_Kick_Notify::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerInner_GG_Kick_Notify::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.llUserId)
}

// int32 uiSaveFlag = 2;
inline void Msg_ServerInner_GG_Kick_Notify::clear_uisaveflag() {
  uisaveflag_ = 0;
}
inline int32_t Msg_ServerInner_GG_Kick_Notify::_internal_uisaveflag() const {
  return uisaveflag_;
}
inline int32_t Msg_ServerInner_GG_Kick_Notify::uisaveflag() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.uiSaveFlag)
  return _internal_uisaveflag();
}
inline void Msg_ServerInner_GG_Kick_Notify::_internal_set_uisaveflag(int32_t value) {
  
  uisaveflag_ = value;
}
inline void Msg_ServerInner_GG_Kick_Notify::set_uisaveflag(int32_t value) {
  _internal_set_uisaveflag(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.uiSaveFlag)
}

// int32 uiSeqId = 3;
inline void Msg_ServerInner_GG_Kick_Notify::clear_uiseqid() {
  uiseqid_ = 0;
}
inline int32_t Msg_ServerInner_GG_Kick_Notify::_internal_uiseqid() const {
  return uiseqid_;
}
inline int32_t Msg_ServerInner_GG_Kick_Notify::uiseqid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.uiSeqId)
  return _internal_uiseqid();
}
inline void Msg_ServerInner_GG_Kick_Notify::_internal_set_uiseqid(int32_t value) {
  
  uiseqid_ = value;
}
inline void Msg_ServerInner_GG_Kick_Notify::set_uiseqid(int32_t value) {
  _internal_set_uiseqid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.uiSeqId)
}

// .ProtoMsg.ResultCode eCode = 4;
inline void Msg_ServerInner_GG_Kick_Notify::clear_ecode() {
  ecode_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Kick_Notify::_internal_ecode() const {
  return static_cast< ::ProtoMsg::ResultCode >(ecode_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GG_Kick_Notify::ecode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.eCode)
  return _internal_ecode();
}
inline void Msg_ServerInner_GG_Kick_Notify::_internal_set_ecode(::ProtoMsg::ResultCode value) {
  
  ecode_ = value;
}
inline void Msg_ServerInner_GG_Kick_Notify::set_ecode(::ProtoMsg::ResultCode value) {
  _internal_set_ecode(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Kick_Notify.eCode)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GG_Msg_Notify

// repeated int64 vecPlayerId = 1;
inline int Msg_ServerInner_GG_Msg_Notify::_internal_vecplayerid_size() const {
  return vecplayerid_.size();
}
inline int Msg_ServerInner_GG_Msg_Notify::vecplayerid_size() const {
  return _internal_vecplayerid_size();
}
inline void Msg_ServerInner_GG_Msg_Notify::clear_vecplayerid() {
  vecplayerid_.Clear();
}
inline int64_t Msg_ServerInner_GG_Msg_Notify::_internal_vecplayerid(int index) const {
  return vecplayerid_.Get(index);
}
inline int64_t Msg_ServerInner_GG_Msg_Notify::vecplayerid(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.vecPlayerId)
  return _internal_vecplayerid(index);
}
inline void Msg_ServerInner_GG_Msg_Notify::set_vecplayerid(int index, int64_t value) {
  vecplayerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.vecPlayerId)
}
inline void Msg_ServerInner_GG_Msg_Notify::_internal_add_vecplayerid(int64_t value) {
  vecplayerid_.Add(value);
}
inline void Msg_ServerInner_GG_Msg_Notify::add_vecplayerid(int64_t value) {
  _internal_add_vecplayerid(value);
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.vecPlayerId)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Msg_ServerInner_GG_Msg_Notify::_internal_vecplayerid() const {
  return vecplayerid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
Msg_ServerInner_GG_Msg_Notify::vecplayerid() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.vecPlayerId)
  return _internal_vecplayerid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Msg_ServerInner_GG_Msg_Notify::_internal_mutable_vecplayerid() {
  return &vecplayerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
Msg_ServerInner_GG_Msg_Notify::mutable_vecplayerid() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.vecPlayerId)
  return _internal_mutable_vecplayerid();
}

// bytes strCmdMsg = 2;
inline void Msg_ServerInner_GG_Msg_Notify::clear_strcmdmsg() {
  strcmdmsg_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GG_Msg_Notify::strcmdmsg() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.strCmdMsg)
  return _internal_strcmdmsg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GG_Msg_Notify::set_strcmdmsg(ArgT0&& arg0, ArgT... args) {
 
 strcmdmsg_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.strCmdMsg)
}
inline std::string* Msg_ServerInner_GG_Msg_Notify::mutable_strcmdmsg() {
  std::string* _s = _internal_mutable_strcmdmsg();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.strCmdMsg)
  return _s;
}
inline const std::string& Msg_ServerInner_GG_Msg_Notify::_internal_strcmdmsg() const {
  return strcmdmsg_.Get();
}
inline void Msg_ServerInner_GG_Msg_Notify::_internal_set_strcmdmsg(const std::string& value) {
  
  strcmdmsg_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Msg_Notify::_internal_mutable_strcmdmsg() {
  
  return strcmdmsg_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GG_Msg_Notify::release_strcmdmsg() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.strCmdMsg)
  return strcmdmsg_.Release();
}
inline void Msg_ServerInner_GG_Msg_Notify::set_allocated_strcmdmsg(std::string* strcmdmsg) {
  if (strcmdmsg != nullptr) {
    
  } else {
    
  }
  strcmdmsg_.SetAllocated(strcmdmsg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strcmdmsg_.IsDefault()) {
    strcmdmsg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.strCmdMsg)
}

// uint32 uiModuleId = 3;
inline void Msg_ServerInner_GG_Msg_Notify::clear_uimoduleid() {
  uimoduleid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::_internal_uimoduleid() const {
  return uimoduleid_;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::uimoduleid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiModuleId)
  return _internal_uimoduleid();
}
inline void Msg_ServerInner_GG_Msg_Notify::_internal_set_uimoduleid(uint32_t value) {
  
  uimoduleid_ = value;
}
inline void Msg_ServerInner_GG_Msg_Notify::set_uimoduleid(uint32_t value) {
  _internal_set_uimoduleid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiModuleId)
}

// uint32 uiCmdId = 4;
inline void Msg_ServerInner_GG_Msg_Notify::clear_uicmdid() {
  uicmdid_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::_internal_uicmdid() const {
  return uicmdid_;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::uicmdid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiCmdId)
  return _internal_uicmdid();
}
inline void Msg_ServerInner_GG_Msg_Notify::_internal_set_uicmdid(uint32_t value) {
  
  uicmdid_ = value;
}
inline void Msg_ServerInner_GG_Msg_Notify::set_uicmdid(uint32_t value) {
  _internal_set_uicmdid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiCmdId)
}

// uint32 uiInterval = 5;
inline void Msg_ServerInner_GG_Msg_Notify::clear_uiinterval() {
  uiinterval_ = 0u;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::_internal_uiinterval() const {
  return uiinterval_;
}
inline uint32_t Msg_ServerInner_GG_Msg_Notify::uiinterval() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiInterval)
  return _internal_uiinterval();
}
inline void Msg_ServerInner_GG_Msg_Notify::_internal_set_uiinterval(uint32_t value) {
  
  uiinterval_ = value;
}
inline void Msg_ServerInner_GG_Msg_Notify::set_uiinterval(uint32_t value) {
  _internal_set_uiinterval(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GG_Msg_Notify.uiInterval)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_RecordOnline

// uint32 uiServerId = 1;
inline void Msg_ServerInner_GS_RecordOnline::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiServerId)
}

// int64 llCurTime = 2;
inline void Msg_ServerInner_GS_RecordOnline::clear_llcurtime() {
  llcurtime_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_RecordOnline::_internal_llcurtime() const {
  return llcurtime_;
}
inline int64_t Msg_ServerInner_GS_RecordOnline::llcurtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.llCurTime)
  return _internal_llcurtime();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_llcurtime(int64_t value) {
  
  llcurtime_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_llcurtime(int64_t value) {
  _internal_set_llcurtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.llCurTime)
}

// uint32 uiOnlineNum = 3;
inline void Msg_ServerInner_GS_RecordOnline::clear_uionlinenum() {
  uionlinenum_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uionlinenum() const {
  return uionlinenum_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uionlinenum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiOnlineNum)
  return _internal_uionlinenum();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uionlinenum(uint32_t value) {
  
  uionlinenum_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uionlinenum(uint32_t value) {
  _internal_set_uionlinenum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiOnlineNum)
}

// uint32 uiWaitNum = 4;
inline void Msg_ServerInner_GS_RecordOnline::clear_uiwaitnum() {
  uiwaitnum_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uiwaitnum() const {
  return uiwaitnum_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uiwaitnum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiWaitNum)
  return _internal_uiwaitnum();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uiwaitnum(uint32_t value) {
  
  uiwaitnum_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uiwaitnum(uint32_t value) {
  _internal_set_uiwaitnum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiWaitNum)
}

// string strIp = 5;
inline void Msg_ServerInner_GS_RecordOnline::clear_strip() {
  strip_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_RecordOnline::strip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strIp)
  return _internal_strip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_RecordOnline::set_strip(ArgT0&& arg0, ArgT... args) {
 
 strip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strIp)
}
inline std::string* Msg_ServerInner_GS_RecordOnline::mutable_strip() {
  std::string* _s = _internal_mutable_strip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strIp)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_RecordOnline::_internal_strip() const {
  return strip_.Get();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_strip(const std::string& value) {
  
  strip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_RecordOnline::_internal_mutable_strip() {
  
  return strip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_RecordOnline::release_strip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strIp)
  return strip_.Release();
}
inline void Msg_ServerInner_GS_RecordOnline::set_allocated_strip(std::string* strip) {
  if (strip != nullptr) {
    
  } else {
    
  }
  strip_.SetAllocated(strip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strip_.IsDefault()) {
    strip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strIp)
}

// uint32 uiPort = 6;
inline void Msg_ServerInner_GS_RecordOnline::clear_uiport() {
  uiport_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uiport() const {
  return uiport_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uiport() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiPort)
  return _internal_uiport();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uiport(uint32_t value) {
  
  uiport_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uiport(uint32_t value) {
  _internal_set_uiport(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiPort)
}

// uint32 uiAreaNo = 7;
inline void Msg_ServerInner_GS_RecordOnline::clear_uiareano() {
  uiareano_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uiareano() const {
  return uiareano_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uiareano() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiAreaNo)
  return _internal_uiareano();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uiareano(uint32_t value) {
  
  uiareano_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uiareano(uint32_t value) {
  _internal_set_uiareano(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiAreaNo)
}

// uint32 uiMaxNum = 8;
inline void Msg_ServerInner_GS_RecordOnline::clear_uimaxnum() {
  uimaxnum_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::_internal_uimaxnum() const {
  return uimaxnum_;
}
inline uint32_t Msg_ServerInner_GS_RecordOnline::uimaxnum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiMaxNum)
  return _internal_uimaxnum();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_uimaxnum(uint32_t value) {
  
  uimaxnum_ = value;
}
inline void Msg_ServerInner_GS_RecordOnline::set_uimaxnum(uint32_t value) {
  _internal_set_uimaxnum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.uiMaxNum)
}

// string strVersion = 9;
inline void Msg_ServerInner_GS_RecordOnline::clear_strversion() {
  strversion_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_RecordOnline::strversion() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strVersion)
  return _internal_strversion();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_RecordOnline::set_strversion(ArgT0&& arg0, ArgT... args) {
 
 strversion_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strVersion)
}
inline std::string* Msg_ServerInner_GS_RecordOnline::mutable_strversion() {
  std::string* _s = _internal_mutable_strversion();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strVersion)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_RecordOnline::_internal_strversion() const {
  return strversion_.Get();
}
inline void Msg_ServerInner_GS_RecordOnline::_internal_set_strversion(const std::string& value) {
  
  strversion_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_RecordOnline::_internal_mutable_strversion() {
  
  return strversion_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_RecordOnline::release_strversion() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strVersion)
  return strversion_.Release();
}
inline void Msg_ServerInner_GS_RecordOnline::set_allocated_strversion(std::string* strversion) {
  if (strversion != nullptr) {
    
  } else {
    
  }
  strversion_.SetAllocated(strversion, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strversion_.IsDefault()) {
    strversion_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_RecordOnline.strVersion)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_ClearOnline

// uint32 uiServerId = 1;
inline void Msg_ServerInner_GS_ClearOnline::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_ClearOnline::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_ClearOnline::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ClearOnline.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_ClearOnline::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_ClearOnline::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ClearOnline.uiServerId)
}

// int64 llCurTime = 2;
inline void Msg_ServerInner_GS_ClearOnline::clear_llcurtime() {
  llcurtime_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_ClearOnline::_internal_llcurtime() const {
  return llcurtime_;
}
inline int64_t Msg_ServerInner_GS_ClearOnline::llcurtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ClearOnline.llCurTime)
  return _internal_llcurtime();
}
inline void Msg_ServerInner_GS_ClearOnline::_internal_set_llcurtime(int64_t value) {
  
  llcurtime_ = value;
}
inline void Msg_ServerInner_GS_ClearOnline::set_llcurtime(int64_t value) {
  _internal_set_llcurtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ClearOnline.llCurTime)
}

// uint32 uiAreaNo = 3;
inline void Msg_ServerInner_GS_ClearOnline::clear_uiareano() {
  uiareano_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_ClearOnline::_internal_uiareano() const {
  return uiareano_;
}
inline uint32_t Msg_ServerInner_GS_ClearOnline::uiareano() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ClearOnline.uiAreaNo)
  return _internal_uiareano();
}
inline void Msg_ServerInner_GS_ClearOnline::_internal_set_uiareano(uint32_t value) {
  
  uiareano_ = value;
}
inline void Msg_ServerInner_GS_ClearOnline::set_uiareano(uint32_t value) {
  _internal_set_uiareano(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ClearOnline.uiAreaNo)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_NotifyOnline

// uint32 uiServerId = 1;
inline void Msg_ServerInner_GS_NotifyOnline::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_NotifyOnline::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_NotifyOnline::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_NotifyOnline::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_NotifyOnline::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.uiServerId)
}

// int64 llPlayerId = 2;
inline void Msg_ServerInner_GS_NotifyOnline::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_NotifyOnline::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_NotifyOnline::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_NotifyOnline::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_NotifyOnline::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.llPlayerId)
}

// int64 llCurTime = 3;
inline void Msg_ServerInner_GS_NotifyOnline::clear_llcurtime() {
  llcurtime_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_NotifyOnline::_internal_llcurtime() const {
  return llcurtime_;
}
inline int64_t Msg_ServerInner_GS_NotifyOnline::llcurtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.llCurTime)
  return _internal_llcurtime();
}
inline void Msg_ServerInner_GS_NotifyOnline::_internal_set_llcurtime(int64_t value) {
  
  llcurtime_ = value;
}
inline void Msg_ServerInner_GS_NotifyOnline::set_llcurtime(int64_t value) {
  _internal_set_llcurtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyOnline.llCurTime)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_NotifyLogout

// uint32 uiServerId = 1;
inline void Msg_ServerInner_GS_NotifyLogout::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_NotifyLogout::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_NotifyLogout::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_NotifyLogout::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_NotifyLogout::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.uiServerId)
}

// int64 llPlayerId = 2;
inline void Msg_ServerInner_GS_NotifyLogout::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_NotifyLogout::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_NotifyLogout::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_NotifyLogout::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_NotifyLogout::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.llPlayerId)
}

// int64 llCurTime = 3;
inline void Msg_ServerInner_GS_NotifyLogout::clear_llcurtime() {
  llcurtime_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_NotifyLogout::_internal_llcurtime() const {
  return llcurtime_;
}
inline int64_t Msg_ServerInner_GS_NotifyLogout::llcurtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.llCurTime)
  return _internal_llcurtime();
}
inline void Msg_ServerInner_GS_NotifyLogout::_internal_set_llcurtime(int64_t value) {
  
  llcurtime_ = value;
}
inline void Msg_ServerInner_GS_NotifyLogout::set_llcurtime(int64_t value) {
  _internal_set_llcurtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_NotifyLogout.llCurTime)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_PlayerLoginReq

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_PlayerLoginReq::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_PlayerLoginReq::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_PlayerLoginReq::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_PlayerLoginReq::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginReq::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.llPlayerId)
}

// string strSessionId = 2;
inline void Msg_ServerInner_GS_PlayerLoginReq::clear_strsessionid() {
  strsessionid_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginReq::strsessionid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.strSessionId)
  return _internal_strsessionid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginReq::set_strsessionid(ArgT0&& arg0, ArgT... args) {
 
 strsessionid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.strSessionId)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginReq::mutable_strsessionid() {
  std::string* _s = _internal_mutable_strsessionid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.strSessionId)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginReq::_internal_strsessionid() const {
  return strsessionid_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginReq::_internal_set_strsessionid(const std::string& value) {
  
  strsessionid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginReq::_internal_mutable_strsessionid() {
  
  return strsessionid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginReq::release_strsessionid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.strSessionId)
  return strsessionid_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginReq::set_allocated_strsessionid(std::string* strsessionid) {
  if (strsessionid != nullptr) {
    
  } else {
    
  }
  strsessionid_.SetAllocated(strsessionid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strsessionid_.IsDefault()) {
    strsessionid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.strSessionId)
}

// uint32 uiServerId = 3;
inline void Msg_ServerInner_GS_PlayerLoginReq::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginReq::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginReq::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_PlayerLoginReq::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginReq::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginReq.uiServerId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_PlayerLoginRsp

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_PlayerLoginRsp::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_PlayerLoginRsp::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.llPlayerId)
}

// .ProtoMsg.ResultCode eResult = 2;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_eresult() {
  eresult_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_PlayerLoginRsp::_internal_eresult() const {
  return static_cast< ::ProtoMsg::ResultCode >(eresult_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_PlayerLoginRsp::eresult() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.eResult)
  return _internal_eresult();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_eresult(::ProtoMsg::ResultCode value) {
  
  eresult_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_eresult(::ProtoMsg::ResultCode value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.eResult)
}

// uint32 uiGameId = 3;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_uigameid() {
  uigameid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::_internal_uigameid() const {
  return uigameid_;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::uigameid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiGameId)
  return _internal_uigameid();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_uigameid(uint32_t value) {
  
  uigameid_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_uigameid(uint32_t value) {
  _internal_set_uigameid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiGameId)
}

// uint32 uiProvince = 4;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_uiprovince() {
  uiprovince_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::_internal_uiprovince() const {
  return uiprovince_;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::uiprovince() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiProvince)
  return _internal_uiprovince();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_uiprovince(uint32_t value) {
  
  uiprovince_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_uiprovince(uint32_t value) {
  _internal_set_uiprovince(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiProvince)
}

// string strProvinceName = 5;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strprovincename() {
  strprovincename_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strprovincename() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strProvinceName)
  return _internal_strprovincename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strprovincename(ArgT0&& arg0, ArgT... args) {
 
 strprovincename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strProvinceName)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strprovincename() {
  std::string* _s = _internal_mutable_strprovincename();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strProvinceName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strprovincename() const {
  return strprovincename_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strprovincename(const std::string& value) {
  
  strprovincename_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strprovincename() {
  
  return strprovincename_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strprovincename() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strProvinceName)
  return strprovincename_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strprovincename(std::string* strprovincename) {
  if (strprovincename != nullptr) {
    
  } else {
    
  }
  strprovincename_.SetAllocated(strprovincename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strprovincename_.IsDefault()) {
    strprovincename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strProvinceName)
}

// string strSessionId = 6;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strsessionid() {
  strsessionid_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strsessionid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strSessionId)
  return _internal_strsessionid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strsessionid(ArgT0&& arg0, ArgT... args) {
 
 strsessionid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strSessionId)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strsessionid() {
  std::string* _s = _internal_mutable_strsessionid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strSessionId)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strsessionid() const {
  return strsessionid_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strsessionid(const std::string& value) {
  
  strsessionid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strsessionid() {
  
  return strsessionid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strsessionid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strSessionId)
  return strsessionid_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strsessionid(std::string* strsessionid) {
  if (strsessionid != nullptr) {
    
  } else {
    
  }
  strsessionid_.SetAllocated(strsessionid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strsessionid_.IsDefault()) {
    strsessionid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strSessionId)
}

// uint32 uiGmLevel = 7;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_uigmlevel() {
  uigmlevel_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::_internal_uigmlevel() const {
  return uigmlevel_;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::uigmlevel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiGmLevel)
  return _internal_uigmlevel();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_uigmlevel(uint32_t value) {
  
  uigmlevel_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_uigmlevel(uint32_t value) {
  _internal_set_uigmlevel(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiGmLevel)
}

// string strDevId = 8;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strdevid() {
  strdevid_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strdevid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strDevId)
  return _internal_strdevid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strdevid(ArgT0&& arg0, ArgT... args) {
 
 strdevid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strDevId)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strdevid() {
  std::string* _s = _internal_mutable_strdevid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strDevId)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strdevid() const {
  return strdevid_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strdevid(const std::string& value) {
  
  strdevid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strdevid() {
  
  return strdevid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strdevid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strDevId)
  return strdevid_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strdevid(std::string* strdevid) {
  if (strdevid != nullptr) {
    
  } else {
    
  }
  strdevid_.SetAllocated(strdevid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strdevid_.IsDefault()) {
    strdevid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strDevId)
}

// uint32 uiProArea = 9;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_uiproarea() {
  uiproarea_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::_internal_uiproarea() const {
  return uiproarea_;
}
inline uint32_t Msg_ServerInner_GS_PlayerLoginRsp::uiproarea() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiProArea)
  return _internal_uiproarea();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_uiproarea(uint32_t value) {
  
  uiproarea_ = value;
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_uiproarea(uint32_t value) {
  _internal_set_uiproarea(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.uiProArea)
}

// string strChannel = 10;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strchannel() {
  strchannel_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strchannel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strChannel)
  return _internal_strchannel();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strchannel(ArgT0&& arg0, ArgT... args) {
 
 strchannel_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strChannel)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strchannel() {
  std::string* _s = _internal_mutable_strchannel();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strChannel)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strchannel() const {
  return strchannel_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strchannel(const std::string& value) {
  
  strchannel_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strchannel() {
  
  return strchannel_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strchannel() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strChannel)
  return strchannel_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strchannel(std::string* strchannel) {
  if (strchannel != nullptr) {
    
  } else {
    
  }
  strchannel_.SetAllocated(strchannel, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strchannel_.IsDefault()) {
    strchannel_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strChannel)
}

// string strPlayerName = 11;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strPlayerName)
}

// string strCityCode = 12;
inline void Msg_ServerInner_GS_PlayerLoginRsp::clear_strcitycode() {
  strcitycode_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::strcitycode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strCityCode)
  return _internal_strcitycode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_PlayerLoginRsp::set_strcitycode(ArgT0&& arg0, ArgT... args) {
 
 strcitycode_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strCityCode)
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::mutable_strcitycode() {
  std::string* _s = _internal_mutable_strcitycode();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strCityCode)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_PlayerLoginRsp::_internal_strcitycode() const {
  return strcitycode_.Get();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::_internal_set_strcitycode(const std::string& value) {
  
  strcitycode_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::_internal_mutable_strcitycode() {
  
  return strcitycode_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_PlayerLoginRsp::release_strcitycode() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strCityCode)
  return strcitycode_.Release();
}
inline void Msg_ServerInner_GS_PlayerLoginRsp::set_allocated_strcitycode(std::string* strcitycode) {
  if (strcitycode != nullptr) {
    
  } else {
    
  }
  strcitycode_.SetAllocated(strcitycode, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strcitycode_.IsDefault()) {
    strcitycode_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_PlayerLoginRsp.strCityCode)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_UniqueIdReq

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_UniqueIdReq::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_UniqueIdReq::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_UniqueIdReq::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_UniqueIdReq::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_UniqueIdReq::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.llPlayerId)
}

// string strPlayerName = 2;
inline void Msg_ServerInner_GS_UniqueIdReq::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_UniqueIdReq::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_UniqueIdReq::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_UniqueIdReq::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_UniqueIdReq::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_UniqueIdReq::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_UniqueIdReq::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_UniqueIdReq::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_UniqueIdReq::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.strPlayerName)
}

// uint32 uiServerId = 3;
inline void Msg_ServerInner_GS_UniqueIdReq::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_UniqueIdReq::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_UniqueIdReq::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_UniqueIdReq::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_UniqueIdReq::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdReq.uiServerId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_UniqueIdRsp

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_UniqueIdRsp::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_UniqueIdRsp::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_UniqueIdRsp::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_UniqueIdRsp::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_UniqueIdRsp::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.llPlayerId)
}

// string strPlayerName = 2;
inline void Msg_ServerInner_GS_UniqueIdRsp::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_UniqueIdRsp::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_UniqueIdRsp::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_UniqueIdRsp::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_UniqueIdRsp::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_UniqueIdRsp::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_UniqueIdRsp::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_UniqueIdRsp::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_UniqueIdRsp::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.strPlayerName)
}

// .ProtoMsg.ResultCode eRet = 3;
inline void Msg_ServerInner_GS_UniqueIdRsp::clear_eret() {
  eret_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_UniqueIdRsp::_internal_eret() const {
  return static_cast< ::ProtoMsg::ResultCode >(eret_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_UniqueIdRsp::eret() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.eRet)
  return _internal_eret();
}
inline void Msg_ServerInner_GS_UniqueIdRsp::_internal_set_eret(::ProtoMsg::ResultCode value) {
  
  eret_ = value;
}
inline void Msg_ServerInner_GS_UniqueIdRsp::set_eret(::ProtoMsg::ResultCode value) {
  _internal_set_eret(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UniqueIdRsp.eRet)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_KickPlayerNotify

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_KickPlayerNotify::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_KickPlayerNotify::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_KickPlayerNotify::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_KickPlayerNotify.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_KickPlayerNotify::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_KickPlayerNotify::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_KickPlayerNotify.llPlayerId)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_TransmitNotify

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_TransmitNotify::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_TransmitNotify::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_TransmitNotify::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_TransmitNotify::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_TransmitNotify::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.llPlayerId)
}

// string strPlayerName = 2;
inline void Msg_ServerInner_GS_TransmitNotify::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_TransmitNotify::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_TransmitNotify::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_TransmitNotify::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_TransmitNotify::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_TransmitNotify::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_TransmitNotify::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_TransmitNotify::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_TransmitNotify::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.strPlayerName)
}

// uint32 uiServerId = 3;
inline void Msg_ServerInner_GS_TransmitNotify::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_TransmitNotify::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_TransmitNotify::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_TransmitNotify::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_TransmitNotify::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.uiServerId)
}

// uint32 uiAreaNo = 4;
inline void Msg_ServerInner_GS_TransmitNotify::clear_uiareano() {
  uiareano_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_TransmitNotify::_internal_uiareano() const {
  return uiareano_;
}
inline uint32_t Msg_ServerInner_GS_TransmitNotify::uiareano() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.uiAreaNo)
  return _internal_uiareano();
}
inline void Msg_ServerInner_GS_TransmitNotify::_internal_set_uiareano(uint32_t value) {
  
  uiareano_ = value;
}
inline void Msg_ServerInner_GS_TransmitNotify::set_uiareano(uint32_t value) {
  _internal_set_uiareano(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.uiAreaNo)
}

// bool bGm = 5;
inline void Msg_ServerInner_GS_TransmitNotify::clear_bgm() {
  bgm_ = false;
}
inline bool Msg_ServerInner_GS_TransmitNotify::_internal_bgm() const {
  return bgm_;
}
inline bool Msg_ServerInner_GS_TransmitNotify::bgm() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.bGm)
  return _internal_bgm();
}
inline void Msg_ServerInner_GS_TransmitNotify::_internal_set_bgm(bool value) {
  
  bgm_ = value;
}
inline void Msg_ServerInner_GS_TransmitNotify::set_bgm(bool value) {
  _internal_set_bgm(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_TransmitNotify.bGm)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_WMsg

// string strClient = 1;
inline void Msg_ServerInner_GS_WMsg::clear_strclient() {
  strclient_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_WMsg::strclient() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_WMsg.strClient)
  return _internal_strclient();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_WMsg::set_strclient(ArgT0&& arg0, ArgT... args) {
 
 strclient_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_WMsg.strClient)
}
inline std::string* Msg_ServerInner_GS_WMsg::mutable_strclient() {
  std::string* _s = _internal_mutable_strclient();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_WMsg.strClient)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_WMsg::_internal_strclient() const {
  return strclient_.Get();
}
inline void Msg_ServerInner_GS_WMsg::_internal_set_strclient(const std::string& value) {
  
  strclient_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::_internal_mutable_strclient() {
  
  return strclient_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::release_strclient() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_WMsg.strClient)
  return strclient_.Release();
}
inline void Msg_ServerInner_GS_WMsg::set_allocated_strclient(std::string* strclient) {
  if (strclient != nullptr) {
    
  } else {
    
  }
  strclient_.SetAllocated(strclient, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strclient_.IsDefault()) {
    strclient_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_WMsg.strClient)
}

// string strServer = 2;
inline void Msg_ServerInner_GS_WMsg::clear_strserver() {
  strserver_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_WMsg::strserver() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_WMsg.strServer)
  return _internal_strserver();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_WMsg::set_strserver(ArgT0&& arg0, ArgT... args) {
 
 strserver_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_WMsg.strServer)
}
inline std::string* Msg_ServerInner_GS_WMsg::mutable_strserver() {
  std::string* _s = _internal_mutable_strserver();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_WMsg.strServer)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_WMsg::_internal_strserver() const {
  return strserver_.Get();
}
inline void Msg_ServerInner_GS_WMsg::_internal_set_strserver(const std::string& value) {
  
  strserver_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::_internal_mutable_strserver() {
  
  return strserver_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::release_strserver() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_WMsg.strServer)
  return strserver_.Release();
}
inline void Msg_ServerInner_GS_WMsg::set_allocated_strserver(std::string* strserver) {
  if (strserver != nullptr) {
    
  } else {
    
  }
  strserver_.SetAllocated(strserver, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strserver_.IsDefault()) {
    strserver_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_WMsg.strServer)
}

// string strMsg = 3;
inline void Msg_ServerInner_GS_WMsg::clear_strmsg() {
  strmsg_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_WMsg::strmsg() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_WMsg.strMsg)
  return _internal_strmsg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_WMsg::set_strmsg(ArgT0&& arg0, ArgT... args) {
 
 strmsg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_WMsg.strMsg)
}
inline std::string* Msg_ServerInner_GS_WMsg::mutable_strmsg() {
  std::string* _s = _internal_mutable_strmsg();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_WMsg.strMsg)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_WMsg::_internal_strmsg() const {
  return strmsg_.Get();
}
inline void Msg_ServerInner_GS_WMsg::_internal_set_strmsg(const std::string& value) {
  
  strmsg_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::_internal_mutable_strmsg() {
  
  return strmsg_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_WMsg::release_strmsg() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_WMsg.strMsg)
  return strmsg_.Release();
}
inline void Msg_ServerInner_GS_WMsg::set_allocated_strmsg(std::string* strmsg) {
  if (strmsg != nullptr) {
    
  } else {
    
  }
  strmsg_.SetAllocated(strmsg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strmsg_.IsDefault()) {
    strmsg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_WMsg.strMsg)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_ModifyNameReq

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_ModifyNameReq::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_ModifyNameReq::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_ModifyNameReq::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_ModifyNameReq::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameReq::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.llPlayerId)
}

// string strPlayerName = 2;
inline void Msg_ServerInner_GS_ModifyNameReq::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_ModifyNameReq::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_ModifyNameReq::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_ModifyNameReq::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_ModifyNameReq::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_ModifyNameReq::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_ModifyNameReq::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_ModifyNameReq::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_ModifyNameReq::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.strPlayerName)
}

// uint32 uiServerId = 3;
inline void Msg_ServerInner_GS_ModifyNameReq::clear_uiserverid() {
  uiserverid_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_ModifyNameReq::_internal_uiserverid() const {
  return uiserverid_;
}
inline uint32_t Msg_ServerInner_GS_ModifyNameReq::uiserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.uiServerId)
  return _internal_uiserverid();
}
inline void Msg_ServerInner_GS_ModifyNameReq::_internal_set_uiserverid(uint32_t value) {
  
  uiserverid_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameReq::set_uiserverid(uint32_t value) {
  _internal_set_uiserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.uiServerId)
}

// uint32 uiAreaNo = 4;
inline void Msg_ServerInner_GS_ModifyNameReq::clear_uiareano() {
  uiareano_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_ModifyNameReq::_internal_uiareano() const {
  return uiareano_;
}
inline uint32_t Msg_ServerInner_GS_ModifyNameReq::uiareano() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.uiAreaNo)
  return _internal_uiareano();
}
inline void Msg_ServerInner_GS_ModifyNameReq::_internal_set_uiareano(uint32_t value) {
  
  uiareano_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameReq::set_uiareano(uint32_t value) {
  _internal_set_uiareano(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.uiAreaNo)
}

// bool bGm = 5;
inline void Msg_ServerInner_GS_ModifyNameReq::clear_bgm() {
  bgm_ = false;
}
inline bool Msg_ServerInner_GS_ModifyNameReq::_internal_bgm() const {
  return bgm_;
}
inline bool Msg_ServerInner_GS_ModifyNameReq::bgm() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.bGm)
  return _internal_bgm();
}
inline void Msg_ServerInner_GS_ModifyNameReq::_internal_set_bgm(bool value) {
  
  bgm_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameReq::set_bgm(bool value) {
  _internal_set_bgm(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameReq.bGm)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_ModifyNameRsp

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_ModifyNameRsp::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_ModifyNameRsp::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_ModifyNameRsp::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_ModifyNameRsp::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameRsp::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.llPlayerId)
}

// string strPlayerName = 2;
inline void Msg_ServerInner_GS_ModifyNameRsp::clear_strplayername() {
  strplayername_.ClearToEmpty();
}
inline const std::string& Msg_ServerInner_GS_ModifyNameRsp::strplayername() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.strPlayerName)
  return _internal_strplayername();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerInner_GS_ModifyNameRsp::set_strplayername(ArgT0&& arg0, ArgT... args) {
 
 strplayername_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.strPlayerName)
}
inline std::string* Msg_ServerInner_GS_ModifyNameRsp::mutable_strplayername() {
  std::string* _s = _internal_mutable_strplayername();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.strPlayerName)
  return _s;
}
inline const std::string& Msg_ServerInner_GS_ModifyNameRsp::_internal_strplayername() const {
  return strplayername_.Get();
}
inline void Msg_ServerInner_GS_ModifyNameRsp::_internal_set_strplayername(const std::string& value) {
  
  strplayername_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_ModifyNameRsp::_internal_mutable_strplayername() {
  
  return strplayername_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerInner_GS_ModifyNameRsp::release_strplayername() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.strPlayerName)
  return strplayername_.Release();
}
inline void Msg_ServerInner_GS_ModifyNameRsp::set_allocated_strplayername(std::string* strplayername) {
  if (strplayername != nullptr) {
    
  } else {
    
  }
  strplayername_.SetAllocated(strplayername, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strplayername_.IsDefault()) {
    strplayername_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.strPlayerName)
}

// .ProtoMsg.ResultCode eRet = 3;
inline void Msg_ServerInner_GS_ModifyNameRsp::clear_eret() {
  eret_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_ModifyNameRsp::_internal_eret() const {
  return static_cast< ::ProtoMsg::ResultCode >(eret_);
}
inline ::ProtoMsg::ResultCode Msg_ServerInner_GS_ModifyNameRsp::eret() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.eRet)
  return _internal_eret();
}
inline void Msg_ServerInner_GS_ModifyNameRsp::_internal_set_eret(::ProtoMsg::ResultCode value) {
  
  eret_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameRsp::set_eret(::ProtoMsg::ResultCode value) {
  _internal_set_eret(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.eRet)
}

// bool bGm = 4;
inline void Msg_ServerInner_GS_ModifyNameRsp::clear_bgm() {
  bgm_ = false;
}
inline bool Msg_ServerInner_GS_ModifyNameRsp::_internal_bgm() const {
  return bgm_;
}
inline bool Msg_ServerInner_GS_ModifyNameRsp::bgm() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.bGm)
  return _internal_bgm();
}
inline void Msg_ServerInner_GS_ModifyNameRsp::_internal_set_bgm(bool value) {
  
  bgm_ = value;
}
inline void Msg_ServerInner_GS_ModifyNameRsp::set_bgm(bool value) {
  _internal_set_bgm(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_ModifyNameRsp.bGm)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_UpdatePlayer

// .ProtoMsg.Svr_Player_Info oPlayer = 1;
inline bool Msg_ServerInner_GS_UpdatePlayer::_internal_has_oplayer() const {
  return this != internal_default_instance() && oplayer_ != nullptr;
}
inline bool Msg_ServerInner_GS_UpdatePlayer::has_oplayer() const {
  return _internal_has_oplayer();
}
inline const ::ProtoMsg::Svr_Player_Info& Msg_ServerInner_GS_UpdatePlayer::_internal_oplayer() const {
  const ::ProtoMsg::Svr_Player_Info* p = oplayer_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::Svr_Player_Info&>(
      ::ProtoMsg::_Svr_Player_Info_default_instance_);
}
inline const ::ProtoMsg::Svr_Player_Info& Msg_ServerInner_GS_UpdatePlayer::oplayer() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.oPlayer)
  return _internal_oplayer();
}
inline void Msg_ServerInner_GS_UpdatePlayer::unsafe_arena_set_allocated_oplayer(
    ::ProtoMsg::Svr_Player_Info* oplayer) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oplayer_);
  }
  oplayer_ = oplayer;
  if (oplayer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.oPlayer)
}
inline ::ProtoMsg::Svr_Player_Info* Msg_ServerInner_GS_UpdatePlayer::release_oplayer() {
  
  ::ProtoMsg::Svr_Player_Info* temp = oplayer_;
  oplayer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::Svr_Player_Info* Msg_ServerInner_GS_UpdatePlayer::unsafe_arena_release_oplayer() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.oPlayer)
  
  ::ProtoMsg::Svr_Player_Info* temp = oplayer_;
  oplayer_ = nullptr;
  return temp;
}
inline ::ProtoMsg::Svr_Player_Info* Msg_ServerInner_GS_UpdatePlayer::_internal_mutable_oplayer() {
  
  if (oplayer_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::Svr_Player_Info>(GetArenaForAllocation());
    oplayer_ = p;
  }
  return oplayer_;
}
inline ::ProtoMsg::Svr_Player_Info* Msg_ServerInner_GS_UpdatePlayer::mutable_oplayer() {
  ::ProtoMsg::Svr_Player_Info* _msg = _internal_mutable_oplayer();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.oPlayer)
  return _msg;
}
inline void Msg_ServerInner_GS_UpdatePlayer::set_allocated_oplayer(::ProtoMsg::Svr_Player_Info* oplayer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(oplayer_);
  }
  if (oplayer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oplayer));
    if (message_arena != submessage_arena) {
      oplayer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oplayer, submessage_arena);
    }
    
  } else {
    
  }
  oplayer_ = oplayer;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.oPlayer)
}

// bool bLogin = 2;
inline void Msg_ServerInner_GS_UpdatePlayer::clear_blogin() {
  blogin_ = false;
}
inline bool Msg_ServerInner_GS_UpdatePlayer::_internal_blogin() const {
  return blogin_;
}
inline bool Msg_ServerInner_GS_UpdatePlayer::blogin() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.bLogin)
  return _internal_blogin();
}
inline void Msg_ServerInner_GS_UpdatePlayer::_internal_set_blogin(bool value) {
  
  blogin_ = value;
}
inline void Msg_ServerInner_GS_UpdatePlayer::set_blogin(bool value) {
  _internal_set_blogin(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UpdatePlayer.bLogin)
}

// -------------------------------------------------------------------

// Msg_ServerInner_GS_UpdateRmb

// int64 llPlayerId = 1;
inline void Msg_ServerInner_GS_UpdateRmb::clear_llplayerid() {
  llplayerid_ = int64_t{0};
}
inline int64_t Msg_ServerInner_GS_UpdateRmb::_internal_llplayerid() const {
  return llplayerid_;
}
inline int64_t Msg_ServerInner_GS_UpdateRmb::llplayerid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.llPlayerId)
  return _internal_llplayerid();
}
inline void Msg_ServerInner_GS_UpdateRmb::_internal_set_llplayerid(int64_t value) {
  
  llplayerid_ = value;
}
inline void Msg_ServerInner_GS_UpdateRmb::set_llplayerid(int64_t value) {
  _internal_set_llplayerid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.llPlayerId)
}

// uint32 uiRmb = 2;
inline void Msg_ServerInner_GS_UpdateRmb::clear_uirmb() {
  uirmb_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_UpdateRmb::_internal_uirmb() const {
  return uirmb_;
}
inline uint32_t Msg_ServerInner_GS_UpdateRmb::uirmb() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.uiRmb)
  return _internal_uirmb();
}
inline void Msg_ServerInner_GS_UpdateRmb::_internal_set_uirmb(uint32_t value) {
  
  uirmb_ = value;
}
inline void Msg_ServerInner_GS_UpdateRmb::set_uirmb(uint32_t value) {
  _internal_set_uirmb(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.uiRmb)
}

// uint32 uiRechare = 3;
inline void Msg_ServerInner_GS_UpdateRmb::clear_uirechare() {
  uirechare_ = 0u;
}
inline uint32_t Msg_ServerInner_GS_UpdateRmb::_internal_uirechare() const {
  return uirechare_;
}
inline uint32_t Msg_ServerInner_GS_UpdateRmb::uirechare() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.uiRechare)
  return _internal_uirechare();
}
inline void Msg_ServerInner_GS_UpdateRmb::_internal_set_uirechare(uint32_t value) {
  
  uirechare_ = value;
}
inline void Msg_ServerInner_GS_UpdateRmb::set_uirechare(uint32_t value) {
  _internal_set_uirechare(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerInner_GS_UpdateRmb.uiRechare)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoMsg::MsgModule_ServerInner_MsgCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MsgModule_ServerInner_MsgCmd>() {
  return ::ProtoMsg::MsgModule_ServerInner_MsgCmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverinner_2eproto
