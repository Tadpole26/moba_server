// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_battle.proto

#include "msg_module_battle.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ProtoMsg {
PROTOBUF_CONSTEXPR MsgModule_Battle::MsgModule_Battle(
    ::_pbi::ConstantInitialized){}
struct MsgModule_BattleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgModule_BattleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgModule_BattleDefaultTypeInternal() {}
  union {
    MsgModule_Battle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgModule_BattleDefaultTypeInternal _MsgModule_Battle_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_Beat_Req::Msg_Battle_Beat_Req(
    ::_pbi::ConstantInitialized){}
struct Msg_Battle_Beat_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_Beat_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_Beat_ReqDefaultTypeInternal() {}
  union {
    Msg_Battle_Beat_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_Beat_ReqDefaultTypeInternal _Msg_Battle_Beat_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_Beat_Rsp::Msg_Battle_Beat_Rsp(
    ::_pbi::ConstantInitialized){}
struct Msg_Battle_Beat_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_Beat_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_Beat_RspDefaultTypeInternal() {}
  union {
    Msg_Battle_Beat_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_Beat_RspDefaultTypeInternal _Msg_Battle_Beat_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_EnterRoom_Req::Msg_Battle_EnterRoom_Req(
    ::_pbi::ConstantInitialized)
  : strroomsessionid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strusersessionid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct Msg_Battle_EnterRoom_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_EnterRoom_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_EnterRoom_ReqDefaultTypeInternal() {}
  union {
    Msg_Battle_EnterRoom_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_EnterRoom_ReqDefaultTypeInternal _Msg_Battle_EnterRoom_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_EnterRoom_Rsp::Msg_Battle_EnterRoom_Rsp(
    ::_pbi::ConstantInitialized)
  : strmapname_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , etype_(0)

  , irandseed_(0)
  , estatus_(0)

  , iroomtime_(0)
  , istarttime_(0){}
struct Msg_Battle_EnterRoom_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_EnterRoom_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_EnterRoom_RspDefaultTypeInternal() {}
  union {
    Msg_Battle_EnterRoom_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_EnterRoom_RspDefaultTypeInternal _Msg_Battle_EnterRoom_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_Error_Notify::Msg_Battle_Error_Notify(
    ::_pbi::ConstantInitialized)
  : uimoduleid_(0u)
  , uicmd_(0u)
  , eerrorcode_(0)
{}
struct Msg_Battle_Error_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_Error_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_Error_NotifyDefaultTypeInternal() {}
  union {
    Msg_Battle_Error_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_Error_NotifyDefaultTypeInternal _Msg_Battle_Error_Notify_default_instance_;
PROTOBUF_CONSTEXPR battle_room_info_t::battle_room_info_t(
    ::_pbi::ConstantInitialized)
  : strsession_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , mapname_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , eroomtype_(0)
{}
struct battle_room_info_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR battle_room_info_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~battle_room_info_tDefaultTypeInternal() {}
  union {
    battle_room_info_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 battle_room_info_tDefaultTypeInternal _battle_room_info_t_default_instance_;
PROTOBUF_CONSTEXPR battle_order_t::battle_order_t(
    ::_pbi::ConstantInitialized)
  : iexectime_(0)
  , iuserid_(0)
  , itype_(0)
  , iarg1_(0)
  , iarg2_(0){}
struct battle_order_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR battle_order_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~battle_order_tDefaultTypeInternal() {}
  union {
    battle_order_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 battle_order_tDefaultTypeInternal _battle_order_t_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_OverRoom_Req::Msg_Battle_OverRoom_Req(
    ::_pbi::ConstantInitialized)
  : ouserdata_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , ikeytype_(0)
  , icrc_(0){}
struct Msg_Battle_OverRoom_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_OverRoom_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_OverRoom_ReqDefaultTypeInternal() {}
  union {
    Msg_Battle_OverRoom_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_OverRoom_ReqDefaultTypeInternal _Msg_Battle_OverRoom_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_OverRoom_Rsp::Msg_Battle_OverRoom_Rsp(
    ::_pbi::ConstantInitialized){}
struct Msg_Battle_OverRoom_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_OverRoom_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_OverRoom_RspDefaultTypeInternal() {}
  union {
    Msg_Battle_OverRoom_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_OverRoom_RspDefaultTypeInternal _Msg_Battle_OverRoom_Rsp_default_instance_;
PROTOBUF_CONSTEXPR load_progress_info_t::load_progress_info_t(
    ::_pbi::ConstantInitialized)
  : lluserid_(int64_t{0})
  , iprogress_(0){}
struct load_progress_info_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR load_progress_info_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~load_progress_info_tDefaultTypeInternal() {}
  union {
    load_progress_info_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 load_progress_info_tDefaultTypeInternal _load_progress_info_t_default_instance_;
PROTOBUF_CONSTEXPR Msg_RoomLoadProgress_Notify::Msg_RoomLoadProgress_Notify(
    ::_pbi::ConstantInitialized)
  : vecload_(){}
struct Msg_RoomLoadProgress_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_RoomLoadProgress_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_RoomLoadProgress_NotifyDefaultTypeInternal() {}
  union {
    Msg_RoomLoadProgress_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_RoomLoadProgress_NotifyDefaultTypeInternal _Msg_RoomLoadProgress_Notify_default_instance_;
PROTOBUF_CONSTEXPR Msg_RoomHeartbeat_Notify::Msg_RoomHeartbeat_Notify(
    ::_pbi::ConstantInitialized)
  : vecorders_()
  , iservertime_(0)
  , iroomtime_(0){}
struct Msg_RoomHeartbeat_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_RoomHeartbeat_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_RoomHeartbeat_NotifyDefaultTypeInternal() {}
  union {
    Msg_RoomHeartbeat_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_RoomHeartbeat_NotifyDefaultTypeInternal _Msg_RoomHeartbeat_Notify_default_instance_;
PROTOBUF_CONSTEXPR Msg_RoomStart_Notify::Msg_RoomStart_Notify(
    ::_pbi::ConstantInitialized)
  : iservertime_(0)
  , iroomtime_(0){}
struct Msg_RoomStart_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_RoomStart_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_RoomStart_NotifyDefaultTypeInternal() {}
  union {
    Msg_RoomStart_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_RoomStart_NotifyDefaultTypeInternal _Msg_RoomStart_Notify_default_instance_;
PROTOBUF_CONSTEXPR Msg_Battle_Result_Notify::Msg_Battle_Result_Notify(
    ::_pbi::ConstantInitialized)
  : vecdata_()
  , ereusltcode_(0)
{}
struct Msg_Battle_Result_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_Battle_Result_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_Battle_Result_NotifyDefaultTypeInternal() {}
  union {
    Msg_Battle_Result_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_Battle_Result_NotifyDefaultTypeInternal _Msg_Battle_Result_Notify_default_instance_;
}  // namespace ProtoMsg
static ::_pb::Metadata file_level_metadata_msg_5fmodule_5fbattle_2eproto[15];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_5fmodule_5fbattle_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fmodule_5fbattle_2eproto = nullptr;

const uint32_t TableStruct_msg_5fmodule_5fbattle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::MsgModule_Battle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Beat_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Beat_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Req, strroomsessionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Req, strusersessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, etype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, strmapname_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, irandseed_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, estatus_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, iroomtime_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_EnterRoom_Rsp, istarttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Error_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Error_Notify, uimoduleid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Error_Notify, uicmd_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Error_Notify, eerrorcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_room_info_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_room_info_t, strsession_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_room_info_t, eroomtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_room_info_t, mapname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, iexectime_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, iuserid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, itype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, iarg1_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::battle_order_t, iarg2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_OverRoom_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_OverRoom_Req, ouserdata_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_OverRoom_Req, ikeytype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_OverRoom_Req, icrc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_OverRoom_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::load_progress_info_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::load_progress_info_t, lluserid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::load_progress_info_t, iprogress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomLoadProgress_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomLoadProgress_Notify, vecload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomHeartbeat_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomHeartbeat_Notify, iservertime_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomHeartbeat_Notify, iroomtime_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomHeartbeat_Notify, vecorders_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomStart_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomStart_Notify, iservertime_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_RoomStart_Notify, iroomtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Result_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Result_Notify, ereusltcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_Battle_Result_Notify, vecdata_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ProtoMsg::MsgModule_Battle)},
  { 6, -1, -1, sizeof(::ProtoMsg::Msg_Battle_Beat_Req)},
  { 12, -1, -1, sizeof(::ProtoMsg::Msg_Battle_Beat_Rsp)},
  { 18, -1, -1, sizeof(::ProtoMsg::Msg_Battle_EnterRoom_Req)},
  { 26, -1, -1, sizeof(::ProtoMsg::Msg_Battle_EnterRoom_Rsp)},
  { 38, -1, -1, sizeof(::ProtoMsg::Msg_Battle_Error_Notify)},
  { 47, -1, -1, sizeof(::ProtoMsg::battle_room_info_t)},
  { 56, -1, -1, sizeof(::ProtoMsg::battle_order_t)},
  { 67, -1, -1, sizeof(::ProtoMsg::Msg_Battle_OverRoom_Req)},
  { 76, -1, -1, sizeof(::ProtoMsg::Msg_Battle_OverRoom_Rsp)},
  { 82, -1, -1, sizeof(::ProtoMsg::load_progress_info_t)},
  { 90, -1, -1, sizeof(::ProtoMsg::Msg_RoomLoadProgress_Notify)},
  { 97, -1, -1, sizeof(::ProtoMsg::Msg_RoomHeartbeat_Notify)},
  { 106, -1, -1, sizeof(::ProtoMsg::Msg_RoomStart_Notify)},
  { 114, -1, -1, sizeof(::ProtoMsg::Msg_Battle_Result_Notify)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ProtoMsg::_MsgModule_Battle_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_Beat_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_Beat_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_EnterRoom_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_EnterRoom_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_Error_Notify_default_instance_._instance,
  &::ProtoMsg::_battle_room_info_t_default_instance_._instance,
  &::ProtoMsg::_battle_order_t_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_OverRoom_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_OverRoom_Rsp_default_instance_._instance,
  &::ProtoMsg::_load_progress_info_t_default_instance_._instance,
  &::ProtoMsg::_Msg_RoomLoadProgress_Notify_default_instance_._instance,
  &::ProtoMsg::_Msg_RoomHeartbeat_Notify_default_instance_._instance,
  &::ProtoMsg::_Msg_RoomStart_Notify_default_instance_._instance,
  &::ProtoMsg::_Msg_Battle_Result_Notify_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fmodule_5fbattle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027msg_module_battle.proto\022\010ProtoMsg\032\020msg"
  "_common.proto\032\021result_code.proto\"\351\006\n\020Msg"
  "Module_Battle\"\324\006\n\006MsgCmd\022\023\n\017Msg_Battle_N"
  "one\020\000\022 \n\034Msg_Battle_RoomHeartbeat_Rsp\020\001\022"
  "\034\n\030Msg_Battle_EnterRoom_Req\020\002\022\034\n\030Msg_Bat"
  "tle_EnterRoom_Rsp\020\003\022\034\n\030Msg_Battle_StartR"
  "oom_Req\020\004\022\034\n\030Msg_Battle_StartRoom_Rsp\020\005\022"
  "\034\n\030Msg_Battle_OrderRoom_Req\020\006\022\034\n\030Msg_Bat"
  "tle_OrderRoom_Rsp\020\007\022\033\n\027Msg_Battle_QuitRo"
  "om_Req\020\010\022\033\n\027Msg_Battle_QuitRoom_Rsp\020\t\022\034\n"
  "\030Msg_Battle_PauseRoom_Req\020\n\022\034\n\030Msg_Battl"
  "e_PauseRoom_Rsp\020\013\022\036\n\032Msg_Battle_RecoverR"
  "oom_Req\020\014\022\036\n\032Msg_Battle_RecoverRoom_Rsp\020"
  "\r\022\034\n\030Msg_Battle_Result_Notify\020\016\022\033\n\027Msg_B"
  "attle_OverRoom_Req\020\017\022\033\n\027Msg_Battle_OverR"
  "oom_Rsp\020\020\022 \n\034Msg_Battle_GetRoomOrders_Re"
  "q\020\021\022 \n\034Msg_Battle_GetRoomOrders_Rsp\020\022\022!\n"
  "\035Msg_Battle_SyncOrdersOver_Req\020\023\022!\n\035Msg_"
  "Battle_SyncOrdersOver_Rsp\020\024\022\033\n\027Msg_Battl"
  "e_Error_Notify\020\025\022\027\n\023Msg_Battle_Beat_Req\020"
  "\026\022\027\n\023Msg_Battle_Beat_Rsp\020\027\022\037\n\033Msg_RoomLo"
  "adProgress_Submit\020\030\022\037\n\033Msg_RoomLoadProgr"
  "ess_Notify\020\031\022\034\n\030Msg_RoomHeartbeat_Notify"
  "\020\032\022\030\n\024Msg_RoomStart_Notify\020\033\"\025\n\023Msg_Batt"
  "le_Beat_Req\"\025\n\023Msg_Battle_Beat_Rsp\"N\n\030Ms"
  "g_Battle_EnterRoom_Req\022\030\n\020strRoomSession"
  "Id\030\001 \001(\t\022\030\n\020strUserSessionId\030\002 \001(\t\"\264\001\n\030M"
  "sg_Battle_EnterRoom_Rsp\022\"\n\005eType\030\001 \001(\0162\023"
  ".ProtoMsg.ERoomType\022\022\n\nstrMapName\030\002 \001(\t\022"
  "\021\n\tiRandSeed\030\003 \001(\005\022&\n\007eStatus\030\004 \001(\0162\025.Pr"
  "otoMsg.ERoomStatus\022\021\n\tiRoomTime\030\005 \001(\005\022\022\n"
  "\niStartTime\030\006 \001(\005\"f\n\027Msg_Battle_Error_No"
  "tify\022\022\n\nuiModuleId\030\001 \001(\r\022\r\n\005uiCmd\030\002 \001(\r\022"
  "(\n\neErrorCode\030\003 \001(\0162\024.ProtoMsg.ResultCod"
  "e\"a\n\022battle_room_info_t\022\022\n\nstrSession\030\001 "
  "\001(\t\022&\n\teRoomType\030\002 \001(\0162\023.ProtoMsg.ERoomT"
  "ype\022\017\n\007mapName\030\003 \001(\t\"a\n\016battle_order_t\022\021"
  "\n\tiExecTime\030\001 \001(\005\022\017\n\007iUserId\030\002 \001(\005\022\r\n\005iT"
  "ype\030\003 \001(\005\022\r\n\005iArg1\030\004 \001(\005\022\r\n\005iArg2\030\005 \001(\005\""
  "L\n\027Msg_Battle_OverRoom_Req\022\021\n\toUserData\030"
  "\001 \001(\014\022\020\n\010iKeyType\030\002 \001(\005\022\014\n\004iCrc\030\003 \001(\005\"\031\n"
  "\027Msg_Battle_OverRoom_Rsp\";\n\024load_progres"
  "s_info_t\022\020\n\010llUserid\030\001 \001(\003\022\021\n\tiProgress\030"
  "\002 \001(\005\"N\n\033Msg_RoomLoadProgress_Notify\022/\n\007"
  "vecLoad\030\001 \003(\0132\036.ProtoMsg.load_progress_i"
  "nfo_t\"o\n\030Msg_RoomHeartbeat_Notify\022\023\n\013iSe"
  "rverTime\030\001 \001(\005\022\021\n\tiRoomTime\030\002 \001(\005\022+\n\tvec"
  "Orders\030\003 \003(\0132\030.ProtoMsg.battle_order_t\">"
  "\n\024Msg_RoomStart_Notify\022\023\n\013iServerTime\030\001 "
  "\001(\005\022\021\n\tiRoomTime\030\002 \001(\005\"s\n\030Msg_Battle_Res"
  "ult_Notify\022&\n\013eReusltCode\030\001 \001(\0162\021.ProtoM"
  "sg.EBRCode\022/\n\007vecData\030\002 \003(\0132\036.ProtoMsg.u"
  "ser_battle_result_tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_msg_5fmodule_5fbattle_2eproto_deps[2] = {
  &::descriptor_table_msg_5fcommon_2eproto,
  &::descriptor_table_result_5fcode_2eproto,
};
static ::_pbi::once_flag descriptor_table_msg_5fmodule_5fbattle_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fmodule_5fbattle_2eproto = {
    false, false, 2107, descriptor_table_protodef_msg_5fmodule_5fbattle_2eproto,
    "msg_module_battle.proto",
    &descriptor_table_msg_5fmodule_5fbattle_2eproto_once, descriptor_table_msg_5fmodule_5fbattle_2eproto_deps, 2, 15,
    schemas, file_default_instances, TableStruct_msg_5fmodule_5fbattle_2eproto::offsets,
    file_level_metadata_msg_5fmodule_5fbattle_2eproto, file_level_enum_descriptors_msg_5fmodule_5fbattle_2eproto,
    file_level_service_descriptors_msg_5fmodule_5fbattle_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fmodule_5fbattle_2eproto_getter() {
  return &descriptor_table_msg_5fmodule_5fbattle_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fmodule_5fbattle_2eproto(&descriptor_table_msg_5fmodule_5fbattle_2eproto);
namespace ProtoMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_Battle_MsgCmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fmodule_5fbattle_2eproto);
  return file_level_enum_descriptors_msg_5fmodule_5fbattle_2eproto[0];
}
bool MsgModule_Battle_MsgCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_None;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_RoomHeartbeat_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_EnterRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_EnterRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_StartRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_StartRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_OrderRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_OrderRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_QuitRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_QuitRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_PauseRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_PauseRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_RecoverRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_RecoverRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_Result_Notify;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_OverRoom_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_OverRoom_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_GetRoomOrders_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_GetRoomOrders_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_SyncOrdersOver_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_SyncOrdersOver_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_Error_Notify;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_Beat_Req;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_Battle_Beat_Rsp;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_RoomLoadProgress_Submit;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_RoomLoadProgress_Notify;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_RoomHeartbeat_Notify;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::Msg_RoomStart_Notify;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::MsgCmd_MIN;
constexpr MsgModule_Battle_MsgCmd MsgModule_Battle::MsgCmd_MAX;
constexpr int MsgModule_Battle::MsgCmd_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgModule_Battle::_Internal {
 public:
};

MsgModule_Battle::MsgModule_Battle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.MsgModule_Battle)
}
MsgModule_Battle::MsgModule_Battle(const MsgModule_Battle& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MsgModule_Battle)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgModule_Battle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgModule_Battle::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgModule_Battle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[0]);
}

// ===================================================================

class Msg_Battle_Beat_Req::_Internal {
 public:
};

Msg_Battle_Beat_Req::Msg_Battle_Beat_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_Beat_Req)
}
Msg_Battle_Beat_Req::Msg_Battle_Beat_Req(const Msg_Battle_Beat_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_Beat_Req)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_Beat_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_Beat_Req::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_Beat_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[1]);
}

// ===================================================================

class Msg_Battle_Beat_Rsp::_Internal {
 public:
};

Msg_Battle_Beat_Rsp::Msg_Battle_Beat_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_Beat_Rsp)
}
Msg_Battle_Beat_Rsp::Msg_Battle_Beat_Rsp(const Msg_Battle_Beat_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_Beat_Rsp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_Beat_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_Beat_Rsp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_Beat_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[2]);
}

// ===================================================================

class Msg_Battle_EnterRoom_Req::_Internal {
 public:
};

Msg_Battle_EnterRoom_Req::Msg_Battle_EnterRoom_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_EnterRoom_Req)
}
Msg_Battle_EnterRoom_Req::Msg_Battle_EnterRoom_Req(const Msg_Battle_EnterRoom_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strroomsessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strroomsessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strroomsessionid().empty()) {
    strroomsessionid_.Set(from._internal_strroomsessionid(), 
      GetArenaForAllocation());
  }
  strusersessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strusersessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strusersessionid().empty()) {
    strusersessionid_.Set(from._internal_strusersessionid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_EnterRoom_Req)
}

inline void Msg_Battle_EnterRoom_Req::SharedCtor() {
strroomsessionid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strroomsessionid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strusersessionid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strusersessionid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg_Battle_EnterRoom_Req::~Msg_Battle_EnterRoom_Req() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_Battle_EnterRoom_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_Battle_EnterRoom_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strroomsessionid_.Destroy();
  strusersessionid_.Destroy();
}

void Msg_Battle_EnterRoom_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_EnterRoom_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_Battle_EnterRoom_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strroomsessionid_.ClearToEmpty();
  strusersessionid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_EnterRoom_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string strRoomSessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_strroomsessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_Battle_EnterRoom_Req.strRoomSessionId"));
        } else
          goto handle_unusual;
        continue;
      // string strUserSessionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_strusersessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_Battle_EnterRoom_Req.strUserSessionId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_EnterRoom_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_Battle_EnterRoom_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string strRoomSessionId = 1;
  if (!this->_internal_strroomsessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strroomsessionid().data(), static_cast<int>(this->_internal_strroomsessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_Battle_EnterRoom_Req.strRoomSessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strroomsessionid(), target);
  }

  // string strUserSessionId = 2;
  if (!this->_internal_strusersessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strusersessionid().data(), static_cast<int>(this->_internal_strusersessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_Battle_EnterRoom_Req.strUserSessionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_strusersessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_Battle_EnterRoom_Req)
  return target;
}

size_t Msg_Battle_EnterRoom_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_Battle_EnterRoom_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strRoomSessionId = 1;
  if (!this->_internal_strroomsessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strroomsessionid());
  }

  // string strUserSessionId = 2;
  if (!this->_internal_strusersessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strusersessionid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_EnterRoom_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_EnterRoom_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_EnterRoom_Req::GetClassData() const { return &_class_data_; }

void Msg_Battle_EnterRoom_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_EnterRoom_Req *>(to)->MergeFrom(
      static_cast<const Msg_Battle_EnterRoom_Req &>(from));
}


void Msg_Battle_EnterRoom_Req::MergeFrom(const Msg_Battle_EnterRoom_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_Battle_EnterRoom_Req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strroomsessionid().empty()) {
    _internal_set_strroomsessionid(from._internal_strroomsessionid());
  }
  if (!from._internal_strusersessionid().empty()) {
    _internal_set_strusersessionid(from._internal_strusersessionid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_EnterRoom_Req::CopyFrom(const Msg_Battle_EnterRoom_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_Battle_EnterRoom_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_EnterRoom_Req::IsInitialized() const {
  return true;
}

void Msg_Battle_EnterRoom_Req::InternalSwap(Msg_Battle_EnterRoom_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strroomsessionid_, lhs_arena,
      &other->strroomsessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strusersessionid_, lhs_arena,
      &other->strusersessionid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_EnterRoom_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[3]);
}

// ===================================================================

class Msg_Battle_EnterRoom_Rsp::_Internal {
 public:
};

Msg_Battle_EnterRoom_Rsp::Msg_Battle_EnterRoom_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
}
Msg_Battle_EnterRoom_Rsp::Msg_Battle_EnterRoom_Rsp(const Msg_Battle_EnterRoom_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strmapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strmapname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strmapname().empty()) {
    strmapname_.Set(from._internal_strmapname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&etype_, &from.etype_,
    static_cast<size_t>(reinterpret_cast<char*>(&istarttime_) -
    reinterpret_cast<char*>(&etype_)) + sizeof(istarttime_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
}

inline void Msg_Battle_EnterRoom_Rsp::SharedCtor() {
strmapname_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strmapname_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&etype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&istarttime_) -
    reinterpret_cast<char*>(&etype_)) + sizeof(istarttime_));
}

Msg_Battle_EnterRoom_Rsp::~Msg_Battle_EnterRoom_Rsp() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_Battle_EnterRoom_Rsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strmapname_.Destroy();
}

void Msg_Battle_EnterRoom_Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_EnterRoom_Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strmapname_.ClearToEmpty();
  ::memset(&etype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&istarttime_) -
      reinterpret_cast<char*>(&etype_)) + sizeof(istarttime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_EnterRoom_Rsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProtoMsg.ERoomType eType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_etype(static_cast<::ProtoMsg::ERoomType>(val));
        } else
          goto handle_unusual;
        continue;
      // string strMapName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_strmapname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_Battle_EnterRoom_Rsp.strMapName"));
        } else
          goto handle_unusual;
        continue;
      // int32 iRandSeed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          irandseed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ERoomStatus eStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_estatus(static_cast<::ProtoMsg::ERoomStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 iRoomTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          iroomtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iStartTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          istarttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_EnterRoom_Rsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.ERoomType eType = 1;
  if (this->_internal_etype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_etype(), target);
  }

  // string strMapName = 2;
  if (!this->_internal_strmapname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strmapname().data(), static_cast<int>(this->_internal_strmapname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_Battle_EnterRoom_Rsp.strMapName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_strmapname(), target);
  }

  // int32 iRandSeed = 3;
  if (this->_internal_irandseed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_irandseed(), target);
  }

  // .ProtoMsg.ERoomStatus eStatus = 4;
  if (this->_internal_estatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_estatus(), target);
  }

  // int32 iRoomTime = 5;
  if (this->_internal_iroomtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_iroomtime(), target);
  }

  // int32 iStartTime = 6;
  if (this->_internal_istarttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_istarttime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  return target;
}

size_t Msg_Battle_EnterRoom_Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strMapName = 2;
  if (!this->_internal_strmapname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strmapname());
  }

  // .ProtoMsg.ERoomType eType = 1;
  if (this->_internal_etype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_etype());
  }

  // int32 iRandSeed = 3;
  if (this->_internal_irandseed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_irandseed());
  }

  // .ProtoMsg.ERoomStatus eStatus = 4;
  if (this->_internal_estatus() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_estatus());
  }

  // int32 iRoomTime = 5;
  if (this->_internal_iroomtime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomtime());
  }

  // int32 iStartTime = 6;
  if (this->_internal_istarttime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_istarttime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_EnterRoom_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_EnterRoom_Rsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_EnterRoom_Rsp::GetClassData() const { return &_class_data_; }

void Msg_Battle_EnterRoom_Rsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_EnterRoom_Rsp *>(to)->MergeFrom(
      static_cast<const Msg_Battle_EnterRoom_Rsp &>(from));
}


void Msg_Battle_EnterRoom_Rsp::MergeFrom(const Msg_Battle_EnterRoom_Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strmapname().empty()) {
    _internal_set_strmapname(from._internal_strmapname());
  }
  if (from._internal_etype() != 0) {
    _internal_set_etype(from._internal_etype());
  }
  if (from._internal_irandseed() != 0) {
    _internal_set_irandseed(from._internal_irandseed());
  }
  if (from._internal_estatus() != 0) {
    _internal_set_estatus(from._internal_estatus());
  }
  if (from._internal_iroomtime() != 0) {
    _internal_set_iroomtime(from._internal_iroomtime());
  }
  if (from._internal_istarttime() != 0) {
    _internal_set_istarttime(from._internal_istarttime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_EnterRoom_Rsp::CopyFrom(const Msg_Battle_EnterRoom_Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_Battle_EnterRoom_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_EnterRoom_Rsp::IsInitialized() const {
  return true;
}

void Msg_Battle_EnterRoom_Rsp::InternalSwap(Msg_Battle_EnterRoom_Rsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strmapname_, lhs_arena,
      &other->strmapname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_Battle_EnterRoom_Rsp, istarttime_)
      + sizeof(Msg_Battle_EnterRoom_Rsp::istarttime_)
      - PROTOBUF_FIELD_OFFSET(Msg_Battle_EnterRoom_Rsp, etype_)>(
          reinterpret_cast<char*>(&etype_),
          reinterpret_cast<char*>(&other->etype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_EnterRoom_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[4]);
}

// ===================================================================

class Msg_Battle_Error_Notify::_Internal {
 public:
};

Msg_Battle_Error_Notify::Msg_Battle_Error_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_Error_Notify)
}
Msg_Battle_Error_Notify::Msg_Battle_Error_Notify(const Msg_Battle_Error_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&uimoduleid_, &from.uimoduleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eerrorcode_) -
    reinterpret_cast<char*>(&uimoduleid_)) + sizeof(eerrorcode_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_Error_Notify)
}

inline void Msg_Battle_Error_Notify::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uimoduleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&eerrorcode_) -
    reinterpret_cast<char*>(&uimoduleid_)) + sizeof(eerrorcode_));
}

Msg_Battle_Error_Notify::~Msg_Battle_Error_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_Battle_Error_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_Battle_Error_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_Battle_Error_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_Error_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_Battle_Error_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&uimoduleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eerrorcode_) -
      reinterpret_cast<char*>(&uimoduleid_)) + sizeof(eerrorcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_Error_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uiModuleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uimoduleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCmd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uicmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ResultCode eErrorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eerrorcode(static_cast<::ProtoMsg::ResultCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_Error_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_Battle_Error_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiModuleId = 1;
  if (this->_internal_uimoduleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uimoduleid(), target);
  }

  // uint32 uiCmd = 2;
  if (this->_internal_uicmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uicmd(), target);
  }

  // .ProtoMsg.ResultCode eErrorCode = 3;
  if (this->_internal_eerrorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_eerrorcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_Battle_Error_Notify)
  return target;
}

size_t Msg_Battle_Error_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_Battle_Error_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 uiModuleId = 1;
  if (this->_internal_uimoduleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uimoduleid());
  }

  // uint32 uiCmd = 2;
  if (this->_internal_uicmd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicmd());
  }

  // .ProtoMsg.ResultCode eErrorCode = 3;
  if (this->_internal_eerrorcode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eerrorcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_Error_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_Error_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_Error_Notify::GetClassData() const { return &_class_data_; }

void Msg_Battle_Error_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_Error_Notify *>(to)->MergeFrom(
      static_cast<const Msg_Battle_Error_Notify &>(from));
}


void Msg_Battle_Error_Notify::MergeFrom(const Msg_Battle_Error_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_Battle_Error_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uimoduleid() != 0) {
    _internal_set_uimoduleid(from._internal_uimoduleid());
  }
  if (from._internal_uicmd() != 0) {
    _internal_set_uicmd(from._internal_uicmd());
  }
  if (from._internal_eerrorcode() != 0) {
    _internal_set_eerrorcode(from._internal_eerrorcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_Error_Notify::CopyFrom(const Msg_Battle_Error_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_Battle_Error_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_Error_Notify::IsInitialized() const {
  return true;
}

void Msg_Battle_Error_Notify::InternalSwap(Msg_Battle_Error_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_Battle_Error_Notify, eerrorcode_)
      + sizeof(Msg_Battle_Error_Notify::eerrorcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_Battle_Error_Notify, uimoduleid_)>(
          reinterpret_cast<char*>(&uimoduleid_),
          reinterpret_cast<char*>(&other->uimoduleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_Error_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[5]);
}

// ===================================================================

class battle_room_info_t::_Internal {
 public:
};

battle_room_info_t::battle_room_info_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.battle_room_info_t)
}
battle_room_info_t::battle_room_info_t(const battle_room_info_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strsession_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strsession_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strsession().empty()) {
    strsession_.Set(from._internal_strsession(), 
      GetArenaForAllocation());
  }
  mapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mapname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapname().empty()) {
    mapname_.Set(from._internal_mapname(), 
      GetArenaForAllocation());
  }
  eroomtype_ = from.eroomtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.battle_room_info_t)
}

inline void battle_room_info_t::SharedCtor() {
strsession_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strsession_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mapname_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mapname_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
eroomtype_ = 0;
}

battle_room_info_t::~battle_room_info_t() {
  // @@protoc_insertion_point(destructor:ProtoMsg.battle_room_info_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void battle_room_info_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strsession_.Destroy();
  mapname_.Destroy();
}

void battle_room_info_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void battle_room_info_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.battle_room_info_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strsession_.ClearToEmpty();
  mapname_.ClearToEmpty();
  eroomtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* battle_room_info_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string strSession = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_strsession();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.battle_room_info_t.strSession"));
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ERoomType eRoomType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eroomtype(static_cast<::ProtoMsg::ERoomType>(val));
        } else
          goto handle_unusual;
        continue;
      // string mapName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_mapname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.battle_room_info_t.mapName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* battle_room_info_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.battle_room_info_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string strSession = 1;
  if (!this->_internal_strsession().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strsession().data(), static_cast<int>(this->_internal_strsession().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.battle_room_info_t.strSession");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strsession(), target);
  }

  // .ProtoMsg.ERoomType eRoomType = 2;
  if (this->_internal_eroomtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_eroomtype(), target);
  }

  // string mapName = 3;
  if (!this->_internal_mapname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapname().data(), static_cast<int>(this->_internal_mapname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.battle_room_info_t.mapName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mapname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.battle_room_info_t)
  return target;
}

size_t battle_room_info_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.battle_room_info_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strSession = 1;
  if (!this->_internal_strsession().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strsession());
  }

  // string mapName = 3;
  if (!this->_internal_mapname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapname());
  }

  // .ProtoMsg.ERoomType eRoomType = 2;
  if (this->_internal_eroomtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eroomtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData battle_room_info_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    battle_room_info_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*battle_room_info_t::GetClassData() const { return &_class_data_; }

void battle_room_info_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<battle_room_info_t *>(to)->MergeFrom(
      static_cast<const battle_room_info_t &>(from));
}


void battle_room_info_t::MergeFrom(const battle_room_info_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.battle_room_info_t)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strsession().empty()) {
    _internal_set_strsession(from._internal_strsession());
  }
  if (!from._internal_mapname().empty()) {
    _internal_set_mapname(from._internal_mapname());
  }
  if (from._internal_eroomtype() != 0) {
    _internal_set_eroomtype(from._internal_eroomtype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void battle_room_info_t::CopyFrom(const battle_room_info_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.battle_room_info_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool battle_room_info_t::IsInitialized() const {
  return true;
}

void battle_room_info_t::InternalSwap(battle_room_info_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strsession_, lhs_arena,
      &other->strsession_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &mapname_, lhs_arena,
      &other->mapname_, rhs_arena
  );
  swap(eroomtype_, other->eroomtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata battle_room_info_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[6]);
}

// ===================================================================

class battle_order_t::_Internal {
 public:
};

battle_order_t::battle_order_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.battle_order_t)
}
battle_order_t::battle_order_t(const battle_order_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iexectime_, &from.iexectime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iarg2_) -
    reinterpret_cast<char*>(&iexectime_)) + sizeof(iarg2_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.battle_order_t)
}

inline void battle_order_t::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iexectime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iarg2_) -
    reinterpret_cast<char*>(&iexectime_)) + sizeof(iarg2_));
}

battle_order_t::~battle_order_t() {
  // @@protoc_insertion_point(destructor:ProtoMsg.battle_order_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void battle_order_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void battle_order_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void battle_order_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.battle_order_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iexectime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iarg2_) -
      reinterpret_cast<char*>(&iexectime_)) + sizeof(iarg2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* battle_order_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iExecTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iexectime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iUserId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iuserid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          itype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iArg1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          iarg1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iArg2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          iarg2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* battle_order_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.battle_order_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iExecTime = 1;
  if (this->_internal_iexectime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_iexectime(), target);
  }

  // int32 iUserId = 2;
  if (this->_internal_iuserid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iuserid(), target);
  }

  // int32 iType = 3;
  if (this->_internal_itype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_itype(), target);
  }

  // int32 iArg1 = 4;
  if (this->_internal_iarg1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_iarg1(), target);
  }

  // int32 iArg2 = 5;
  if (this->_internal_iarg2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_iarg2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.battle_order_t)
  return target;
}

size_t battle_order_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.battle_order_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 iExecTime = 1;
  if (this->_internal_iexectime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iexectime());
  }

  // int32 iUserId = 2;
  if (this->_internal_iuserid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iuserid());
  }

  // int32 iType = 3;
  if (this->_internal_itype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itype());
  }

  // int32 iArg1 = 4;
  if (this->_internal_iarg1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iarg1());
  }

  // int32 iArg2 = 5;
  if (this->_internal_iarg2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iarg2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData battle_order_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    battle_order_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*battle_order_t::GetClassData() const { return &_class_data_; }

void battle_order_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<battle_order_t *>(to)->MergeFrom(
      static_cast<const battle_order_t &>(from));
}


void battle_order_t::MergeFrom(const battle_order_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.battle_order_t)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iexectime() != 0) {
    _internal_set_iexectime(from._internal_iexectime());
  }
  if (from._internal_iuserid() != 0) {
    _internal_set_iuserid(from._internal_iuserid());
  }
  if (from._internal_itype() != 0) {
    _internal_set_itype(from._internal_itype());
  }
  if (from._internal_iarg1() != 0) {
    _internal_set_iarg1(from._internal_iarg1());
  }
  if (from._internal_iarg2() != 0) {
    _internal_set_iarg2(from._internal_iarg2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void battle_order_t::CopyFrom(const battle_order_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.battle_order_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool battle_order_t::IsInitialized() const {
  return true;
}

void battle_order_t::InternalSwap(battle_order_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(battle_order_t, iarg2_)
      + sizeof(battle_order_t::iarg2_)
      - PROTOBUF_FIELD_OFFSET(battle_order_t, iexectime_)>(
          reinterpret_cast<char*>(&iexectime_),
          reinterpret_cast<char*>(&other->iexectime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata battle_order_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[7]);
}

// ===================================================================

class Msg_Battle_OverRoom_Req::_Internal {
 public:
};

Msg_Battle_OverRoom_Req::Msg_Battle_OverRoom_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_OverRoom_Req)
}
Msg_Battle_OverRoom_Req::Msg_Battle_OverRoom_Req(const Msg_Battle_OverRoom_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ouserdata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ouserdata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ouserdata().empty()) {
    ouserdata_.Set(from._internal_ouserdata(), 
      GetArenaForAllocation());
  }
  ::memcpy(&ikeytype_, &from.ikeytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&icrc_) -
    reinterpret_cast<char*>(&ikeytype_)) + sizeof(icrc_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_OverRoom_Req)
}

inline void Msg_Battle_OverRoom_Req::SharedCtor() {
ouserdata_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ouserdata_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ikeytype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&icrc_) -
    reinterpret_cast<char*>(&ikeytype_)) + sizeof(icrc_));
}

Msg_Battle_OverRoom_Req::~Msg_Battle_OverRoom_Req() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_Battle_OverRoom_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_Battle_OverRoom_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ouserdata_.Destroy();
}

void Msg_Battle_OverRoom_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_OverRoom_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_Battle_OverRoom_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ouserdata_.ClearToEmpty();
  ::memset(&ikeytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icrc_) -
      reinterpret_cast<char*>(&ikeytype_)) + sizeof(icrc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_OverRoom_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes oUserData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ouserdata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iKeyType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ikeytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iCrc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          icrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_OverRoom_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_Battle_OverRoom_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes oUserData = 1;
  if (!this->_internal_ouserdata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ouserdata(), target);
  }

  // int32 iKeyType = 2;
  if (this->_internal_ikeytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_ikeytype(), target);
  }

  // int32 iCrc = 3;
  if (this->_internal_icrc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_icrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_Battle_OverRoom_Req)
  return target;
}

size_t Msg_Battle_OverRoom_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_Battle_OverRoom_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes oUserData = 1;
  if (!this->_internal_ouserdata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ouserdata());
  }

  // int32 iKeyType = 2;
  if (this->_internal_ikeytype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ikeytype());
  }

  // int32 iCrc = 3;
  if (this->_internal_icrc() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_icrc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_OverRoom_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_OverRoom_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_OverRoom_Req::GetClassData() const { return &_class_data_; }

void Msg_Battle_OverRoom_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_OverRoom_Req *>(to)->MergeFrom(
      static_cast<const Msg_Battle_OverRoom_Req &>(from));
}


void Msg_Battle_OverRoom_Req::MergeFrom(const Msg_Battle_OverRoom_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_Battle_OverRoom_Req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ouserdata().empty()) {
    _internal_set_ouserdata(from._internal_ouserdata());
  }
  if (from._internal_ikeytype() != 0) {
    _internal_set_ikeytype(from._internal_ikeytype());
  }
  if (from._internal_icrc() != 0) {
    _internal_set_icrc(from._internal_icrc());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_OverRoom_Req::CopyFrom(const Msg_Battle_OverRoom_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_Battle_OverRoom_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_OverRoom_Req::IsInitialized() const {
  return true;
}

void Msg_Battle_OverRoom_Req::InternalSwap(Msg_Battle_OverRoom_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &ouserdata_, lhs_arena,
      &other->ouserdata_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_Battle_OverRoom_Req, icrc_)
      + sizeof(Msg_Battle_OverRoom_Req::icrc_)
      - PROTOBUF_FIELD_OFFSET(Msg_Battle_OverRoom_Req, ikeytype_)>(
          reinterpret_cast<char*>(&ikeytype_),
          reinterpret_cast<char*>(&other->ikeytype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_OverRoom_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[8]);
}

// ===================================================================

class Msg_Battle_OverRoom_Rsp::_Internal {
 public:
};

Msg_Battle_OverRoom_Rsp::Msg_Battle_OverRoom_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_OverRoom_Rsp)
}
Msg_Battle_OverRoom_Rsp::Msg_Battle_OverRoom_Rsp(const Msg_Battle_OverRoom_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_OverRoom_Rsp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_OverRoom_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_OverRoom_Rsp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_OverRoom_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[9]);
}

// ===================================================================

class load_progress_info_t::_Internal {
 public:
};

load_progress_info_t::load_progress_info_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.load_progress_info_t)
}
load_progress_info_t::load_progress_info_t(const load_progress_info_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lluserid_, &from.lluserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&iprogress_) -
    reinterpret_cast<char*>(&lluserid_)) + sizeof(iprogress_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.load_progress_info_t)
}

inline void load_progress_info_t::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lluserid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iprogress_) -
    reinterpret_cast<char*>(&lluserid_)) + sizeof(iprogress_));
}

load_progress_info_t::~load_progress_info_t() {
  // @@protoc_insertion_point(destructor:ProtoMsg.load_progress_info_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void load_progress_info_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void load_progress_info_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void load_progress_info_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.load_progress_info_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lluserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iprogress_) -
      reinterpret_cast<char*>(&lluserid_)) + sizeof(iprogress_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* load_progress_info_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llUserid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lluserid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iProgress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iprogress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* load_progress_info_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.load_progress_info_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llUserid = 1;
  if (this->_internal_lluserid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_lluserid(), target);
  }

  // int32 iProgress = 2;
  if (this->_internal_iprogress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iprogress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.load_progress_info_t)
  return target;
}

size_t load_progress_info_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.load_progress_info_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 llUserid = 1;
  if (this->_internal_lluserid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_lluserid());
  }

  // int32 iProgress = 2;
  if (this->_internal_iprogress() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iprogress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData load_progress_info_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    load_progress_info_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*load_progress_info_t::GetClassData() const { return &_class_data_; }

void load_progress_info_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<load_progress_info_t *>(to)->MergeFrom(
      static_cast<const load_progress_info_t &>(from));
}


void load_progress_info_t::MergeFrom(const load_progress_info_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.load_progress_info_t)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lluserid() != 0) {
    _internal_set_lluserid(from._internal_lluserid());
  }
  if (from._internal_iprogress() != 0) {
    _internal_set_iprogress(from._internal_iprogress());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void load_progress_info_t::CopyFrom(const load_progress_info_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.load_progress_info_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool load_progress_info_t::IsInitialized() const {
  return true;
}

void load_progress_info_t::InternalSwap(load_progress_info_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(load_progress_info_t, iprogress_)
      + sizeof(load_progress_info_t::iprogress_)
      - PROTOBUF_FIELD_OFFSET(load_progress_info_t, lluserid_)>(
          reinterpret_cast<char*>(&lluserid_),
          reinterpret_cast<char*>(&other->lluserid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata load_progress_info_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[10]);
}

// ===================================================================

class Msg_RoomLoadProgress_Notify::_Internal {
 public:
};

Msg_RoomLoadProgress_Notify::Msg_RoomLoadProgress_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecload_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_RoomLoadProgress_Notify)
}
Msg_RoomLoadProgress_Notify::Msg_RoomLoadProgress_Notify(const Msg_RoomLoadProgress_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecload_(from.vecload_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_RoomLoadProgress_Notify)
}

inline void Msg_RoomLoadProgress_Notify::SharedCtor() {
}

Msg_RoomLoadProgress_Notify::~Msg_RoomLoadProgress_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_RoomLoadProgress_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_RoomLoadProgress_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_RoomLoadProgress_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_RoomLoadProgress_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_RoomLoadProgress_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecload_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomLoadProgress_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ProtoMsg.load_progress_info_t vecLoad = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecload(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_RoomLoadProgress_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_RoomLoadProgress_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoMsg.load_progress_info_t vecLoad = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecload_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecload(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_RoomLoadProgress_Notify)
  return target;
}

size_t Msg_RoomLoadProgress_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_RoomLoadProgress_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.load_progress_info_t vecLoad = 1;
  total_size += 1UL * this->_internal_vecload_size();
  for (const auto& msg : this->vecload_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomLoadProgress_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_RoomLoadProgress_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomLoadProgress_Notify::GetClassData() const { return &_class_data_; }

void Msg_RoomLoadProgress_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_RoomLoadProgress_Notify *>(to)->MergeFrom(
      static_cast<const Msg_RoomLoadProgress_Notify &>(from));
}


void Msg_RoomLoadProgress_Notify::MergeFrom(const Msg_RoomLoadProgress_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_RoomLoadProgress_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecload_.MergeFrom(from.vecload_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_RoomLoadProgress_Notify::CopyFrom(const Msg_RoomLoadProgress_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_RoomLoadProgress_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomLoadProgress_Notify::IsInitialized() const {
  return true;
}

void Msg_RoomLoadProgress_Notify::InternalSwap(Msg_RoomLoadProgress_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecload_.InternalSwap(&other->vecload_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomLoadProgress_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[11]);
}

// ===================================================================

class Msg_RoomHeartbeat_Notify::_Internal {
 public:
};

Msg_RoomHeartbeat_Notify::Msg_RoomHeartbeat_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecorders_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_RoomHeartbeat_Notify)
}
Msg_RoomHeartbeat_Notify::Msg_RoomHeartbeat_Notify(const Msg_RoomHeartbeat_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecorders_(from.vecorders_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iservertime_, &from.iservertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iroomtime_) -
    reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_RoomHeartbeat_Notify)
}

inline void Msg_RoomHeartbeat_Notify::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iservertime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iroomtime_) -
    reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
}

Msg_RoomHeartbeat_Notify::~Msg_RoomHeartbeat_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_RoomHeartbeat_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_RoomHeartbeat_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_RoomHeartbeat_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_RoomHeartbeat_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_RoomHeartbeat_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecorders_.Clear();
  ::memset(&iservertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iroomtime_) -
      reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomHeartbeat_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iServerTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iservertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iRoomTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iroomtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.battle_order_t vecOrders = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecorders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_RoomHeartbeat_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_RoomHeartbeat_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iServerTime = 1;
  if (this->_internal_iservertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_iservertime(), target);
  }

  // int32 iRoomTime = 2;
  if (this->_internal_iroomtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iroomtime(), target);
  }

  // repeated .ProtoMsg.battle_order_t vecOrders = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecorders_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecorders(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_RoomHeartbeat_Notify)
  return target;
}

size_t Msg_RoomHeartbeat_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_RoomHeartbeat_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.battle_order_t vecOrders = 3;
  total_size += 1UL * this->_internal_vecorders_size();
  for (const auto& msg : this->vecorders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 iServerTime = 1;
  if (this->_internal_iservertime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iservertime());
  }

  // int32 iRoomTime = 2;
  if (this->_internal_iroomtime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomHeartbeat_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_RoomHeartbeat_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomHeartbeat_Notify::GetClassData() const { return &_class_data_; }

void Msg_RoomHeartbeat_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_RoomHeartbeat_Notify *>(to)->MergeFrom(
      static_cast<const Msg_RoomHeartbeat_Notify &>(from));
}


void Msg_RoomHeartbeat_Notify::MergeFrom(const Msg_RoomHeartbeat_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_RoomHeartbeat_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecorders_.MergeFrom(from.vecorders_);
  if (from._internal_iservertime() != 0) {
    _internal_set_iservertime(from._internal_iservertime());
  }
  if (from._internal_iroomtime() != 0) {
    _internal_set_iroomtime(from._internal_iroomtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_RoomHeartbeat_Notify::CopyFrom(const Msg_RoomHeartbeat_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_RoomHeartbeat_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomHeartbeat_Notify::IsInitialized() const {
  return true;
}

void Msg_RoomHeartbeat_Notify::InternalSwap(Msg_RoomHeartbeat_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecorders_.InternalSwap(&other->vecorders_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_RoomHeartbeat_Notify, iroomtime_)
      + sizeof(Msg_RoomHeartbeat_Notify::iroomtime_)
      - PROTOBUF_FIELD_OFFSET(Msg_RoomHeartbeat_Notify, iservertime_)>(
          reinterpret_cast<char*>(&iservertime_),
          reinterpret_cast<char*>(&other->iservertime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomHeartbeat_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[12]);
}

// ===================================================================

class Msg_RoomStart_Notify::_Internal {
 public:
};

Msg_RoomStart_Notify::Msg_RoomStart_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_RoomStart_Notify)
}
Msg_RoomStart_Notify::Msg_RoomStart_Notify(const Msg_RoomStart_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iservertime_, &from.iservertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&iroomtime_) -
    reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_RoomStart_Notify)
}

inline void Msg_RoomStart_Notify::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iservertime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iroomtime_) -
    reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
}

Msg_RoomStart_Notify::~Msg_RoomStart_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_RoomStart_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_RoomStart_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_RoomStart_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_RoomStart_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_RoomStart_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iservertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iroomtime_) -
      reinterpret_cast<char*>(&iservertime_)) + sizeof(iroomtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomStart_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iServerTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iservertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iRoomTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iroomtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_RoomStart_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_RoomStart_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iServerTime = 1;
  if (this->_internal_iservertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_iservertime(), target);
  }

  // int32 iRoomTime = 2;
  if (this->_internal_iroomtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iroomtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_RoomStart_Notify)
  return target;
}

size_t Msg_RoomStart_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_RoomStart_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 iServerTime = 1;
  if (this->_internal_iservertime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iservertime());
  }

  // int32 iRoomTime = 2;
  if (this->_internal_iroomtime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomStart_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_RoomStart_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomStart_Notify::GetClassData() const { return &_class_data_; }

void Msg_RoomStart_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_RoomStart_Notify *>(to)->MergeFrom(
      static_cast<const Msg_RoomStart_Notify &>(from));
}


void Msg_RoomStart_Notify::MergeFrom(const Msg_RoomStart_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_RoomStart_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iservertime() != 0) {
    _internal_set_iservertime(from._internal_iservertime());
  }
  if (from._internal_iroomtime() != 0) {
    _internal_set_iroomtime(from._internal_iroomtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_RoomStart_Notify::CopyFrom(const Msg_RoomStart_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_RoomStart_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomStart_Notify::IsInitialized() const {
  return true;
}

void Msg_RoomStart_Notify::InternalSwap(Msg_RoomStart_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_RoomStart_Notify, iroomtime_)
      + sizeof(Msg_RoomStart_Notify::iroomtime_)
      - PROTOBUF_FIELD_OFFSET(Msg_RoomStart_Notify, iservertime_)>(
          reinterpret_cast<char*>(&iservertime_),
          reinterpret_cast<char*>(&other->iservertime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomStart_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[13]);
}

// ===================================================================

class Msg_Battle_Result_Notify::_Internal {
 public:
};

void Msg_Battle_Result_Notify::clear_vecdata() {
  vecdata_.Clear();
}
Msg_Battle_Result_Notify::Msg_Battle_Result_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecdata_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_Battle_Result_Notify)
}
Msg_Battle_Result_Notify::Msg_Battle_Result_Notify(const Msg_Battle_Result_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecdata_(from.vecdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ereusltcode_ = from.ereusltcode_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_Battle_Result_Notify)
}

inline void Msg_Battle_Result_Notify::SharedCtor() {
ereusltcode_ = 0;
}

Msg_Battle_Result_Notify::~Msg_Battle_Result_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_Battle_Result_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_Battle_Result_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_Battle_Result_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_Result_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_Battle_Result_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecdata_.Clear();
  ereusltcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_Result_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProtoMsg.EBRCode eReusltCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ereusltcode(static_cast<::ProtoMsg::EBRCode>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.user_battle_result_t vecData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_Result_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_Battle_Result_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.EBRCode eReusltCode = 1;
  if (this->_internal_ereusltcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ereusltcode(), target);
  }

  // repeated .ProtoMsg.user_battle_result_t vecData = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecdata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_Battle_Result_Notify)
  return target;
}

size_t Msg_Battle_Result_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_Battle_Result_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.user_battle_result_t vecData = 2;
  total_size += 1UL * this->_internal_vecdata_size();
  for (const auto& msg : this->vecdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .ProtoMsg.EBRCode eReusltCode = 1;
  if (this->_internal_ereusltcode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_ereusltcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_Result_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_Result_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_Result_Notify::GetClassData() const { return &_class_data_; }

void Msg_Battle_Result_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_Result_Notify *>(to)->MergeFrom(
      static_cast<const Msg_Battle_Result_Notify &>(from));
}


void Msg_Battle_Result_Notify::MergeFrom(const Msg_Battle_Result_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_Battle_Result_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecdata_.MergeFrom(from.vecdata_);
  if (from._internal_ereusltcode() != 0) {
    _internal_set_ereusltcode(from._internal_ereusltcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_Result_Notify::CopyFrom(const Msg_Battle_Result_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_Battle_Result_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_Result_Notify::IsInitialized() const {
  return true;
}

void Msg_Battle_Result_Notify::InternalSwap(Msg_Battle_Result_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecdata_.InternalSwap(&other->vecdata_);
  swap(ereusltcode_, other->ereusltcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_Result_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fbattle_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMsg::MsgModule_Battle*
Arena::CreateMaybeMessage< ::ProtoMsg::MsgModule_Battle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::MsgModule_Battle >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_Beat_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_Beat_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_Beat_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_Beat_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_Beat_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_Beat_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_EnterRoom_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_EnterRoom_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_EnterRoom_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_EnterRoom_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_EnterRoom_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_EnterRoom_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_Error_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_Error_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_Error_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::battle_room_info_t*
Arena::CreateMaybeMessage< ::ProtoMsg::battle_room_info_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::battle_room_info_t >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::battle_order_t*
Arena::CreateMaybeMessage< ::ProtoMsg::battle_order_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::battle_order_t >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_OverRoom_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_OverRoom_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_OverRoom_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_OverRoom_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_OverRoom_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_OverRoom_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::load_progress_info_t*
Arena::CreateMaybeMessage< ::ProtoMsg::load_progress_info_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::load_progress_info_t >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_RoomLoadProgress_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_RoomLoadProgress_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_RoomLoadProgress_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_RoomHeartbeat_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_RoomHeartbeat_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_RoomHeartbeat_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_RoomStart_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_RoomStart_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_RoomStart_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_Battle_Result_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_Battle_Result_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_Battle_Result_Notify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
