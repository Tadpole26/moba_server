// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_mail.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fmail_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fmail_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fmodule_5fmail_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmodule_5fmail_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fmodule_5fmail_2eproto;
namespace ProtoMsg {
class MsgModule_Mail;
struct MsgModule_MailDefaultTypeInternal;
extern MsgModule_MailDefaultTypeInternal _MsgModule_Mail_default_instance_;
class Msg_Mail_DeleteMail_Req;
struct Msg_Mail_DeleteMail_ReqDefaultTypeInternal;
extern Msg_Mail_DeleteMail_ReqDefaultTypeInternal _Msg_Mail_DeleteMail_Req_default_instance_;
class Msg_Mail_DeleteMail_Rsp;
struct Msg_Mail_DeleteMail_RspDefaultTypeInternal;
extern Msg_Mail_DeleteMail_RspDefaultTypeInternal _Msg_Mail_DeleteMail_Rsp_default_instance_;
class Msg_Mail_GetMailList_Req;
struct Msg_Mail_GetMailList_ReqDefaultTypeInternal;
extern Msg_Mail_GetMailList_ReqDefaultTypeInternal _Msg_Mail_GetMailList_Req_default_instance_;
class Msg_Mail_GetMailList_Rsp;
struct Msg_Mail_GetMailList_RspDefaultTypeInternal;
extern Msg_Mail_GetMailList_RspDefaultTypeInternal _Msg_Mail_GetMailList_Rsp_default_instance_;
class Msg_Mail_MailList_Notify;
struct Msg_Mail_MailList_NotifyDefaultTypeInternal;
extern Msg_Mail_MailList_NotifyDefaultTypeInternal _Msg_Mail_MailList_Notify_default_instance_;
class Msg_Mail_ReadMail_Req;
struct Msg_Mail_ReadMail_ReqDefaultTypeInternal;
extern Msg_Mail_ReadMail_ReqDefaultTypeInternal _Msg_Mail_ReadMail_Req_default_instance_;
class Msg_Mail_ReadMail_Rsp;
struct Msg_Mail_ReadMail_RspDefaultTypeInternal;
extern Msg_Mail_ReadMail_RspDefaultTypeInternal _Msg_Mail_ReadMail_Rsp_default_instance_;
class Msg_Mail_ReciveAttach_Req;
struct Msg_Mail_ReciveAttach_ReqDefaultTypeInternal;
extern Msg_Mail_ReciveAttach_ReqDefaultTypeInternal _Msg_Mail_ReciveAttach_Req_default_instance_;
class Msg_Mail_ReciveAttach_Rsp;
struct Msg_Mail_ReciveAttach_RspDefaultTypeInternal;
extern Msg_Mail_ReciveAttach_RspDefaultTypeInternal _Msg_Mail_ReciveAttach_Rsp_default_instance_;
class mail_info_t;
struct mail_info_tDefaultTypeInternal;
extern mail_info_tDefaultTypeInternal _mail_info_t_default_instance_;
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMsg::MsgModule_Mail* Arena::CreateMaybeMessage<::ProtoMsg::MsgModule_Mail>(Arena*);
template<> ::ProtoMsg::Msg_Mail_DeleteMail_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_DeleteMail_Req>(Arena*);
template<> ::ProtoMsg::Msg_Mail_DeleteMail_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_DeleteMail_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_Mail_GetMailList_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_GetMailList_Req>(Arena*);
template<> ::ProtoMsg::Msg_Mail_GetMailList_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_GetMailList_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_Mail_MailList_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_MailList_Notify>(Arena*);
template<> ::ProtoMsg::Msg_Mail_ReadMail_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_ReadMail_Req>(Arena*);
template<> ::ProtoMsg::Msg_Mail_ReadMail_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_ReadMail_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_Mail_ReciveAttach_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_ReciveAttach_Req>(Arena*);
template<> ::ProtoMsg::Msg_Mail_ReciveAttach_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Mail_ReciveAttach_Rsp>(Arena*);
template<> ::ProtoMsg::mail_info_t* Arena::CreateMaybeMessage<::ProtoMsg::mail_info_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMsg {

enum MsgModule_Mail_MsgCmd : int {
  MsgModule_Mail_MsgCmd_Msg_Mail_None = 0,
  MsgModule_Mail_MsgCmd_Msg_Mail_GetMailList_Req = 1,
  MsgModule_Mail_MsgCmd_Msg_Mail_GetMailList_Rsp = 2,
  MsgModule_Mail_MsgCmd_Msg_Mail_MailList_Notify = 3,
  MsgModule_Mail_MsgCmd_Msg_Mail_ReadMail_Req = 4,
  MsgModule_Mail_MsgCmd_Msg_Mail_ReadMail_Rsp = 5,
  MsgModule_Mail_MsgCmd_Msg_Mail_DeleteMail_Req = 6,
  MsgModule_Mail_MsgCmd_Msg_Mail_DeleteMail_Rsp = 7,
  MsgModule_Mail_MsgCmd_Msg_Mail_ReciveAttach_Req = 8,
  MsgModule_Mail_MsgCmd_Msg_Mail_ReciveAttach_Rsp = 9,
  MsgModule_Mail_MsgCmd_MsgModule_Mail_MsgCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgModule_Mail_MsgCmd_MsgModule_Mail_MsgCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgModule_Mail_MsgCmd_IsValid(int value);
constexpr MsgModule_Mail_MsgCmd MsgModule_Mail_MsgCmd_MsgCmd_MIN = MsgModule_Mail_MsgCmd_Msg_Mail_None;
constexpr MsgModule_Mail_MsgCmd MsgModule_Mail_MsgCmd_MsgCmd_MAX = MsgModule_Mail_MsgCmd_Msg_Mail_ReciveAttach_Rsp;
constexpr int MsgModule_Mail_MsgCmd_MsgCmd_ARRAYSIZE = MsgModule_Mail_MsgCmd_MsgCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_Mail_MsgCmd_descriptor();
template<typename T>
inline const std::string& MsgModule_Mail_MsgCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgModule_Mail_MsgCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgModule_Mail_MsgCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgModule_Mail_MsgCmd_descriptor(), enum_t_value);
}
inline bool MsgModule_Mail_MsgCmd_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgModule_Mail_MsgCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgModule_Mail_MsgCmd>(
    MsgModule_Mail_MsgCmd_descriptor(), name, value);
}
enum enum_mail_t : int {
  eMailType_None = 0,
  eMailType_System = 1,
  eMailType_Game = 2,
  enum_mail_t_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  enum_mail_t_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool enum_mail_t_IsValid(int value);
constexpr enum_mail_t enum_mail_t_MIN = eMailType_None;
constexpr enum_mail_t enum_mail_t_MAX = eMailType_Game;
constexpr int enum_mail_t_ARRAYSIZE = enum_mail_t_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enum_mail_t_descriptor();
template<typename T>
inline const std::string& enum_mail_t_Name(T enum_t_value) {
  static_assert(::std::is_same<T, enum_mail_t>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function enum_mail_t_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    enum_mail_t_descriptor(), enum_t_value);
}
inline bool enum_mail_t_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, enum_mail_t* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<enum_mail_t>(
    enum_mail_t_descriptor(), name, value);
}
// ===================================================================

class MsgModule_Mail final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.MsgModule_Mail) */ {
 public:
  inline MsgModule_Mail() : MsgModule_Mail(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgModule_Mail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgModule_Mail(const MsgModule_Mail& from);
  MsgModule_Mail(MsgModule_Mail&& from) noexcept
    : MsgModule_Mail() {
    *this = ::std::move(from);
  }

  inline MsgModule_Mail& operator=(const MsgModule_Mail& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModule_Mail& operator=(MsgModule_Mail&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgModule_Mail& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgModule_Mail* internal_default_instance() {
    return reinterpret_cast<const MsgModule_Mail*>(
               &_MsgModule_Mail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgModule_Mail& a, MsgModule_Mail& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModule_Mail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModule_Mail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgModule_Mail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgModule_Mail>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgModule_Mail& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgModule_Mail& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.MsgModule_Mail";
  }
  protected:
  explicit MsgModule_Mail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgModule_Mail_MsgCmd MsgCmd;
  static constexpr MsgCmd Msg_Mail_None =
    MsgModule_Mail_MsgCmd_Msg_Mail_None;
  static constexpr MsgCmd Msg_Mail_GetMailList_Req =
    MsgModule_Mail_MsgCmd_Msg_Mail_GetMailList_Req;
  static constexpr MsgCmd Msg_Mail_GetMailList_Rsp =
    MsgModule_Mail_MsgCmd_Msg_Mail_GetMailList_Rsp;
  static constexpr MsgCmd Msg_Mail_MailList_Notify =
    MsgModule_Mail_MsgCmd_Msg_Mail_MailList_Notify;
  static constexpr MsgCmd Msg_Mail_ReadMail_Req =
    MsgModule_Mail_MsgCmd_Msg_Mail_ReadMail_Req;
  static constexpr MsgCmd Msg_Mail_ReadMail_Rsp =
    MsgModule_Mail_MsgCmd_Msg_Mail_ReadMail_Rsp;
  static constexpr MsgCmd Msg_Mail_DeleteMail_Req =
    MsgModule_Mail_MsgCmd_Msg_Mail_DeleteMail_Req;
  static constexpr MsgCmd Msg_Mail_DeleteMail_Rsp =
    MsgModule_Mail_MsgCmd_Msg_Mail_DeleteMail_Rsp;
  static constexpr MsgCmd Msg_Mail_ReciveAttach_Req =
    MsgModule_Mail_MsgCmd_Msg_Mail_ReciveAttach_Req;
  static constexpr MsgCmd Msg_Mail_ReciveAttach_Rsp =
    MsgModule_Mail_MsgCmd_Msg_Mail_ReciveAttach_Rsp;
  static inline bool MsgCmd_IsValid(int value) {
    return MsgModule_Mail_MsgCmd_IsValid(value);
  }
  static constexpr MsgCmd MsgCmd_MIN =
    MsgModule_Mail_MsgCmd_MsgCmd_MIN;
  static constexpr MsgCmd MsgCmd_MAX =
    MsgModule_Mail_MsgCmd_MsgCmd_MAX;
  static constexpr int MsgCmd_ARRAYSIZE =
    MsgModule_Mail_MsgCmd_MsgCmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgCmd_descriptor() {
    return MsgModule_Mail_MsgCmd_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgCmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgCmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgCmd_Name.");
    return MsgModule_Mail_MsgCmd_Name(enum_t_value);
  }
  static inline bool MsgCmd_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgCmd* value) {
    return MsgModule_Mail_MsgCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MsgModule_Mail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class mail_info_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.mail_info_t) */ {
 public:
  inline mail_info_t() : mail_info_t(nullptr) {}
  ~mail_info_t() override;
  explicit PROTOBUF_CONSTEXPR mail_info_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  mail_info_t(const mail_info_t& from);
  mail_info_t(mail_info_t&& from) noexcept
    : mail_info_t() {
    *this = ::std::move(from);
  }

  inline mail_info_t& operator=(const mail_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline mail_info_t& operator=(mail_info_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const mail_info_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const mail_info_t* internal_default_instance() {
    return reinterpret_cast<const mail_info_t*>(
               &_mail_info_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(mail_info_t& a, mail_info_t& b) {
    a.Swap(&b);
  }
  inline void Swap(mail_info_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(mail_info_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  mail_info_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<mail_info_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const mail_info_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const mail_info_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(mail_info_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.mail_info_t";
  }
  protected:
  explicit mail_info_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecItemFieldNumber = 8,
    kStrTitleFieldNumber = 5,
    kStrSenderFieldNumber = 6,
    kStrContentFieldNumber = 7,
    kLlMailIdFieldNumber = 2,
    kLlBeginTimeFieldNumber = 3,
    kLlExpiredTimeFieldNumber = 4,
    kETypeFieldNumber = 1,
    kBRecivedFieldNumber = 9,
  };
  // repeated .ProtoMsg.game_item_t vecItem = 8;
  int vecitem_size() const;
  private:
  int _internal_vecitem_size() const;
  public:
  void clear_vecitem();
  ::ProtoMsg::game_item_t* mutable_vecitem(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >*
      mutable_vecitem();
  private:
  const ::ProtoMsg::game_item_t& _internal_vecitem(int index) const;
  ::ProtoMsg::game_item_t* _internal_add_vecitem();
  public:
  const ::ProtoMsg::game_item_t& vecitem(int index) const;
  ::ProtoMsg::game_item_t* add_vecitem();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >&
      vecitem() const;

  // string strTitle = 5;
  void clear_strtitle();
  const std::string& strtitle() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strtitle(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strtitle();
  PROTOBUF_NODISCARD std::string* release_strtitle();
  void set_allocated_strtitle(std::string* strtitle);
  private:
  const std::string& _internal_strtitle() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strtitle(const std::string& value);
  std::string* _internal_mutable_strtitle();
  public:

  // string strSender = 6;
  void clear_strsender();
  const std::string& strsender() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strsender(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strsender();
  PROTOBUF_NODISCARD std::string* release_strsender();
  void set_allocated_strsender(std::string* strsender);
  private:
  const std::string& _internal_strsender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strsender(const std::string& value);
  std::string* _internal_mutable_strsender();
  public:

  // string strContent = 7;
  void clear_strcontent();
  const std::string& strcontent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strcontent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strcontent();
  PROTOBUF_NODISCARD std::string* release_strcontent();
  void set_allocated_strcontent(std::string* strcontent);
  private:
  const std::string& _internal_strcontent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strcontent(const std::string& value);
  std::string* _internal_mutable_strcontent();
  public:

  // int64 llMailId = 2;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // int64 llBeginTime = 3;
  void clear_llbegintime();
  int64_t llbegintime() const;
  void set_llbegintime(int64_t value);
  private:
  int64_t _internal_llbegintime() const;
  void _internal_set_llbegintime(int64_t value);
  public:

  // int64 llExpiredTime = 4;
  void clear_llexpiredtime();
  int64_t llexpiredtime() const;
  void set_llexpiredtime(int64_t value);
  private:
  int64_t _internal_llexpiredtime() const;
  void _internal_set_llexpiredtime(int64_t value);
  public:

  // .ProtoMsg.enum_mail_t eType = 1;
  void clear_etype();
  ::ProtoMsg::enum_mail_t etype() const;
  void set_etype(::ProtoMsg::enum_mail_t value);
  private:
  ::ProtoMsg::enum_mail_t _internal_etype() const;
  void _internal_set_etype(::ProtoMsg::enum_mail_t value);
  public:

  // bool bRecived = 9;
  void clear_brecived();
  bool brecived() const;
  void set_brecived(bool value);
  private:
  bool _internal_brecived() const;
  void _internal_set_brecived(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.mail_info_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t > vecitem_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strtitle_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strsender_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcontent_;
  int64_t llmailid_;
  int64_t llbegintime_;
  int64_t llexpiredtime_;
  int etype_;
  bool brecived_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_GetMailList_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_GetMailList_Req) */ {
 public:
  inline Msg_Mail_GetMailList_Req() : Msg_Mail_GetMailList_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Msg_Mail_GetMailList_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_GetMailList_Req(const Msg_Mail_GetMailList_Req& from);
  Msg_Mail_GetMailList_Req(Msg_Mail_GetMailList_Req&& from) noexcept
    : Msg_Mail_GetMailList_Req() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_GetMailList_Req& operator=(const Msg_Mail_GetMailList_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_GetMailList_Req& operator=(Msg_Mail_GetMailList_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_GetMailList_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_GetMailList_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_GetMailList_Req*>(
               &_Msg_Mail_GetMailList_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_Mail_GetMailList_Req& a, Msg_Mail_GetMailList_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_GetMailList_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_GetMailList_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_GetMailList_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_GetMailList_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Msg_Mail_GetMailList_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Msg_Mail_GetMailList_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_GetMailList_Req";
  }
  protected:
  explicit Msg_Mail_GetMailList_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_GetMailList_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_GetMailList_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_GetMailList_Rsp) */ {
 public:
  inline Msg_Mail_GetMailList_Rsp() : Msg_Mail_GetMailList_Rsp(nullptr) {}
  ~Msg_Mail_GetMailList_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_GetMailList_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_GetMailList_Rsp(const Msg_Mail_GetMailList_Rsp& from);
  Msg_Mail_GetMailList_Rsp(Msg_Mail_GetMailList_Rsp&& from) noexcept
    : Msg_Mail_GetMailList_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_GetMailList_Rsp& operator=(const Msg_Mail_GetMailList_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_GetMailList_Rsp& operator=(Msg_Mail_GetMailList_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_GetMailList_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_GetMailList_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_GetMailList_Rsp*>(
               &_Msg_Mail_GetMailList_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_Mail_GetMailList_Rsp& a, Msg_Mail_GetMailList_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_GetMailList_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_GetMailList_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_GetMailList_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_GetMailList_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_GetMailList_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_GetMailList_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_GetMailList_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_GetMailList_Rsp";
  }
  protected:
  explicit Msg_Mail_GetMailList_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecMailFieldNumber = 1,
  };
  // repeated .ProtoMsg.mail_info_t vecMail = 1;
  int vecmail_size() const;
  private:
  int _internal_vecmail_size() const;
  public:
  void clear_vecmail();
  ::ProtoMsg::mail_info_t* mutable_vecmail(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >*
      mutable_vecmail();
  private:
  const ::ProtoMsg::mail_info_t& _internal_vecmail(int index) const;
  ::ProtoMsg::mail_info_t* _internal_add_vecmail();
  public:
  const ::ProtoMsg::mail_info_t& vecmail(int index) const;
  ::ProtoMsg::mail_info_t* add_vecmail();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >&
      vecmail() const;

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_GetMailList_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t > vecmail_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_MailList_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_MailList_Notify) */ {
 public:
  inline Msg_Mail_MailList_Notify() : Msg_Mail_MailList_Notify(nullptr) {}
  ~Msg_Mail_MailList_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_MailList_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_MailList_Notify(const Msg_Mail_MailList_Notify& from);
  Msg_Mail_MailList_Notify(Msg_Mail_MailList_Notify&& from) noexcept
    : Msg_Mail_MailList_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_MailList_Notify& operator=(const Msg_Mail_MailList_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_MailList_Notify& operator=(Msg_Mail_MailList_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_MailList_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_MailList_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_MailList_Notify*>(
               &_Msg_Mail_MailList_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Msg_Mail_MailList_Notify& a, Msg_Mail_MailList_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_MailList_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_MailList_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_MailList_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_MailList_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_MailList_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_MailList_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_MailList_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_MailList_Notify";
  }
  protected:
  explicit Msg_Mail_MailList_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecMailFieldNumber = 1,
  };
  // repeated .ProtoMsg.mail_info_t vecMail = 1;
  int vecmail_size() const;
  private:
  int _internal_vecmail_size() const;
  public:
  void clear_vecmail();
  ::ProtoMsg::mail_info_t* mutable_vecmail(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >*
      mutable_vecmail();
  private:
  const ::ProtoMsg::mail_info_t& _internal_vecmail(int index) const;
  ::ProtoMsg::mail_info_t* _internal_add_vecmail();
  public:
  const ::ProtoMsg::mail_info_t& vecmail(int index) const;
  ::ProtoMsg::mail_info_t* add_vecmail();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >&
      vecmail() const;

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_MailList_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t > vecmail_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_ReadMail_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_ReadMail_Req) */ {
 public:
  inline Msg_Mail_ReadMail_Req() : Msg_Mail_ReadMail_Req(nullptr) {}
  ~Msg_Mail_ReadMail_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_ReadMail_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_ReadMail_Req(const Msg_Mail_ReadMail_Req& from);
  Msg_Mail_ReadMail_Req(Msg_Mail_ReadMail_Req&& from) noexcept
    : Msg_Mail_ReadMail_Req() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_ReadMail_Req& operator=(const Msg_Mail_ReadMail_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_ReadMail_Req& operator=(Msg_Mail_ReadMail_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_ReadMail_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_ReadMail_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_ReadMail_Req*>(
               &_Msg_Mail_ReadMail_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Msg_Mail_ReadMail_Req& a, Msg_Mail_ReadMail_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_ReadMail_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_ReadMail_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_ReadMail_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_ReadMail_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_ReadMail_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_ReadMail_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_ReadMail_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_ReadMail_Req";
  }
  protected:
  explicit Msg_Mail_ReadMail_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlMailIdFieldNumber = 1,
  };
  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_ReadMail_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llmailid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_ReadMail_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_ReadMail_Rsp) */ {
 public:
  inline Msg_Mail_ReadMail_Rsp() : Msg_Mail_ReadMail_Rsp(nullptr) {}
  ~Msg_Mail_ReadMail_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_ReadMail_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_ReadMail_Rsp(const Msg_Mail_ReadMail_Rsp& from);
  Msg_Mail_ReadMail_Rsp(Msg_Mail_ReadMail_Rsp&& from) noexcept
    : Msg_Mail_ReadMail_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_ReadMail_Rsp& operator=(const Msg_Mail_ReadMail_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_ReadMail_Rsp& operator=(Msg_Mail_ReadMail_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_ReadMail_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_ReadMail_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_ReadMail_Rsp*>(
               &_Msg_Mail_ReadMail_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Msg_Mail_ReadMail_Rsp& a, Msg_Mail_ReadMail_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_ReadMail_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_ReadMail_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_ReadMail_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_ReadMail_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_ReadMail_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_ReadMail_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_ReadMail_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_ReadMail_Rsp";
  }
  protected:
  explicit Msg_Mail_ReadMail_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlMailIdFieldNumber = 1,
    kLlReadTimeFieldNumber = 2,
  };
  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // int64 llReadTime = 2;
  void clear_llreadtime();
  int64_t llreadtime() const;
  void set_llreadtime(int64_t value);
  private:
  int64_t _internal_llreadtime() const;
  void _internal_set_llreadtime(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_ReadMail_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llmailid_;
  int64_t llreadtime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_DeleteMail_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_DeleteMail_Req) */ {
 public:
  inline Msg_Mail_DeleteMail_Req() : Msg_Mail_DeleteMail_Req(nullptr) {}
  ~Msg_Mail_DeleteMail_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_DeleteMail_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_DeleteMail_Req(const Msg_Mail_DeleteMail_Req& from);
  Msg_Mail_DeleteMail_Req(Msg_Mail_DeleteMail_Req&& from) noexcept
    : Msg_Mail_DeleteMail_Req() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_DeleteMail_Req& operator=(const Msg_Mail_DeleteMail_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_DeleteMail_Req& operator=(Msg_Mail_DeleteMail_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_DeleteMail_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_DeleteMail_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_DeleteMail_Req*>(
               &_Msg_Mail_DeleteMail_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_Mail_DeleteMail_Req& a, Msg_Mail_DeleteMail_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_DeleteMail_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_DeleteMail_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_DeleteMail_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_DeleteMail_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_DeleteMail_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_DeleteMail_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_DeleteMail_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_DeleteMail_Req";
  }
  protected:
  explicit Msg_Mail_DeleteMail_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlMailIdFieldNumber = 1,
  };
  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_DeleteMail_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llmailid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_DeleteMail_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_DeleteMail_Rsp) */ {
 public:
  inline Msg_Mail_DeleteMail_Rsp() : Msg_Mail_DeleteMail_Rsp(nullptr) {}
  ~Msg_Mail_DeleteMail_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_DeleteMail_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_DeleteMail_Rsp(const Msg_Mail_DeleteMail_Rsp& from);
  Msg_Mail_DeleteMail_Rsp(Msg_Mail_DeleteMail_Rsp&& from) noexcept
    : Msg_Mail_DeleteMail_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_DeleteMail_Rsp& operator=(const Msg_Mail_DeleteMail_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_DeleteMail_Rsp& operator=(Msg_Mail_DeleteMail_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_DeleteMail_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_DeleteMail_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_DeleteMail_Rsp*>(
               &_Msg_Mail_DeleteMail_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg_Mail_DeleteMail_Rsp& a, Msg_Mail_DeleteMail_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_DeleteMail_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_DeleteMail_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_DeleteMail_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_DeleteMail_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_DeleteMail_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_DeleteMail_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_DeleteMail_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_DeleteMail_Rsp";
  }
  protected:
  explicit Msg_Mail_DeleteMail_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlMailIdFieldNumber = 1,
  };
  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_DeleteMail_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llmailid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_ReciveAttach_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_ReciveAttach_Req) */ {
 public:
  inline Msg_Mail_ReciveAttach_Req() : Msg_Mail_ReciveAttach_Req(nullptr) {}
  ~Msg_Mail_ReciveAttach_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_ReciveAttach_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_ReciveAttach_Req(const Msg_Mail_ReciveAttach_Req& from);
  Msg_Mail_ReciveAttach_Req(Msg_Mail_ReciveAttach_Req&& from) noexcept
    : Msg_Mail_ReciveAttach_Req() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_ReciveAttach_Req& operator=(const Msg_Mail_ReciveAttach_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_ReciveAttach_Req& operator=(Msg_Mail_ReciveAttach_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_ReciveAttach_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_ReciveAttach_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_ReciveAttach_Req*>(
               &_Msg_Mail_ReciveAttach_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Msg_Mail_ReciveAttach_Req& a, Msg_Mail_ReciveAttach_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_ReciveAttach_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_ReciveAttach_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_ReciveAttach_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_ReciveAttach_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_ReciveAttach_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_ReciveAttach_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_ReciveAttach_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_ReciveAttach_Req";
  }
  protected:
  explicit Msg_Mail_ReciveAttach_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlMailIdFieldNumber = 1,
  };
  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_ReciveAttach_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t llmailid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// -------------------------------------------------------------------

class Msg_Mail_ReciveAttach_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Mail_ReciveAttach_Rsp) */ {
 public:
  inline Msg_Mail_ReciveAttach_Rsp() : Msg_Mail_ReciveAttach_Rsp(nullptr) {}
  ~Msg_Mail_ReciveAttach_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_Mail_ReciveAttach_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Mail_ReciveAttach_Rsp(const Msg_Mail_ReciveAttach_Rsp& from);
  Msg_Mail_ReciveAttach_Rsp(Msg_Mail_ReciveAttach_Rsp&& from) noexcept
    : Msg_Mail_ReciveAttach_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_Mail_ReciveAttach_Rsp& operator=(const Msg_Mail_ReciveAttach_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Mail_ReciveAttach_Rsp& operator=(Msg_Mail_ReciveAttach_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Mail_ReciveAttach_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Mail_ReciveAttach_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_Mail_ReciveAttach_Rsp*>(
               &_Msg_Mail_ReciveAttach_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Msg_Mail_ReciveAttach_Rsp& a, Msg_Mail_ReciveAttach_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Mail_ReciveAttach_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Mail_ReciveAttach_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Mail_ReciveAttach_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Mail_ReciveAttach_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Mail_ReciveAttach_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Mail_ReciveAttach_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Mail_ReciveAttach_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Mail_ReciveAttach_Rsp";
  }
  protected:
  explicit Msg_Mail_ReciveAttach_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecItemFieldNumber = 2,
    kLlMailIdFieldNumber = 1,
  };
  // repeated .ProtoMsg.game_item_t vecItem = 2;
  int vecitem_size() const;
  private:
  int _internal_vecitem_size() const;
  public:
  void clear_vecitem();
  ::ProtoMsg::game_item_t* mutable_vecitem(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >*
      mutable_vecitem();
  private:
  const ::ProtoMsg::game_item_t& _internal_vecitem(int index) const;
  ::ProtoMsg::game_item_t* _internal_add_vecitem();
  public:
  const ::ProtoMsg::game_item_t& vecitem(int index) const;
  ::ProtoMsg::game_item_t* add_vecitem();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >&
      vecitem() const;

  // int64 llMailId = 1;
  void clear_llmailid();
  int64_t llmailid() const;
  void set_llmailid(int64_t value);
  private:
  int64_t _internal_llmailid() const;
  void _internal_set_llmailid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Mail_ReciveAttach_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t > vecitem_;
  int64_t llmailid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fmail_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgModule_Mail

// -------------------------------------------------------------------

// mail_info_t

// .ProtoMsg.enum_mail_t eType = 1;
inline void mail_info_t::clear_etype() {
  etype_ = 0;
}
inline ::ProtoMsg::enum_mail_t mail_info_t::_internal_etype() const {
  return static_cast< ::ProtoMsg::enum_mail_t >(etype_);
}
inline ::ProtoMsg::enum_mail_t mail_info_t::etype() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.eType)
  return _internal_etype();
}
inline void mail_info_t::_internal_set_etype(::ProtoMsg::enum_mail_t value) {
  
  etype_ = value;
}
inline void mail_info_t::set_etype(::ProtoMsg::enum_mail_t value) {
  _internal_set_etype(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.eType)
}

// int64 llMailId = 2;
inline void mail_info_t::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t mail_info_t::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t mail_info_t::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.llMailId)
  return _internal_llmailid();
}
inline void mail_info_t::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void mail_info_t::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.llMailId)
}

// int64 llBeginTime = 3;
inline void mail_info_t::clear_llbegintime() {
  llbegintime_ = int64_t{0};
}
inline int64_t mail_info_t::_internal_llbegintime() const {
  return llbegintime_;
}
inline int64_t mail_info_t::llbegintime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.llBeginTime)
  return _internal_llbegintime();
}
inline void mail_info_t::_internal_set_llbegintime(int64_t value) {
  
  llbegintime_ = value;
}
inline void mail_info_t::set_llbegintime(int64_t value) {
  _internal_set_llbegintime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.llBeginTime)
}

// int64 llExpiredTime = 4;
inline void mail_info_t::clear_llexpiredtime() {
  llexpiredtime_ = int64_t{0};
}
inline int64_t mail_info_t::_internal_llexpiredtime() const {
  return llexpiredtime_;
}
inline int64_t mail_info_t::llexpiredtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.llExpiredTime)
  return _internal_llexpiredtime();
}
inline void mail_info_t::_internal_set_llexpiredtime(int64_t value) {
  
  llexpiredtime_ = value;
}
inline void mail_info_t::set_llexpiredtime(int64_t value) {
  _internal_set_llexpiredtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.llExpiredTime)
}

// string strTitle = 5;
inline void mail_info_t::clear_strtitle() {
  strtitle_.ClearToEmpty();
}
inline const std::string& mail_info_t::strtitle() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.strTitle)
  return _internal_strtitle();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void mail_info_t::set_strtitle(ArgT0&& arg0, ArgT... args) {
 
 strtitle_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.strTitle)
}
inline std::string* mail_info_t::mutable_strtitle() {
  std::string* _s = _internal_mutable_strtitle();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.mail_info_t.strTitle)
  return _s;
}
inline const std::string& mail_info_t::_internal_strtitle() const {
  return strtitle_.Get();
}
inline void mail_info_t::_internal_set_strtitle(const std::string& value) {
  
  strtitle_.Set(value, GetArenaForAllocation());
}
inline std::string* mail_info_t::_internal_mutable_strtitle() {
  
  return strtitle_.Mutable(GetArenaForAllocation());
}
inline std::string* mail_info_t::release_strtitle() {
  // @@protoc_insertion_point(field_release:ProtoMsg.mail_info_t.strTitle)
  return strtitle_.Release();
}
inline void mail_info_t::set_allocated_strtitle(std::string* strtitle) {
  if (strtitle != nullptr) {
    
  } else {
    
  }
  strtitle_.SetAllocated(strtitle, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strtitle_.IsDefault()) {
    strtitle_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.mail_info_t.strTitle)
}

// string strSender = 6;
inline void mail_info_t::clear_strsender() {
  strsender_.ClearToEmpty();
}
inline const std::string& mail_info_t::strsender() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.strSender)
  return _internal_strsender();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void mail_info_t::set_strsender(ArgT0&& arg0, ArgT... args) {
 
 strsender_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.strSender)
}
inline std::string* mail_info_t::mutable_strsender() {
  std::string* _s = _internal_mutable_strsender();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.mail_info_t.strSender)
  return _s;
}
inline const std::string& mail_info_t::_internal_strsender() const {
  return strsender_.Get();
}
inline void mail_info_t::_internal_set_strsender(const std::string& value) {
  
  strsender_.Set(value, GetArenaForAllocation());
}
inline std::string* mail_info_t::_internal_mutable_strsender() {
  
  return strsender_.Mutable(GetArenaForAllocation());
}
inline std::string* mail_info_t::release_strsender() {
  // @@protoc_insertion_point(field_release:ProtoMsg.mail_info_t.strSender)
  return strsender_.Release();
}
inline void mail_info_t::set_allocated_strsender(std::string* strsender) {
  if (strsender != nullptr) {
    
  } else {
    
  }
  strsender_.SetAllocated(strsender, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strsender_.IsDefault()) {
    strsender_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.mail_info_t.strSender)
}

// string strContent = 7;
inline void mail_info_t::clear_strcontent() {
  strcontent_.ClearToEmpty();
}
inline const std::string& mail_info_t::strcontent() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.strContent)
  return _internal_strcontent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void mail_info_t::set_strcontent(ArgT0&& arg0, ArgT... args) {
 
 strcontent_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.strContent)
}
inline std::string* mail_info_t::mutable_strcontent() {
  std::string* _s = _internal_mutable_strcontent();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.mail_info_t.strContent)
  return _s;
}
inline const std::string& mail_info_t::_internal_strcontent() const {
  return strcontent_.Get();
}
inline void mail_info_t::_internal_set_strcontent(const std::string& value) {
  
  strcontent_.Set(value, GetArenaForAllocation());
}
inline std::string* mail_info_t::_internal_mutable_strcontent() {
  
  return strcontent_.Mutable(GetArenaForAllocation());
}
inline std::string* mail_info_t::release_strcontent() {
  // @@protoc_insertion_point(field_release:ProtoMsg.mail_info_t.strContent)
  return strcontent_.Release();
}
inline void mail_info_t::set_allocated_strcontent(std::string* strcontent) {
  if (strcontent != nullptr) {
    
  } else {
    
  }
  strcontent_.SetAllocated(strcontent, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strcontent_.IsDefault()) {
    strcontent_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.mail_info_t.strContent)
}

// repeated .ProtoMsg.game_item_t vecItem = 8;
inline int mail_info_t::_internal_vecitem_size() const {
  return vecitem_.size();
}
inline int mail_info_t::vecitem_size() const {
  return _internal_vecitem_size();
}
inline ::ProtoMsg::game_item_t* mail_info_t::mutable_vecitem(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.mail_info_t.vecItem)
  return vecitem_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >*
mail_info_t::mutable_vecitem() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.mail_info_t.vecItem)
  return &vecitem_;
}
inline const ::ProtoMsg::game_item_t& mail_info_t::_internal_vecitem(int index) const {
  return vecitem_.Get(index);
}
inline const ::ProtoMsg::game_item_t& mail_info_t::vecitem(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.vecItem)
  return _internal_vecitem(index);
}
inline ::ProtoMsg::game_item_t* mail_info_t::_internal_add_vecitem() {
  return vecitem_.Add();
}
inline ::ProtoMsg::game_item_t* mail_info_t::add_vecitem() {
  ::ProtoMsg::game_item_t* _add = _internal_add_vecitem();
  // @@protoc_insertion_point(field_add:ProtoMsg.mail_info_t.vecItem)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >&
mail_info_t::vecitem() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.mail_info_t.vecItem)
  return vecitem_;
}

// bool bRecived = 9;
inline void mail_info_t::clear_brecived() {
  brecived_ = false;
}
inline bool mail_info_t::_internal_brecived() const {
  return brecived_;
}
inline bool mail_info_t::brecived() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.mail_info_t.bRecived)
  return _internal_brecived();
}
inline void mail_info_t::_internal_set_brecived(bool value) {
  
  brecived_ = value;
}
inline void mail_info_t::set_brecived(bool value) {
  _internal_set_brecived(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.mail_info_t.bRecived)
}

// -------------------------------------------------------------------

// Msg_Mail_GetMailList_Req

// -------------------------------------------------------------------

// Msg_Mail_GetMailList_Rsp

// repeated .ProtoMsg.mail_info_t vecMail = 1;
inline int Msg_Mail_GetMailList_Rsp::_internal_vecmail_size() const {
  return vecmail_.size();
}
inline int Msg_Mail_GetMailList_Rsp::vecmail_size() const {
  return _internal_vecmail_size();
}
inline void Msg_Mail_GetMailList_Rsp::clear_vecmail() {
  vecmail_.Clear();
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_GetMailList_Rsp::mutable_vecmail(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_Mail_GetMailList_Rsp.vecMail)
  return vecmail_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >*
Msg_Mail_GetMailList_Rsp::mutable_vecmail() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_Mail_GetMailList_Rsp.vecMail)
  return &vecmail_;
}
inline const ::ProtoMsg::mail_info_t& Msg_Mail_GetMailList_Rsp::_internal_vecmail(int index) const {
  return vecmail_.Get(index);
}
inline const ::ProtoMsg::mail_info_t& Msg_Mail_GetMailList_Rsp::vecmail(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_GetMailList_Rsp.vecMail)
  return _internal_vecmail(index);
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_GetMailList_Rsp::_internal_add_vecmail() {
  return vecmail_.Add();
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_GetMailList_Rsp::add_vecmail() {
  ::ProtoMsg::mail_info_t* _add = _internal_add_vecmail();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_Mail_GetMailList_Rsp.vecMail)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >&
Msg_Mail_GetMailList_Rsp::vecmail() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_Mail_GetMailList_Rsp.vecMail)
  return vecmail_;
}

// -------------------------------------------------------------------

// Msg_Mail_MailList_Notify

// repeated .ProtoMsg.mail_info_t vecMail = 1;
inline int Msg_Mail_MailList_Notify::_internal_vecmail_size() const {
  return vecmail_.size();
}
inline int Msg_Mail_MailList_Notify::vecmail_size() const {
  return _internal_vecmail_size();
}
inline void Msg_Mail_MailList_Notify::clear_vecmail() {
  vecmail_.Clear();
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_MailList_Notify::mutable_vecmail(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_Mail_MailList_Notify.vecMail)
  return vecmail_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >*
Msg_Mail_MailList_Notify::mutable_vecmail() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_Mail_MailList_Notify.vecMail)
  return &vecmail_;
}
inline const ::ProtoMsg::mail_info_t& Msg_Mail_MailList_Notify::_internal_vecmail(int index) const {
  return vecmail_.Get(index);
}
inline const ::ProtoMsg::mail_info_t& Msg_Mail_MailList_Notify::vecmail(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_MailList_Notify.vecMail)
  return _internal_vecmail(index);
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_MailList_Notify::_internal_add_vecmail() {
  return vecmail_.Add();
}
inline ::ProtoMsg::mail_info_t* Msg_Mail_MailList_Notify::add_vecmail() {
  ::ProtoMsg::mail_info_t* _add = _internal_add_vecmail();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_Mail_MailList_Notify.vecMail)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::mail_info_t >&
Msg_Mail_MailList_Notify::vecmail() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_Mail_MailList_Notify.vecMail)
  return vecmail_;
}

// -------------------------------------------------------------------

// Msg_Mail_ReadMail_Req

// int64 llMailId = 1;
inline void Msg_Mail_ReadMail_Req::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_ReadMail_Req::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_ReadMail_Req::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReadMail_Req.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_ReadMail_Req::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_ReadMail_Req::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_ReadMail_Req.llMailId)
}

// -------------------------------------------------------------------

// Msg_Mail_ReadMail_Rsp

// int64 llMailId = 1;
inline void Msg_Mail_ReadMail_Rsp::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_ReadMail_Rsp::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_ReadMail_Rsp::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReadMail_Rsp.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_ReadMail_Rsp::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_ReadMail_Rsp::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_ReadMail_Rsp.llMailId)
}

// int64 llReadTime = 2;
inline void Msg_Mail_ReadMail_Rsp::clear_llreadtime() {
  llreadtime_ = int64_t{0};
}
inline int64_t Msg_Mail_ReadMail_Rsp::_internal_llreadtime() const {
  return llreadtime_;
}
inline int64_t Msg_Mail_ReadMail_Rsp::llreadtime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReadMail_Rsp.llReadTime)
  return _internal_llreadtime();
}
inline void Msg_Mail_ReadMail_Rsp::_internal_set_llreadtime(int64_t value) {
  
  llreadtime_ = value;
}
inline void Msg_Mail_ReadMail_Rsp::set_llreadtime(int64_t value) {
  _internal_set_llreadtime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_ReadMail_Rsp.llReadTime)
}

// -------------------------------------------------------------------

// Msg_Mail_DeleteMail_Req

// int64 llMailId = 1;
inline void Msg_Mail_DeleteMail_Req::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_DeleteMail_Req::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_DeleteMail_Req::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_DeleteMail_Req.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_DeleteMail_Req::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_DeleteMail_Req::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_DeleteMail_Req.llMailId)
}

// -------------------------------------------------------------------

// Msg_Mail_DeleteMail_Rsp

// int64 llMailId = 1;
inline void Msg_Mail_DeleteMail_Rsp::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_DeleteMail_Rsp::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_DeleteMail_Rsp::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_DeleteMail_Rsp.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_DeleteMail_Rsp::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_DeleteMail_Rsp::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_DeleteMail_Rsp.llMailId)
}

// -------------------------------------------------------------------

// Msg_Mail_ReciveAttach_Req

// int64 llMailId = 1;
inline void Msg_Mail_ReciveAttach_Req::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_ReciveAttach_Req::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_ReciveAttach_Req::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReciveAttach_Req.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_ReciveAttach_Req::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_ReciveAttach_Req::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_ReciveAttach_Req.llMailId)
}

// -------------------------------------------------------------------

// Msg_Mail_ReciveAttach_Rsp

// int64 llMailId = 1;
inline void Msg_Mail_ReciveAttach_Rsp::clear_llmailid() {
  llmailid_ = int64_t{0};
}
inline int64_t Msg_Mail_ReciveAttach_Rsp::_internal_llmailid() const {
  return llmailid_;
}
inline int64_t Msg_Mail_ReciveAttach_Rsp::llmailid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.llMailId)
  return _internal_llmailid();
}
inline void Msg_Mail_ReciveAttach_Rsp::_internal_set_llmailid(int64_t value) {
  
  llmailid_ = value;
}
inline void Msg_Mail_ReciveAttach_Rsp::set_llmailid(int64_t value) {
  _internal_set_llmailid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.llMailId)
}

// repeated .ProtoMsg.game_item_t vecItem = 2;
inline int Msg_Mail_ReciveAttach_Rsp::_internal_vecitem_size() const {
  return vecitem_.size();
}
inline int Msg_Mail_ReciveAttach_Rsp::vecitem_size() const {
  return _internal_vecitem_size();
}
inline ::ProtoMsg::game_item_t* Msg_Mail_ReciveAttach_Rsp::mutable_vecitem(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.vecItem)
  return vecitem_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >*
Msg_Mail_ReciveAttach_Rsp::mutable_vecitem() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.vecItem)
  return &vecitem_;
}
inline const ::ProtoMsg::game_item_t& Msg_Mail_ReciveAttach_Rsp::_internal_vecitem(int index) const {
  return vecitem_.Get(index);
}
inline const ::ProtoMsg::game_item_t& Msg_Mail_ReciveAttach_Rsp::vecitem(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.vecItem)
  return _internal_vecitem(index);
}
inline ::ProtoMsg::game_item_t* Msg_Mail_ReciveAttach_Rsp::_internal_add_vecitem() {
  return vecitem_.Add();
}
inline ::ProtoMsg::game_item_t* Msg_Mail_ReciveAttach_Rsp::add_vecitem() {
  ::ProtoMsg::game_item_t* _add = _internal_add_vecitem();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.vecItem)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::game_item_t >&
Msg_Mail_ReciveAttach_Rsp::vecitem() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_Mail_ReciveAttach_Rsp.vecItem)
  return vecitem_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoMsg::MsgModule_Mail_MsgCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MsgModule_Mail_MsgCmd>() {
  return ::ProtoMsg::MsgModule_Mail_MsgCmd_descriptor();
}
template <> struct is_proto_enum< ::ProtoMsg::enum_mail_t> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::enum_mail_t>() {
  return ::ProtoMsg::enum_mail_t_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fmail_2eproto
