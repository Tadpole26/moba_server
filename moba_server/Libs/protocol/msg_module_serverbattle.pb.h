// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_serverbattle.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverbattle_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverbattle_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_common.pb.h"
#include "result_code.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fmodule_5fserverbattle_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmodule_5fserverbattle_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fmodule_5fserverbattle_2eproto;
namespace ProtoMsg {
class MsgModule_ServerBattle;
struct MsgModule_ServerBattleDefaultTypeInternal;
extern MsgModule_ServerBattleDefaultTypeInternal _MsgModule_ServerBattle_default_instance_;
class Msg_ServerBattle_BC_Heart_Req;
struct Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal;
extern Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal _Msg_ServerBattle_BC_Heart_Req_default_instance_;
class Msg_ServerBattle_BC_Heart_Rsp;
struct Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal;
extern Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal _Msg_ServerBattle_BC_Heart_Rsp_default_instance_;
class Msg_ServerBattle_BC_LoadInfo_Notify;
struct Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal;
extern Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_LoadInfo_Notify_default_instance_;
class Msg_ServerBattle_BC_Register_Req;
struct Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal;
extern Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal _Msg_ServerBattle_BC_Register_Req_default_instance_;
class Msg_ServerBattle_BC_Register_Rsp;
struct Msg_ServerBattle_BC_Register_RspDefaultTypeInternal;
extern Msg_ServerBattle_BC_Register_RspDefaultTypeInternal _Msg_ServerBattle_BC_Register_Rsp_default_instance_;
class Msg_ServerBattle_BC_Result_Notify;
struct Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal;
extern Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_Result_Notify_default_instance_;
class Msg_ServerBattle_BC_RoomInfo_Notify;
struct Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal;
extern Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_RoomInfo_Notify_default_instance_;
class Msg_ServerBattle_CB_CreateRoom_Req;
struct Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal;
extern Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal _Msg_ServerBattle_CB_CreateRoom_Req_default_instance_;
class Msg_ServerBattle_CB_CreateRoom_Rsp;
struct Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal;
extern Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal _Msg_ServerBattle_CB_CreateRoom_Rsp_default_instance_;
class room_data_t;
struct room_data_tDefaultTypeInternal;
extern room_data_tDefaultTypeInternal _room_data_t_default_instance_;
class user_conv_id_t;
struct user_conv_id_tDefaultTypeInternal;
extern user_conv_id_tDefaultTypeInternal _user_conv_id_t_default_instance_;
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMsg::MsgModule_ServerBattle* Arena::CreateMaybeMessage<::ProtoMsg::MsgModule_ServerBattle>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_Heart_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_Heart_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_Register_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_Register_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_Result_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_Result_Notify>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp>(Arena*);
template<> ::ProtoMsg::room_data_t* Arena::CreateMaybeMessage<::ProtoMsg::room_data_t>(Arena*);
template<> ::ProtoMsg::user_conv_id_t* Arena::CreateMaybeMessage<::ProtoMsg::user_conv_id_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMsg {

enum MsgModule_ServerBattle_MsgCmd : int {
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_None = 0,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Register_Req = 1,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Register_Rsp = 2,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_CB_CreateRoom_Req = 3,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_CB_CreateRoom_Rsp = 4,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Heart_Req = 5,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Heart_Rsp = 6,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_RoomInfo_Notify = 7,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_LoadInfo_Notify = 8,
  MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Result_Notify = 9,
  MsgModule_ServerBattle_MsgCmd_MsgModule_ServerBattle_MsgCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgModule_ServerBattle_MsgCmd_MsgModule_ServerBattle_MsgCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgModule_ServerBattle_MsgCmd_IsValid(int value);
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle_MsgCmd_MsgCmd_MIN = MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_None;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle_MsgCmd_MsgCmd_MAX = MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Result_Notify;
constexpr int MsgModule_ServerBattle_MsgCmd_MsgCmd_ARRAYSIZE = MsgModule_ServerBattle_MsgCmd_MsgCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_ServerBattle_MsgCmd_descriptor();
template<typename T>
inline const std::string& MsgModule_ServerBattle_MsgCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgModule_ServerBattle_MsgCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgModule_ServerBattle_MsgCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgModule_ServerBattle_MsgCmd_descriptor(), enum_t_value);
}
inline bool MsgModule_ServerBattle_MsgCmd_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgModule_ServerBattle_MsgCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgModule_ServerBattle_MsgCmd>(
    MsgModule_ServerBattle_MsgCmd_descriptor(), name, value);
}
// ===================================================================

class MsgModule_ServerBattle final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.MsgModule_ServerBattle) */ {
 public:
  inline MsgModule_ServerBattle() : MsgModule_ServerBattle(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgModule_ServerBattle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgModule_ServerBattle(const MsgModule_ServerBattle& from);
  MsgModule_ServerBattle(MsgModule_ServerBattle&& from) noexcept
    : MsgModule_ServerBattle() {
    *this = ::std::move(from);
  }

  inline MsgModule_ServerBattle& operator=(const MsgModule_ServerBattle& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModule_ServerBattle& operator=(MsgModule_ServerBattle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgModule_ServerBattle& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgModule_ServerBattle* internal_default_instance() {
    return reinterpret_cast<const MsgModule_ServerBattle*>(
               &_MsgModule_ServerBattle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgModule_ServerBattle& a, MsgModule_ServerBattle& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModule_ServerBattle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModule_ServerBattle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgModule_ServerBattle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgModule_ServerBattle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgModule_ServerBattle& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgModule_ServerBattle& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.MsgModule_ServerBattle";
  }
  protected:
  explicit MsgModule_ServerBattle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgModule_ServerBattle_MsgCmd MsgCmd;
  static constexpr MsgCmd Msg_ServerBattle_None =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_None;
  static constexpr MsgCmd Msg_ServerBattle_BC_Register_Req =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Register_Req;
  static constexpr MsgCmd Msg_ServerBattle_BC_Register_Rsp =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Register_Rsp;
  static constexpr MsgCmd Msg_ServerBattle_CB_CreateRoom_Req =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_CB_CreateRoom_Req;
  static constexpr MsgCmd Msg_ServerBattle_CB_CreateRoom_Rsp =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_CB_CreateRoom_Rsp;
  static constexpr MsgCmd Msg_ServerBattle_BC_Heart_Req =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Heart_Req;
  static constexpr MsgCmd Msg_ServerBattle_BC_Heart_Rsp =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Heart_Rsp;
  static constexpr MsgCmd Msg_ServerBattle_BC_RoomInfo_Notify =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_RoomInfo_Notify;
  static constexpr MsgCmd Msg_ServerBattle_BC_LoadInfo_Notify =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_LoadInfo_Notify;
  static constexpr MsgCmd Msg_ServerBattle_BC_Result_Notify =
    MsgModule_ServerBattle_MsgCmd_Msg_ServerBattle_BC_Result_Notify;
  static inline bool MsgCmd_IsValid(int value) {
    return MsgModule_ServerBattle_MsgCmd_IsValid(value);
  }
  static constexpr MsgCmd MsgCmd_MIN =
    MsgModule_ServerBattle_MsgCmd_MsgCmd_MIN;
  static constexpr MsgCmd MsgCmd_MAX =
    MsgModule_ServerBattle_MsgCmd_MsgCmd_MAX;
  static constexpr int MsgCmd_ARRAYSIZE =
    MsgModule_ServerBattle_MsgCmd_MsgCmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgCmd_descriptor() {
    return MsgModule_ServerBattle_MsgCmd_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgCmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgCmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgCmd_Name.");
    return MsgModule_ServerBattle_MsgCmd_Name(enum_t_value);
  }
  static inline bool MsgCmd_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgCmd* value) {
    return MsgModule_ServerBattle_MsgCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MsgModule_ServerBattle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_Register_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_Register_Req) */ {
 public:
  inline Msg_ServerBattle_BC_Register_Req() : Msg_ServerBattle_BC_Register_Req(nullptr) {}
  ~Msg_ServerBattle_BC_Register_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_Register_Req(const Msg_ServerBattle_BC_Register_Req& from);
  Msg_ServerBattle_BC_Register_Req(Msg_ServerBattle_BC_Register_Req&& from) noexcept
    : Msg_ServerBattle_BC_Register_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_Register_Req& operator=(const Msg_ServerBattle_BC_Register_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_Register_Req& operator=(Msg_ServerBattle_BC_Register_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_Register_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_Register_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_Register_Req*>(
               &_Msg_ServerBattle_BC_Register_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Msg_ServerBattle_BC_Register_Req& a, Msg_ServerBattle_BC_Register_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_Register_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_Register_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_Register_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_Register_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_BC_Register_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_Register_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_BC_Register_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_Register_Req";
  }
  protected:
  explicit Msg_ServerBattle_BC_Register_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrIpFieldNumber = 1,
    kStrLinkIpFieldNumber = 9,
    kIPortFieldNumber = 2,
    kIMaxRoomNumFieldNumber = 3,
    kIIdFieldNumber = 4,
    kIServerAreaFieldNumber = 5,
    kIMaxUserNumFieldNumber = 6,
    kICurUserFieldNumber = 7,
    kICurRoomFieldNumber = 8,
  };
  // string strIp = 1;
  void clear_strip();
  const std::string& strip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strip();
  PROTOBUF_NODISCARD std::string* release_strip();
  void set_allocated_strip(std::string* strip);
  private:
  const std::string& _internal_strip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strip(const std::string& value);
  std::string* _internal_mutable_strip();
  public:

  // string strLinkIp = 9;
  void clear_strlinkip();
  const std::string& strlinkip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strlinkip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strlinkip();
  PROTOBUF_NODISCARD std::string* release_strlinkip();
  void set_allocated_strlinkip(std::string* strlinkip);
  private:
  const std::string& _internal_strlinkip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strlinkip(const std::string& value);
  std::string* _internal_mutable_strlinkip();
  public:

  // int32 iPort = 2;
  void clear_iport();
  int32_t iport() const;
  void set_iport(int32_t value);
  private:
  int32_t _internal_iport() const;
  void _internal_set_iport(int32_t value);
  public:

  // int32 iMaxRoomNum = 3;
  void clear_imaxroomnum();
  int32_t imaxroomnum() const;
  void set_imaxroomnum(int32_t value);
  private:
  int32_t _internal_imaxroomnum() const;
  void _internal_set_imaxroomnum(int32_t value);
  public:

  // int32 iId = 4;
  void clear_iid();
  int32_t iid() const;
  void set_iid(int32_t value);
  private:
  int32_t _internal_iid() const;
  void _internal_set_iid(int32_t value);
  public:

  // int32 iServerArea = 5;
  void clear_iserverarea();
  int32_t iserverarea() const;
  void set_iserverarea(int32_t value);
  private:
  int32_t _internal_iserverarea() const;
  void _internal_set_iserverarea(int32_t value);
  public:

  // int32 iMaxUserNum = 6;
  void clear_imaxusernum();
  int32_t imaxusernum() const;
  void set_imaxusernum(int32_t value);
  private:
  int32_t _internal_imaxusernum() const;
  void _internal_set_imaxusernum(int32_t value);
  public:

  // int32 iCurUser = 7;
  void clear_icuruser();
  int32_t icuruser() const;
  void set_icuruser(int32_t value);
  private:
  int32_t _internal_icuruser() const;
  void _internal_set_icuruser(int32_t value);
  public:

  // int32 iCurRoom = 8;
  void clear_icurroom();
  int32_t icurroom() const;
  void set_icurroom(int32_t value);
  private:
  int32_t _internal_icurroom() const;
  void _internal_set_icurroom(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strlinkip_;
  int32_t iport_;
  int32_t imaxroomnum_;
  int32_t iid_;
  int32_t iserverarea_;
  int32_t imaxusernum_;
  int32_t icuruser_;
  int32_t icurroom_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_Register_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp) */ {
 public:
  inline Msg_ServerBattle_BC_Register_Rsp() : Msg_ServerBattle_BC_Register_Rsp(nullptr) {}
  ~Msg_ServerBattle_BC_Register_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_Register_Rsp(const Msg_ServerBattle_BC_Register_Rsp& from);
  Msg_ServerBattle_BC_Register_Rsp(Msg_ServerBattle_BC_Register_Rsp&& from) noexcept
    : Msg_ServerBattle_BC_Register_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_Register_Rsp& operator=(const Msg_ServerBattle_BC_Register_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_Register_Rsp& operator=(Msg_ServerBattle_BC_Register_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_Register_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_Register_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_Register_Rsp*>(
               &_Msg_ServerBattle_BC_Register_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_ServerBattle_BC_Register_Rsp& a, Msg_ServerBattle_BC_Register_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_Register_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_Register_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_Register_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_Register_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_BC_Register_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_Register_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_BC_Register_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_Register_Rsp";
  }
  protected:
  explicit Msg_ServerBattle_BC_Register_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIServerIdFieldNumber = 1,
  };
  // int32 iServerId = 1;
  void clear_iserverid();
  int32_t iserverid() const;
  void set_iserverid(int32_t value);
  private:
  int32_t _internal_iserverid() const;
  void _internal_set_iserverid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t iserverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_CB_CreateRoom_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req) */ {
 public:
  inline Msg_ServerBattle_CB_CreateRoom_Req() : Msg_ServerBattle_CB_CreateRoom_Req(nullptr) {}
  ~Msg_ServerBattle_CB_CreateRoom_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_CB_CreateRoom_Req(const Msg_ServerBattle_CB_CreateRoom_Req& from);
  Msg_ServerBattle_CB_CreateRoom_Req(Msg_ServerBattle_CB_CreateRoom_Req&& from) noexcept
    : Msg_ServerBattle_CB_CreateRoom_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_CB_CreateRoom_Req& operator=(const Msg_ServerBattle_CB_CreateRoom_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_CB_CreateRoom_Req& operator=(Msg_ServerBattle_CB_CreateRoom_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_CB_CreateRoom_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_CB_CreateRoom_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_CB_CreateRoom_Req*>(
               &_Msg_ServerBattle_CB_CreateRoom_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_ServerBattle_CB_CreateRoom_Req& a, Msg_ServerBattle_CB_CreateRoom_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_CB_CreateRoom_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_CB_CreateRoom_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_CB_CreateRoom_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_CB_CreateRoom_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_CB_CreateRoom_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_CB_CreateRoom_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_CB_CreateRoom_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req";
  }
  protected:
  explicit Msg_ServerBattle_CB_CreateRoom_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecUserDataFieldNumber = 6,
    kVecObUserDataFieldNumber = 12,
    kStrMapNameFieldNumber = 3,
    kStrRoomLogIdFieldNumber = 7,
    kLlRoomIdFieldNumber = 1,
    kETypeFieldNumber = 2,
    kIMapIdFieldNumber = 4,
    kIMapSecFieldNumber = 5,
    kIInitAreaFieldNumber = 8,
    kBWaitLstFieldNumber = 9,
    kIUserNumFieldNumber = 10,
    kIRobotNumFieldNumber = 11,
    kELeisureTypeFieldNumber = 13,
  };
  // repeated .ProtoMsg.user_battle_info_t vecUserData = 6;
  int vecuserdata_size() const;
  private:
  int _internal_vecuserdata_size() const;
  public:
  void clear_vecuserdata();
  ::ProtoMsg::user_battle_info_t* mutable_vecuserdata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >*
      mutable_vecuserdata();
  private:
  const ::ProtoMsg::user_battle_info_t& _internal_vecuserdata(int index) const;
  ::ProtoMsg::user_battle_info_t* _internal_add_vecuserdata();
  public:
  const ::ProtoMsg::user_battle_info_t& vecuserdata(int index) const;
  ::ProtoMsg::user_battle_info_t* add_vecuserdata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >&
      vecuserdata() const;

  // repeated .ProtoMsg.user_battle_info_t vecObUserData = 12;
  int vecobuserdata_size() const;
  private:
  int _internal_vecobuserdata_size() const;
  public:
  void clear_vecobuserdata();
  ::ProtoMsg::user_battle_info_t* mutable_vecobuserdata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >*
      mutable_vecobuserdata();
  private:
  const ::ProtoMsg::user_battle_info_t& _internal_vecobuserdata(int index) const;
  ::ProtoMsg::user_battle_info_t* _internal_add_vecobuserdata();
  public:
  const ::ProtoMsg::user_battle_info_t& vecobuserdata(int index) const;
  ::ProtoMsg::user_battle_info_t* add_vecobuserdata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >&
      vecobuserdata() const;

  // string strMapName = 3;
  void clear_strmapname();
  const std::string& strmapname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strmapname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strmapname();
  PROTOBUF_NODISCARD std::string* release_strmapname();
  void set_allocated_strmapname(std::string* strmapname);
  private:
  const std::string& _internal_strmapname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strmapname(const std::string& value);
  std::string* _internal_mutable_strmapname();
  public:

  // string strRoomLogId = 7;
  void clear_strroomlogid();
  const std::string& strroomlogid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strroomlogid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strroomlogid();
  PROTOBUF_NODISCARD std::string* release_strroomlogid();
  void set_allocated_strroomlogid(std::string* strroomlogid);
  private:
  const std::string& _internal_strroomlogid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strroomlogid(const std::string& value);
  std::string* _internal_mutable_strroomlogid();
  public:

  // int64 llRoomId = 1;
  void clear_llroomid();
  int64_t llroomid() const;
  void set_llroomid(int64_t value);
  private:
  int64_t _internal_llroomid() const;
  void _internal_set_llroomid(int64_t value);
  public:

  // .ProtoMsg.ERoomType eType = 2;
  void clear_etype();
  ::ProtoMsg::ERoomType etype() const;
  void set_etype(::ProtoMsg::ERoomType value);
  private:
  ::ProtoMsg::ERoomType _internal_etype() const;
  void _internal_set_etype(::ProtoMsg::ERoomType value);
  public:

  // int32 iMapId = 4;
  void clear_imapid();
  int32_t imapid() const;
  void set_imapid(int32_t value);
  private:
  int32_t _internal_imapid() const;
  void _internal_set_imapid(int32_t value);
  public:

  // int32 iMapSec = 5;
  void clear_imapsec();
  int32_t imapsec() const;
  void set_imapsec(int32_t value);
  private:
  int32_t _internal_imapsec() const;
  void _internal_set_imapsec(int32_t value);
  public:

  // int32 iInitArea = 8;
  void clear_iinitarea();
  int32_t iinitarea() const;
  void set_iinitarea(int32_t value);
  private:
  int32_t _internal_iinitarea() const;
  void _internal_set_iinitarea(int32_t value);
  public:

  // bool bWaitLst = 9;
  void clear_bwaitlst();
  bool bwaitlst() const;
  void set_bwaitlst(bool value);
  private:
  bool _internal_bwaitlst() const;
  void _internal_set_bwaitlst(bool value);
  public:

  // int32 iUserNum = 10;
  void clear_iusernum();
  int32_t iusernum() const;
  void set_iusernum(int32_t value);
  private:
  int32_t _internal_iusernum() const;
  void _internal_set_iusernum(int32_t value);
  public:

  // int32 iRobotNum = 11;
  void clear_irobotnum();
  int32_t irobotnum() const;
  void set_irobotnum(int32_t value);
  private:
  int32_t _internal_irobotnum() const;
  void _internal_set_irobotnum(int32_t value);
  public:

  // .ProtoMsg.ELeisureType eLeisureType = 13;
  void clear_eleisuretype();
  ::ProtoMsg::ELeisureType eleisuretype() const;
  void set_eleisuretype(::ProtoMsg::ELeisureType value);
  private:
  ::ProtoMsg::ELeisureType _internal_eleisuretype() const;
  void _internal_set_eleisuretype(::ProtoMsg::ELeisureType value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t > vecuserdata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t > vecobuserdata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strmapname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strroomlogid_;
  int64_t llroomid_;
  int etype_;
  int32_t imapid_;
  int32_t imapsec_;
  int32_t iinitarea_;
  bool bwaitlst_;
  int32_t iusernum_;
  int32_t irobotnum_;
  int eleisuretype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class user_conv_id_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.user_conv_id_t) */ {
 public:
  inline user_conv_id_t() : user_conv_id_t(nullptr) {}
  ~user_conv_id_t() override;
  explicit PROTOBUF_CONSTEXPR user_conv_id_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  user_conv_id_t(const user_conv_id_t& from);
  user_conv_id_t(user_conv_id_t&& from) noexcept
    : user_conv_id_t() {
    *this = ::std::move(from);
  }

  inline user_conv_id_t& operator=(const user_conv_id_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline user_conv_id_t& operator=(user_conv_id_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const user_conv_id_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const user_conv_id_t* internal_default_instance() {
    return reinterpret_cast<const user_conv_id_t*>(
               &_user_conv_id_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(user_conv_id_t& a, user_conv_id_t& b) {
    a.Swap(&b);
  }
  inline void Swap(user_conv_id_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(user_conv_id_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  user_conv_id_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<user_conv_id_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const user_conv_id_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const user_conv_id_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(user_conv_id_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.user_conv_id_t";
  }
  protected:
  explicit user_conv_id_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUseridFieldNumber = 1,
    kIConvIdFieldNumber = 2,
  };
  // int64 llUserid = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // int32 iConvId = 2;
  void clear_iconvid();
  int32_t iconvid() const;
  void set_iconvid(int32_t value);
  private:
  int32_t _internal_iconvid() const;
  void _internal_set_iconvid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.user_conv_id_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t lluserid_;
  int32_t iconvid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_CB_CreateRoom_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp) */ {
 public:
  inline Msg_ServerBattle_CB_CreateRoom_Rsp() : Msg_ServerBattle_CB_CreateRoom_Rsp(nullptr) {}
  ~Msg_ServerBattle_CB_CreateRoom_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_CB_CreateRoom_Rsp(const Msg_ServerBattle_CB_CreateRoom_Rsp& from);
  Msg_ServerBattle_CB_CreateRoom_Rsp(Msg_ServerBattle_CB_CreateRoom_Rsp&& from) noexcept
    : Msg_ServerBattle_CB_CreateRoom_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_CB_CreateRoom_Rsp& operator=(const Msg_ServerBattle_CB_CreateRoom_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_CB_CreateRoom_Rsp& operator=(Msg_ServerBattle_CB_CreateRoom_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_CB_CreateRoom_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_CB_CreateRoom_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_CB_CreateRoom_Rsp*>(
               &_Msg_ServerBattle_CB_CreateRoom_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Msg_ServerBattle_CB_CreateRoom_Rsp& a, Msg_ServerBattle_CB_CreateRoom_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_CB_CreateRoom_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_CB_CreateRoom_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_CB_CreateRoom_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_CB_CreateRoom_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_CB_CreateRoom_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_CB_CreateRoom_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_CB_CreateRoom_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp";
  }
  protected:
  explicit Msg_ServerBattle_CB_CreateRoom_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecUserConvFieldNumber = 8,
    kStrIpFieldNumber = 2,
    kStrRoomLogIdFieldNumber = 5,
    kStrOldLogIdFieldNumber = 6,
    kStrLinkIpFieldNumber = 11,
    kLlRoomIdFieldNumber = 1,
    kIPortFieldNumber = 3,
    kECodeFieldNumber = 4,
    kIRoomAreaIdFieldNumber = 7,
    kBUdpFieldNumber = 9,
    kLlCreateMsFieldNumber = 10,
  };
  // repeated .ProtoMsg.user_conv_id_t vecUserConv = 8;
  int vecuserconv_size() const;
  private:
  int _internal_vecuserconv_size() const;
  public:
  void clear_vecuserconv();
  ::ProtoMsg::user_conv_id_t* mutable_vecuserconv(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_conv_id_t >*
      mutable_vecuserconv();
  private:
  const ::ProtoMsg::user_conv_id_t& _internal_vecuserconv(int index) const;
  ::ProtoMsg::user_conv_id_t* _internal_add_vecuserconv();
  public:
  const ::ProtoMsg::user_conv_id_t& vecuserconv(int index) const;
  ::ProtoMsg::user_conv_id_t* add_vecuserconv();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_conv_id_t >&
      vecuserconv() const;

  // string strIp = 2;
  void clear_strip();
  const std::string& strip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strip();
  PROTOBUF_NODISCARD std::string* release_strip();
  void set_allocated_strip(std::string* strip);
  private:
  const std::string& _internal_strip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strip(const std::string& value);
  std::string* _internal_mutable_strip();
  public:

  // string strRoomLogId = 5;
  void clear_strroomlogid();
  const std::string& strroomlogid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strroomlogid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strroomlogid();
  PROTOBUF_NODISCARD std::string* release_strroomlogid();
  void set_allocated_strroomlogid(std::string* strroomlogid);
  private:
  const std::string& _internal_strroomlogid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strroomlogid(const std::string& value);
  std::string* _internal_mutable_strroomlogid();
  public:

  // string strOldLogId = 6;
  void clear_stroldlogid();
  const std::string& stroldlogid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_stroldlogid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_stroldlogid();
  PROTOBUF_NODISCARD std::string* release_stroldlogid();
  void set_allocated_stroldlogid(std::string* stroldlogid);
  private:
  const std::string& _internal_stroldlogid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stroldlogid(const std::string& value);
  std::string* _internal_mutable_stroldlogid();
  public:

  // string strLinkIp = 11;
  void clear_strlinkip();
  const std::string& strlinkip() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strlinkip(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strlinkip();
  PROTOBUF_NODISCARD std::string* release_strlinkip();
  void set_allocated_strlinkip(std::string* strlinkip);
  private:
  const std::string& _internal_strlinkip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strlinkip(const std::string& value);
  std::string* _internal_mutable_strlinkip();
  public:

  // int64 llRoomId = 1;
  void clear_llroomid();
  int64_t llroomid() const;
  void set_llroomid(int64_t value);
  private:
  int64_t _internal_llroomid() const;
  void _internal_set_llroomid(int64_t value);
  public:

  // int32 iPort = 3;
  void clear_iport();
  int32_t iport() const;
  void set_iport(int32_t value);
  private:
  int32_t _internal_iport() const;
  void _internal_set_iport(int32_t value);
  public:

  // .ProtoMsg.ResultCode eCode = 4;
  void clear_ecode();
  ::ProtoMsg::ResultCode ecode() const;
  void set_ecode(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_ecode() const;
  void _internal_set_ecode(::ProtoMsg::ResultCode value);
  public:

  // int32 iRoomAreaId = 7;
  void clear_iroomareaid();
  int32_t iroomareaid() const;
  void set_iroomareaid(int32_t value);
  private:
  int32_t _internal_iroomareaid() const;
  void _internal_set_iroomareaid(int32_t value);
  public:

  // bool bUdp = 9;
  void clear_budp();
  bool budp() const;
  void set_budp(bool value);
  private:
  bool _internal_budp() const;
  void _internal_set_budp(bool value);
  public:

  // int64 llCreateMs = 10;
  void clear_llcreatems();
  int64_t llcreatems() const;
  void set_llcreatems(int64_t value);
  private:
  int64_t _internal_llcreatems() const;
  void _internal_set_llcreatems(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_conv_id_t > vecuserconv_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strroomlogid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stroldlogid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strlinkip_;
  int64_t llroomid_;
  int32_t iport_;
  int ecode_;
  int32_t iroomareaid_;
  bool budp_;
  int64_t llcreatems_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_Heart_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_Heart_Req) */ {
 public:
  inline Msg_ServerBattle_BC_Heart_Req() : Msg_ServerBattle_BC_Heart_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_Heart_Req(const Msg_ServerBattle_BC_Heart_Req& from);
  Msg_ServerBattle_BC_Heart_Req(Msg_ServerBattle_BC_Heart_Req&& from) noexcept
    : Msg_ServerBattle_BC_Heart_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_Heart_Req& operator=(const Msg_ServerBattle_BC_Heart_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_Heart_Req& operator=(Msg_ServerBattle_BC_Heart_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_Heart_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_Heart_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_Heart_Req*>(
               &_Msg_ServerBattle_BC_Heart_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Msg_ServerBattle_BC_Heart_Req& a, Msg_ServerBattle_BC_Heart_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_Heart_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_Heart_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_Heart_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_Heart_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Msg_ServerBattle_BC_Heart_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_Heart_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_Heart_Req";
  }
  protected:
  explicit Msg_ServerBattle_BC_Heart_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_Heart_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_Heart_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_Heart_Rsp) */ {
 public:
  inline Msg_ServerBattle_BC_Heart_Rsp() : Msg_ServerBattle_BC_Heart_Rsp(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_Heart_Rsp(const Msg_ServerBattle_BC_Heart_Rsp& from);
  Msg_ServerBattle_BC_Heart_Rsp(Msg_ServerBattle_BC_Heart_Rsp&& from) noexcept
    : Msg_ServerBattle_BC_Heart_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_Heart_Rsp& operator=(const Msg_ServerBattle_BC_Heart_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_Heart_Rsp& operator=(Msg_ServerBattle_BC_Heart_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_Heart_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_Heart_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_Heart_Rsp*>(
               &_Msg_ServerBattle_BC_Heart_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_ServerBattle_BC_Heart_Rsp& a, Msg_ServerBattle_BC_Heart_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_Heart_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_Heart_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_Heart_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_Heart_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Msg_ServerBattle_BC_Heart_Rsp& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_Heart_Rsp& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_Heart_Rsp";
  }
  protected:
  explicit Msg_ServerBattle_BC_Heart_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_Heart_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_RoomInfo_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify) */ {
 public:
  inline Msg_ServerBattle_BC_RoomInfo_Notify() : Msg_ServerBattle_BC_RoomInfo_Notify(nullptr) {}
  ~Msg_ServerBattle_BC_RoomInfo_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_RoomInfo_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_RoomInfo_Notify(const Msg_ServerBattle_BC_RoomInfo_Notify& from);
  Msg_ServerBattle_BC_RoomInfo_Notify(Msg_ServerBattle_BC_RoomInfo_Notify&& from) noexcept
    : Msg_ServerBattle_BC_RoomInfo_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_RoomInfo_Notify& operator=(const Msg_ServerBattle_BC_RoomInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_RoomInfo_Notify& operator=(Msg_ServerBattle_BC_RoomInfo_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_RoomInfo_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_RoomInfo_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_RoomInfo_Notify*>(
               &_Msg_ServerBattle_BC_RoomInfo_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg_ServerBattle_BC_RoomInfo_Notify& a, Msg_ServerBattle_BC_RoomInfo_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_RoomInfo_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_RoomInfo_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_RoomInfo_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_RoomInfo_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_BC_RoomInfo_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_RoomInfo_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_BC_RoomInfo_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify";
  }
  protected:
  explicit Msg_ServerBattle_BC_RoomInfo_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrRoomLogIdFieldNumber = 4,
    kLlRoomIdFieldNumber = 1,
    kEStatusFieldNumber = 2,
    kIUserNumFieldNumber = 3,
  };
  // string strRoomLogId = 4;
  void clear_strroomlogid();
  const std::string& strroomlogid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strroomlogid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strroomlogid();
  PROTOBUF_NODISCARD std::string* release_strroomlogid();
  void set_allocated_strroomlogid(std::string* strroomlogid);
  private:
  const std::string& _internal_strroomlogid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strroomlogid(const std::string& value);
  std::string* _internal_mutable_strroomlogid();
  public:

  // int64 llRoomId = 1;
  void clear_llroomid();
  int64_t llroomid() const;
  void set_llroomid(int64_t value);
  private:
  int64_t _internal_llroomid() const;
  void _internal_set_llroomid(int64_t value);
  public:

  // .ProtoMsg.ERoomStatus eStatus = 2;
  void clear_estatus();
  ::ProtoMsg::ERoomStatus estatus() const;
  void set_estatus(::ProtoMsg::ERoomStatus value);
  private:
  ::ProtoMsg::ERoomStatus _internal_estatus() const;
  void _internal_set_estatus(::ProtoMsg::ERoomStatus value);
  public:

  // int32 iUserNum = 3;
  void clear_iusernum();
  int32_t iusernum() const;
  void set_iusernum(int32_t value);
  private:
  int32_t _internal_iusernum() const;
  void _internal_set_iusernum(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strroomlogid_;
  int64_t llroomid_;
  int estatus_;
  int32_t iusernum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_LoadInfo_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify) */ {
 public:
  inline Msg_ServerBattle_BC_LoadInfo_Notify() : Msg_ServerBattle_BC_LoadInfo_Notify(nullptr) {}
  ~Msg_ServerBattle_BC_LoadInfo_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_LoadInfo_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_LoadInfo_Notify(const Msg_ServerBattle_BC_LoadInfo_Notify& from);
  Msg_ServerBattle_BC_LoadInfo_Notify(Msg_ServerBattle_BC_LoadInfo_Notify&& from) noexcept
    : Msg_ServerBattle_BC_LoadInfo_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_LoadInfo_Notify& operator=(const Msg_ServerBattle_BC_LoadInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_LoadInfo_Notify& operator=(Msg_ServerBattle_BC_LoadInfo_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_LoadInfo_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_LoadInfo_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_LoadInfo_Notify*>(
               &_Msg_ServerBattle_BC_LoadInfo_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Msg_ServerBattle_BC_LoadInfo_Notify& a, Msg_ServerBattle_BC_LoadInfo_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_LoadInfo_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_LoadInfo_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_LoadInfo_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_LoadInfo_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_BC_LoadInfo_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_LoadInfo_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_BC_LoadInfo_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify";
  }
  protected:
  explicit Msg_ServerBattle_BC_LoadInfo_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIRoomNumFieldNumber = 1,
    kIUserNumFieldNumber = 2,
  };
  // int32 iRoomNum = 1;
  void clear_iroomnum();
  int32_t iroomnum() const;
  void set_iroomnum(int32_t value);
  private:
  int32_t _internal_iroomnum() const;
  void _internal_set_iroomnum(int32_t value);
  public:

  // int32 iUserNum = 2;
  void clear_iusernum();
  int32_t iusernum() const;
  void set_iusernum(int32_t value);
  private:
  int32_t _internal_iusernum() const;
  void _internal_set_iusernum(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t iroomnum_;
  int32_t iusernum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class room_data_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.room_data_t) */ {
 public:
  inline room_data_t() : room_data_t(nullptr) {}
  ~room_data_t() override;
  explicit PROTOBUF_CONSTEXPR room_data_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  room_data_t(const room_data_t& from);
  room_data_t(room_data_t&& from) noexcept
    : room_data_t() {
    *this = ::std::move(from);
  }

  inline room_data_t& operator=(const room_data_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline room_data_t& operator=(room_data_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const room_data_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const room_data_t* internal_default_instance() {
    return reinterpret_cast<const room_data_t*>(
               &_room_data_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(room_data_t& a, room_data_t& b) {
    a.Swap(&b);
  }
  inline void Swap(room_data_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(room_data_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  room_data_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<room_data_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const room_data_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const room_data_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(room_data_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.room_data_t";
  }
  protected:
  explicit room_data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEStatusFieldNumber = 1,
    kEResFailFieldNumber = 2,
    kIBattleSecFieldNumber = 3,
    kIOrderSizeFieldNumber = 5,
    kLlMaxFramesFieldNumber = 6,
    kLlMinFramesFieldNumber = 7,
    kBNoFullResFieldNumber = 4,
    kBHaveDiffResFieldNumber = 9,
    kIRoomAreanIdFieldNumber = 8,
  };
  // .ProtoMsg.ERoomStatus eStatus = 1;
  void clear_estatus();
  ::ProtoMsg::ERoomStatus estatus() const;
  void set_estatus(::ProtoMsg::ERoomStatus value);
  private:
  ::ProtoMsg::ERoomStatus _internal_estatus() const;
  void _internal_set_estatus(::ProtoMsg::ERoomStatus value);
  public:

  // .ProtoMsg.EBRCode eResFail = 2;
  void clear_eresfail();
  ::ProtoMsg::EBRCode eresfail() const;
  void set_eresfail(::ProtoMsg::EBRCode value);
  private:
  ::ProtoMsg::EBRCode _internal_eresfail() const;
  void _internal_set_eresfail(::ProtoMsg::EBRCode value);
  public:

  // int32 iBattleSec = 3;
  void clear_ibattlesec();
  int32_t ibattlesec() const;
  void set_ibattlesec(int32_t value);
  private:
  int32_t _internal_ibattlesec() const;
  void _internal_set_ibattlesec(int32_t value);
  public:

  // int32 iOrderSize = 5;
  void clear_iordersize();
  int32_t iordersize() const;
  void set_iordersize(int32_t value);
  private:
  int32_t _internal_iordersize() const;
  void _internal_set_iordersize(int32_t value);
  public:

  // int64 llMaxFrames = 6;
  void clear_llmaxframes();
  int64_t llmaxframes() const;
  void set_llmaxframes(int64_t value);
  private:
  int64_t _internal_llmaxframes() const;
  void _internal_set_llmaxframes(int64_t value);
  public:

  // int64 llMinFrames = 7;
  void clear_llminframes();
  int64_t llminframes() const;
  void set_llminframes(int64_t value);
  private:
  int64_t _internal_llminframes() const;
  void _internal_set_llminframes(int64_t value);
  public:

  // bool bNoFullRes = 4;
  void clear_bnofullres();
  bool bnofullres() const;
  void set_bnofullres(bool value);
  private:
  bool _internal_bnofullres() const;
  void _internal_set_bnofullres(bool value);
  public:

  // bool bHaveDiffRes = 9;
  void clear_bhavediffres();
  bool bhavediffres() const;
  void set_bhavediffres(bool value);
  private:
  bool _internal_bhavediffres() const;
  void _internal_set_bhavediffres(bool value);
  public:

  // int32 iRoomAreanId = 8;
  void clear_iroomareanid();
  int32_t iroomareanid() const;
  void set_iroomareanid(int32_t value);
  private:
  int32_t _internal_iroomareanid() const;
  void _internal_set_iroomareanid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.room_data_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int estatus_;
  int eresfail_;
  int32_t ibattlesec_;
  int32_t iordersize_;
  int64_t llmaxframes_;
  int64_t llminframes_;
  bool bnofullres_;
  bool bhavediffres_;
  int32_t iroomareanid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerBattle_BC_Result_Notify final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerBattle_BC_Result_Notify) */ {
 public:
  inline Msg_ServerBattle_BC_Result_Notify() : Msg_ServerBattle_BC_Result_Notify(nullptr) {}
  ~Msg_ServerBattle_BC_Result_Notify() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Result_Notify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerBattle_BC_Result_Notify(const Msg_ServerBattle_BC_Result_Notify& from);
  Msg_ServerBattle_BC_Result_Notify(Msg_ServerBattle_BC_Result_Notify&& from) noexcept
    : Msg_ServerBattle_BC_Result_Notify() {
    *this = ::std::move(from);
  }

  inline Msg_ServerBattle_BC_Result_Notify& operator=(const Msg_ServerBattle_BC_Result_Notify& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerBattle_BC_Result_Notify& operator=(Msg_ServerBattle_BC_Result_Notify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerBattle_BC_Result_Notify& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerBattle_BC_Result_Notify* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerBattle_BC_Result_Notify*>(
               &_Msg_ServerBattle_BC_Result_Notify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Msg_ServerBattle_BC_Result_Notify& a, Msg_ServerBattle_BC_Result_Notify& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerBattle_BC_Result_Notify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerBattle_BC_Result_Notify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerBattle_BC_Result_Notify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerBattle_BC_Result_Notify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerBattle_BC_Result_Notify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerBattle_BC_Result_Notify& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerBattle_BC_Result_Notify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerBattle_BC_Result_Notify";
  }
  protected:
  explicit Msg_ServerBattle_BC_Result_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecResultFieldNumber = 2,
    kStrRoomLogIdFieldNumber = 4,
    kORoomDataFieldNumber = 3,
    kLlRoomIdFieldNumber = 1,
  };
  // repeated .ProtoMsg.user_battle_result_t vecResult = 2;
  int vecresult_size() const;
  private:
  int _internal_vecresult_size() const;
  public:
  void clear_vecresult();
  ::ProtoMsg::user_battle_result_t* mutable_vecresult(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_result_t >*
      mutable_vecresult();
  private:
  const ::ProtoMsg::user_battle_result_t& _internal_vecresult(int index) const;
  ::ProtoMsg::user_battle_result_t* _internal_add_vecresult();
  public:
  const ::ProtoMsg::user_battle_result_t& vecresult(int index) const;
  ::ProtoMsg::user_battle_result_t* add_vecresult();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_result_t >&
      vecresult() const;

  // string strRoomLogId = 4;
  void clear_strroomlogid();
  const std::string& strroomlogid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strroomlogid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strroomlogid();
  PROTOBUF_NODISCARD std::string* release_strroomlogid();
  void set_allocated_strroomlogid(std::string* strroomlogid);
  private:
  const std::string& _internal_strroomlogid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strroomlogid(const std::string& value);
  std::string* _internal_mutable_strroomlogid();
  public:

  // .ProtoMsg.room_data_t oRoomData = 3;
  bool has_oroomdata() const;
  private:
  bool _internal_has_oroomdata() const;
  public:
  void clear_oroomdata();
  const ::ProtoMsg::room_data_t& oroomdata() const;
  PROTOBUF_NODISCARD ::ProtoMsg::room_data_t* release_oroomdata();
  ::ProtoMsg::room_data_t* mutable_oroomdata();
  void set_allocated_oroomdata(::ProtoMsg::room_data_t* oroomdata);
  private:
  const ::ProtoMsg::room_data_t& _internal_oroomdata() const;
  ::ProtoMsg::room_data_t* _internal_mutable_oroomdata();
  public:
  void unsafe_arena_set_allocated_oroomdata(
      ::ProtoMsg::room_data_t* oroomdata);
  ::ProtoMsg::room_data_t* unsafe_arena_release_oroomdata();

  // int64 llRoomId = 1;
  void clear_llroomid();
  int64_t llroomid() const;
  void set_llroomid(int64_t value);
  private:
  int64_t _internal_llroomid() const;
  void _internal_set_llroomid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_result_t > vecresult_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strroomlogid_;
  ::ProtoMsg::room_data_t* oroomdata_;
  int64_t llroomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverbattle_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgModule_ServerBattle

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_Register_Req

// string strIp = 1;
inline void Msg_ServerBattle_BC_Register_Req::clear_strip() {
  strip_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_BC_Register_Req::strip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp)
  return _internal_strip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_BC_Register_Req::set_strip(ArgT0&& arg0, ArgT... args) {
 
 strip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp)
}
inline std::string* Msg_ServerBattle_BC_Register_Req::mutable_strip() {
  std::string* _s = _internal_mutable_strip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp)
  return _s;
}
inline const std::string& Msg_ServerBattle_BC_Register_Req::_internal_strip() const {
  return strip_.Get();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_strip(const std::string& value) {
  
  strip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Register_Req::_internal_mutable_strip() {
  
  return strip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Register_Req::release_strip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp)
  return strip_.Release();
}
inline void Msg_ServerBattle_BC_Register_Req::set_allocated_strip(std::string* strip) {
  if (strip != nullptr) {
    
  } else {
    
  }
  strip_.SetAllocated(strip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strip_.IsDefault()) {
    strip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp)
}

// int32 iPort = 2;
inline void Msg_ServerBattle_BC_Register_Req::clear_iport() {
  iport_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_iport() const {
  return iport_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::iport() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iPort)
  return _internal_iport();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_iport(int32_t value) {
  
  iport_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_iport(int32_t value) {
  _internal_set_iport(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iPort)
}

// int32 iMaxRoomNum = 3;
inline void Msg_ServerBattle_BC_Register_Req::clear_imaxroomnum() {
  imaxroomnum_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_imaxroomnum() const {
  return imaxroomnum_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::imaxroomnum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iMaxRoomNum)
  return _internal_imaxroomnum();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_imaxroomnum(int32_t value) {
  
  imaxroomnum_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_imaxroomnum(int32_t value) {
  _internal_set_imaxroomnum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iMaxRoomNum)
}

// int32 iId = 4;
inline void Msg_ServerBattle_BC_Register_Req::clear_iid() {
  iid_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_iid() const {
  return iid_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::iid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iId)
  return _internal_iid();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_iid(int32_t value) {
  
  iid_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_iid(int32_t value) {
  _internal_set_iid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iId)
}

// int32 iServerArea = 5;
inline void Msg_ServerBattle_BC_Register_Req::clear_iserverarea() {
  iserverarea_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_iserverarea() const {
  return iserverarea_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::iserverarea() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iServerArea)
  return _internal_iserverarea();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_iserverarea(int32_t value) {
  
  iserverarea_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_iserverarea(int32_t value) {
  _internal_set_iserverarea(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iServerArea)
}

// int32 iMaxUserNum = 6;
inline void Msg_ServerBattle_BC_Register_Req::clear_imaxusernum() {
  imaxusernum_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_imaxusernum() const {
  return imaxusernum_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::imaxusernum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iMaxUserNum)
  return _internal_imaxusernum();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_imaxusernum(int32_t value) {
  
  imaxusernum_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_imaxusernum(int32_t value) {
  _internal_set_imaxusernum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iMaxUserNum)
}

// int32 iCurUser = 7;
inline void Msg_ServerBattle_BC_Register_Req::clear_icuruser() {
  icuruser_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_icuruser() const {
  return icuruser_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::icuruser() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iCurUser)
  return _internal_icuruser();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_icuruser(int32_t value) {
  
  icuruser_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_icuruser(int32_t value) {
  _internal_set_icuruser(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iCurUser)
}

// int32 iCurRoom = 8;
inline void Msg_ServerBattle_BC_Register_Req::clear_icurroom() {
  icurroom_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::_internal_icurroom() const {
  return icurroom_;
}
inline int32_t Msg_ServerBattle_BC_Register_Req::icurroom() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iCurRoom)
  return _internal_icurroom();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_icurroom(int32_t value) {
  
  icurroom_ = value;
}
inline void Msg_ServerBattle_BC_Register_Req::set_icurroom(int32_t value) {
  _internal_set_icurroom(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.iCurRoom)
}

// string strLinkIp = 9;
inline void Msg_ServerBattle_BC_Register_Req::clear_strlinkip() {
  strlinkip_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_BC_Register_Req::strlinkip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp)
  return _internal_strlinkip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_BC_Register_Req::set_strlinkip(ArgT0&& arg0, ArgT... args) {
 
 strlinkip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp)
}
inline std::string* Msg_ServerBattle_BC_Register_Req::mutable_strlinkip() {
  std::string* _s = _internal_mutable_strlinkip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp)
  return _s;
}
inline const std::string& Msg_ServerBattle_BC_Register_Req::_internal_strlinkip() const {
  return strlinkip_.Get();
}
inline void Msg_ServerBattle_BC_Register_Req::_internal_set_strlinkip(const std::string& value) {
  
  strlinkip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Register_Req::_internal_mutable_strlinkip() {
  
  return strlinkip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Register_Req::release_strlinkip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp)
  return strlinkip_.Release();
}
inline void Msg_ServerBattle_BC_Register_Req::set_allocated_strlinkip(std::string* strlinkip) {
  if (strlinkip != nullptr) {
    
  } else {
    
  }
  strlinkip_.SetAllocated(strlinkip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strlinkip_.IsDefault()) {
    strlinkip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_Register_Rsp

// int32 iServerId = 1;
inline void Msg_ServerBattle_BC_Register_Rsp::clear_iserverid() {
  iserverid_ = 0;
}
inline int32_t Msg_ServerBattle_BC_Register_Rsp::_internal_iserverid() const {
  return iserverid_;
}
inline int32_t Msg_ServerBattle_BC_Register_Rsp::iserverid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp.iServerId)
  return _internal_iserverid();
}
inline void Msg_ServerBattle_BC_Register_Rsp::_internal_set_iserverid(int32_t value) {
  
  iserverid_ = value;
}
inline void Msg_ServerBattle_BC_Register_Rsp::set_iserverid(int32_t value) {
  _internal_set_iserverid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp.iServerId)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_CB_CreateRoom_Req

// int64 llRoomId = 1;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_llroomid() {
  llroomid_ = int64_t{0};
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_llroomid() const {
  return llroomid_;
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Req::llroomid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.llRoomId)
  return _internal_llroomid();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_llroomid(int64_t value) {
  
  llroomid_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_llroomid(int64_t value) {
  _internal_set_llroomid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.llRoomId)
}

// .ProtoMsg.ERoomType eType = 2;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_etype() {
  etype_ = 0;
}
inline ::ProtoMsg::ERoomType Msg_ServerBattle_CB_CreateRoom_Req::_internal_etype() const {
  return static_cast< ::ProtoMsg::ERoomType >(etype_);
}
inline ::ProtoMsg::ERoomType Msg_ServerBattle_CB_CreateRoom_Req::etype() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.eType)
  return _internal_etype();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_etype(::ProtoMsg::ERoomType value) {
  
  etype_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_etype(::ProtoMsg::ERoomType value) {
  _internal_set_etype(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.eType)
}

// string strMapName = 3;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_strmapname() {
  strmapname_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Req::strmapname() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName)
  return _internal_strmapname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Req::set_strmapname(ArgT0&& arg0, ArgT... args) {
 
 strmapname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::mutable_strmapname() {
  std::string* _s = _internal_mutable_strmapname();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Req::_internal_strmapname() const {
  return strmapname_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_strmapname(const std::string& value) {
  
  strmapname_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::_internal_mutable_strmapname() {
  
  return strmapname_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::release_strmapname() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName)
  return strmapname_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_allocated_strmapname(std::string* strmapname) {
  if (strmapname != nullptr) {
    
  } else {
    
  }
  strmapname_.SetAllocated(strmapname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strmapname_.IsDefault()) {
    strmapname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName)
}

// int32 iMapId = 4;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_imapid() {
  imapid_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_imapid() const {
  return imapid_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::imapid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iMapId)
  return _internal_imapid();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_imapid(int32_t value) {
  
  imapid_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_imapid(int32_t value) {
  _internal_set_imapid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iMapId)
}

// int32 iMapSec = 5;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_imapsec() {
  imapsec_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_imapsec() const {
  return imapsec_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::imapsec() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iMapSec)
  return _internal_imapsec();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_imapsec(int32_t value) {
  
  imapsec_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_imapsec(int32_t value) {
  _internal_set_imapsec(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iMapSec)
}

// repeated .ProtoMsg.user_battle_info_t vecUserData = 6;
inline int Msg_ServerBattle_CB_CreateRoom_Req::_internal_vecuserdata_size() const {
  return vecuserdata_.size();
}
inline int Msg_ServerBattle_CB_CreateRoom_Req::vecuserdata_size() const {
  return _internal_vecuserdata_size();
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::mutable_vecuserdata(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecUserData)
  return vecuserdata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >*
Msg_ServerBattle_CB_CreateRoom_Req::mutable_vecuserdata() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecUserData)
  return &vecuserdata_;
}
inline const ::ProtoMsg::user_battle_info_t& Msg_ServerBattle_CB_CreateRoom_Req::_internal_vecuserdata(int index) const {
  return vecuserdata_.Get(index);
}
inline const ::ProtoMsg::user_battle_info_t& Msg_ServerBattle_CB_CreateRoom_Req::vecuserdata(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecUserData)
  return _internal_vecuserdata(index);
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::_internal_add_vecuserdata() {
  return vecuserdata_.Add();
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::add_vecuserdata() {
  ::ProtoMsg::user_battle_info_t* _add = _internal_add_vecuserdata();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecUserData)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >&
Msg_ServerBattle_CB_CreateRoom_Req::vecuserdata() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecUserData)
  return vecuserdata_;
}

// string strRoomLogId = 7;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_strroomlogid() {
  strroomlogid_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Req::strroomlogid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId)
  return _internal_strroomlogid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Req::set_strroomlogid(ArgT0&& arg0, ArgT... args) {
 
 strroomlogid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::mutable_strroomlogid() {
  std::string* _s = _internal_mutable_strroomlogid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Req::_internal_strroomlogid() const {
  return strroomlogid_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_strroomlogid(const std::string& value) {
  
  strroomlogid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::_internal_mutable_strroomlogid() {
  
  return strroomlogid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Req::release_strroomlogid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId)
  return strroomlogid_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_allocated_strroomlogid(std::string* strroomlogid) {
  if (strroomlogid != nullptr) {
    
  } else {
    
  }
  strroomlogid_.SetAllocated(strroomlogid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strroomlogid_.IsDefault()) {
    strroomlogid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId)
}

// int32 iInitArea = 8;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_iinitarea() {
  iinitarea_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_iinitarea() const {
  return iinitarea_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::iinitarea() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iInitArea)
  return _internal_iinitarea();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_iinitarea(int32_t value) {
  
  iinitarea_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_iinitarea(int32_t value) {
  _internal_set_iinitarea(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iInitArea)
}

// bool bWaitLst = 9;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_bwaitlst() {
  bwaitlst_ = false;
}
inline bool Msg_ServerBattle_CB_CreateRoom_Req::_internal_bwaitlst() const {
  return bwaitlst_;
}
inline bool Msg_ServerBattle_CB_CreateRoom_Req::bwaitlst() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.bWaitLst)
  return _internal_bwaitlst();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_bwaitlst(bool value) {
  
  bwaitlst_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_bwaitlst(bool value) {
  _internal_set_bwaitlst(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.bWaitLst)
}

// int32 iUserNum = 10;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_iusernum() {
  iusernum_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_iusernum() const {
  return iusernum_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::iusernum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iUserNum)
  return _internal_iusernum();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_iusernum(int32_t value) {
  
  iusernum_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_iusernum(int32_t value) {
  _internal_set_iusernum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iUserNum)
}

// int32 iRobotNum = 11;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_irobotnum() {
  irobotnum_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::_internal_irobotnum() const {
  return irobotnum_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Req::irobotnum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iRobotNum)
  return _internal_irobotnum();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_irobotnum(int32_t value) {
  
  irobotnum_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_irobotnum(int32_t value) {
  _internal_set_irobotnum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.iRobotNum)
}

// repeated .ProtoMsg.user_battle_info_t vecObUserData = 12;
inline int Msg_ServerBattle_CB_CreateRoom_Req::_internal_vecobuserdata_size() const {
  return vecobuserdata_.size();
}
inline int Msg_ServerBattle_CB_CreateRoom_Req::vecobuserdata_size() const {
  return _internal_vecobuserdata_size();
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::mutable_vecobuserdata(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecObUserData)
  return vecobuserdata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >*
Msg_ServerBattle_CB_CreateRoom_Req::mutable_vecobuserdata() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecObUserData)
  return &vecobuserdata_;
}
inline const ::ProtoMsg::user_battle_info_t& Msg_ServerBattle_CB_CreateRoom_Req::_internal_vecobuserdata(int index) const {
  return vecobuserdata_.Get(index);
}
inline const ::ProtoMsg::user_battle_info_t& Msg_ServerBattle_CB_CreateRoom_Req::vecobuserdata(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecObUserData)
  return _internal_vecobuserdata(index);
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::_internal_add_vecobuserdata() {
  return vecobuserdata_.Add();
}
inline ::ProtoMsg::user_battle_info_t* Msg_ServerBattle_CB_CreateRoom_Req::add_vecobuserdata() {
  ::ProtoMsg::user_battle_info_t* _add = _internal_add_vecobuserdata();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecObUserData)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_info_t >&
Msg_ServerBattle_CB_CreateRoom_Req::vecobuserdata() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.vecObUserData)
  return vecobuserdata_;
}

// .ProtoMsg.ELeisureType eLeisureType = 13;
inline void Msg_ServerBattle_CB_CreateRoom_Req::clear_eleisuretype() {
  eleisuretype_ = 0;
}
inline ::ProtoMsg::ELeisureType Msg_ServerBattle_CB_CreateRoom_Req::_internal_eleisuretype() const {
  return static_cast< ::ProtoMsg::ELeisureType >(eleisuretype_);
}
inline ::ProtoMsg::ELeisureType Msg_ServerBattle_CB_CreateRoom_Req::eleisuretype() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.eLeisureType)
  return _internal_eleisuretype();
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::_internal_set_eleisuretype(::ProtoMsg::ELeisureType value) {
  
  eleisuretype_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Req::set_eleisuretype(::ProtoMsg::ELeisureType value) {
  _internal_set_eleisuretype(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.eLeisureType)
}

// -------------------------------------------------------------------

// user_conv_id_t

// int64 llUserid = 1;
inline void user_conv_id_t::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t user_conv_id_t::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t user_conv_id_t::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.user_conv_id_t.llUserid)
  return _internal_lluserid();
}
inline void user_conv_id_t::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void user_conv_id_t::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.user_conv_id_t.llUserid)
}

// int32 iConvId = 2;
inline void user_conv_id_t::clear_iconvid() {
  iconvid_ = 0;
}
inline int32_t user_conv_id_t::_internal_iconvid() const {
  return iconvid_;
}
inline int32_t user_conv_id_t::iconvid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.user_conv_id_t.iConvId)
  return _internal_iconvid();
}
inline void user_conv_id_t::_internal_set_iconvid(int32_t value) {
  
  iconvid_ = value;
}
inline void user_conv_id_t::set_iconvid(int32_t value) {
  _internal_set_iconvid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.user_conv_id_t.iConvId)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_CB_CreateRoom_Rsp

// int64 llRoomId = 1;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_llroomid() {
  llroomid_ = int64_t{0};
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_llroomid() const {
  return llroomid_;
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Rsp::llroomid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.llRoomId)
  return _internal_llroomid();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_llroomid(int64_t value) {
  
  llroomid_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_llroomid(int64_t value) {
  _internal_set_llroomid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.llRoomId)
}

// string strIp = 2;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_strip() {
  strip_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::strip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp)
  return _internal_strip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Rsp::set_strip(ArgT0&& arg0, ArgT... args) {
 
 strip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_strip() {
  std::string* _s = _internal_mutable_strip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_strip() const {
  return strip_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_strip(const std::string& value) {
  
  strip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_mutable_strip() {
  
  return strip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::release_strip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp)
  return strip_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_allocated_strip(std::string* strip) {
  if (strip != nullptr) {
    
  } else {
    
  }
  strip_.SetAllocated(strip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strip_.IsDefault()) {
    strip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp)
}

// int32 iPort = 3;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_iport() {
  iport_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_iport() const {
  return iport_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Rsp::iport() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.iPort)
  return _internal_iport();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_iport(int32_t value) {
  
  iport_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_iport(int32_t value) {
  _internal_set_iport(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.iPort)
}

// .ProtoMsg.ResultCode eCode = 4;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_ecode() {
  ecode_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_ecode() const {
  return static_cast< ::ProtoMsg::ResultCode >(ecode_);
}
inline ::ProtoMsg::ResultCode Msg_ServerBattle_CB_CreateRoom_Rsp::ecode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.eCode)
  return _internal_ecode();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_ecode(::ProtoMsg::ResultCode value) {
  
  ecode_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_ecode(::ProtoMsg::ResultCode value) {
  _internal_set_ecode(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.eCode)
}

// string strRoomLogId = 5;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_strroomlogid() {
  strroomlogid_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::strroomlogid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId)
  return _internal_strroomlogid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Rsp::set_strroomlogid(ArgT0&& arg0, ArgT... args) {
 
 strroomlogid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_strroomlogid() {
  std::string* _s = _internal_mutable_strroomlogid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_strroomlogid() const {
  return strroomlogid_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_strroomlogid(const std::string& value) {
  
  strroomlogid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_mutable_strroomlogid() {
  
  return strroomlogid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::release_strroomlogid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId)
  return strroomlogid_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_allocated_strroomlogid(std::string* strroomlogid) {
  if (strroomlogid != nullptr) {
    
  } else {
    
  }
  strroomlogid_.SetAllocated(strroomlogid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strroomlogid_.IsDefault()) {
    strroomlogid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId)
}

// string strOldLogId = 6;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_stroldlogid() {
  stroldlogid_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::stroldlogid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId)
  return _internal_stroldlogid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Rsp::set_stroldlogid(ArgT0&& arg0, ArgT... args) {
 
 stroldlogid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_stroldlogid() {
  std::string* _s = _internal_mutable_stroldlogid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_stroldlogid() const {
  return stroldlogid_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_stroldlogid(const std::string& value) {
  
  stroldlogid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_mutable_stroldlogid() {
  
  return stroldlogid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::release_stroldlogid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId)
  return stroldlogid_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_allocated_stroldlogid(std::string* stroldlogid) {
  if (stroldlogid != nullptr) {
    
  } else {
    
  }
  stroldlogid_.SetAllocated(stroldlogid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (stroldlogid_.IsDefault()) {
    stroldlogid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId)
}

// int32 iRoomAreaId = 7;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_iroomareaid() {
  iroomareaid_ = 0;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_iroomareaid() const {
  return iroomareaid_;
}
inline int32_t Msg_ServerBattle_CB_CreateRoom_Rsp::iroomareaid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.iRoomAreaId)
  return _internal_iroomareaid();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_iroomareaid(int32_t value) {
  
  iroomareaid_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_iroomareaid(int32_t value) {
  _internal_set_iroomareaid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.iRoomAreaId)
}

// repeated .ProtoMsg.user_conv_id_t vecUserConv = 8;
inline int Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_vecuserconv_size() const {
  return vecuserconv_.size();
}
inline int Msg_ServerBattle_CB_CreateRoom_Rsp::vecuserconv_size() const {
  return _internal_vecuserconv_size();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_vecuserconv() {
  vecuserconv_.Clear();
}
inline ::ProtoMsg::user_conv_id_t* Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_vecuserconv(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.vecUserConv)
  return vecuserconv_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_conv_id_t >*
Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_vecuserconv() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.vecUserConv)
  return &vecuserconv_;
}
inline const ::ProtoMsg::user_conv_id_t& Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_vecuserconv(int index) const {
  return vecuserconv_.Get(index);
}
inline const ::ProtoMsg::user_conv_id_t& Msg_ServerBattle_CB_CreateRoom_Rsp::vecuserconv(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.vecUserConv)
  return _internal_vecuserconv(index);
}
inline ::ProtoMsg::user_conv_id_t* Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_add_vecuserconv() {
  return vecuserconv_.Add();
}
inline ::ProtoMsg::user_conv_id_t* Msg_ServerBattle_CB_CreateRoom_Rsp::add_vecuserconv() {
  ::ProtoMsg::user_conv_id_t* _add = _internal_add_vecuserconv();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.vecUserConv)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_conv_id_t >&
Msg_ServerBattle_CB_CreateRoom_Rsp::vecuserconv() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.vecUserConv)
  return vecuserconv_;
}

// bool bUdp = 9;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_budp() {
  budp_ = false;
}
inline bool Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_budp() const {
  return budp_;
}
inline bool Msg_ServerBattle_CB_CreateRoom_Rsp::budp() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.bUdp)
  return _internal_budp();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_budp(bool value) {
  
  budp_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_budp(bool value) {
  _internal_set_budp(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.bUdp)
}

// int64 llCreateMs = 10;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_llcreatems() {
  llcreatems_ = int64_t{0};
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_llcreatems() const {
  return llcreatems_;
}
inline int64_t Msg_ServerBattle_CB_CreateRoom_Rsp::llcreatems() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.llCreateMs)
  return _internal_llcreatems();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_llcreatems(int64_t value) {
  
  llcreatems_ = value;
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_llcreatems(int64_t value) {
  _internal_set_llcreatems(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.llCreateMs)
}

// string strLinkIp = 11;
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::clear_strlinkip() {
  strlinkip_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::strlinkip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp)
  return _internal_strlinkip();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_CB_CreateRoom_Rsp::set_strlinkip(ArgT0&& arg0, ArgT... args) {
 
 strlinkip_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp)
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::mutable_strlinkip() {
  std::string* _s = _internal_mutable_strlinkip();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp)
  return _s;
}
inline const std::string& Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_strlinkip() const {
  return strlinkip_.Get();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_set_strlinkip(const std::string& value) {
  
  strlinkip_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::_internal_mutable_strlinkip() {
  
  return strlinkip_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_CB_CreateRoom_Rsp::release_strlinkip() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp)
  return strlinkip_.Release();
}
inline void Msg_ServerBattle_CB_CreateRoom_Rsp::set_allocated_strlinkip(std::string* strlinkip) {
  if (strlinkip != nullptr) {
    
  } else {
    
  }
  strlinkip_.SetAllocated(strlinkip, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strlinkip_.IsDefault()) {
    strlinkip_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_Heart_Req

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_Heart_Rsp

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_RoomInfo_Notify

// int64 llRoomId = 1;
inline void Msg_ServerBattle_BC_RoomInfo_Notify::clear_llroomid() {
  llroomid_ = int64_t{0};
}
inline int64_t Msg_ServerBattle_BC_RoomInfo_Notify::_internal_llroomid() const {
  return llroomid_;
}
inline int64_t Msg_ServerBattle_BC_RoomInfo_Notify::llroomid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.llRoomId)
  return _internal_llroomid();
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::_internal_set_llroomid(int64_t value) {
  
  llroomid_ = value;
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::set_llroomid(int64_t value) {
  _internal_set_llroomid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.llRoomId)
}

// .ProtoMsg.ERoomStatus eStatus = 2;
inline void Msg_ServerBattle_BC_RoomInfo_Notify::clear_estatus() {
  estatus_ = 0;
}
inline ::ProtoMsg::ERoomStatus Msg_ServerBattle_BC_RoomInfo_Notify::_internal_estatus() const {
  return static_cast< ::ProtoMsg::ERoomStatus >(estatus_);
}
inline ::ProtoMsg::ERoomStatus Msg_ServerBattle_BC_RoomInfo_Notify::estatus() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.eStatus)
  return _internal_estatus();
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::_internal_set_estatus(::ProtoMsg::ERoomStatus value) {
  
  estatus_ = value;
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::set_estatus(::ProtoMsg::ERoomStatus value) {
  _internal_set_estatus(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.eStatus)
}

// int32 iUserNum = 3;
inline void Msg_ServerBattle_BC_RoomInfo_Notify::clear_iusernum() {
  iusernum_ = 0;
}
inline int32_t Msg_ServerBattle_BC_RoomInfo_Notify::_internal_iusernum() const {
  return iusernum_;
}
inline int32_t Msg_ServerBattle_BC_RoomInfo_Notify::iusernum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.iUserNum)
  return _internal_iusernum();
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::_internal_set_iusernum(int32_t value) {
  
  iusernum_ = value;
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::set_iusernum(int32_t value) {
  _internal_set_iusernum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.iUserNum)
}

// string strRoomLogId = 4;
inline void Msg_ServerBattle_BC_RoomInfo_Notify::clear_strroomlogid() {
  strroomlogid_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_BC_RoomInfo_Notify::strroomlogid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId)
  return _internal_strroomlogid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_BC_RoomInfo_Notify::set_strroomlogid(ArgT0&& arg0, ArgT... args) {
 
 strroomlogid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId)
}
inline std::string* Msg_ServerBattle_BC_RoomInfo_Notify::mutable_strroomlogid() {
  std::string* _s = _internal_mutable_strroomlogid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId)
  return _s;
}
inline const std::string& Msg_ServerBattle_BC_RoomInfo_Notify::_internal_strroomlogid() const {
  return strroomlogid_.Get();
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::_internal_set_strroomlogid(const std::string& value) {
  
  strroomlogid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_RoomInfo_Notify::_internal_mutable_strroomlogid() {
  
  return strroomlogid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_RoomInfo_Notify::release_strroomlogid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId)
  return strroomlogid_.Release();
}
inline void Msg_ServerBattle_BC_RoomInfo_Notify::set_allocated_strroomlogid(std::string* strroomlogid) {
  if (strroomlogid != nullptr) {
    
  } else {
    
  }
  strroomlogid_.SetAllocated(strroomlogid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strroomlogid_.IsDefault()) {
    strroomlogid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_LoadInfo_Notify

// int32 iRoomNum = 1;
inline void Msg_ServerBattle_BC_LoadInfo_Notify::clear_iroomnum() {
  iroomnum_ = 0;
}
inline int32_t Msg_ServerBattle_BC_LoadInfo_Notify::_internal_iroomnum() const {
  return iroomnum_;
}
inline int32_t Msg_ServerBattle_BC_LoadInfo_Notify::iroomnum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify.iRoomNum)
  return _internal_iroomnum();
}
inline void Msg_ServerBattle_BC_LoadInfo_Notify::_internal_set_iroomnum(int32_t value) {
  
  iroomnum_ = value;
}
inline void Msg_ServerBattle_BC_LoadInfo_Notify::set_iroomnum(int32_t value) {
  _internal_set_iroomnum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify.iRoomNum)
}

// int32 iUserNum = 2;
inline void Msg_ServerBattle_BC_LoadInfo_Notify::clear_iusernum() {
  iusernum_ = 0;
}
inline int32_t Msg_ServerBattle_BC_LoadInfo_Notify::_internal_iusernum() const {
  return iusernum_;
}
inline int32_t Msg_ServerBattle_BC_LoadInfo_Notify::iusernum() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify.iUserNum)
  return _internal_iusernum();
}
inline void Msg_ServerBattle_BC_LoadInfo_Notify::_internal_set_iusernum(int32_t value) {
  
  iusernum_ = value;
}
inline void Msg_ServerBattle_BC_LoadInfo_Notify::set_iusernum(int32_t value) {
  _internal_set_iusernum(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify.iUserNum)
}

// -------------------------------------------------------------------

// room_data_t

// .ProtoMsg.ERoomStatus eStatus = 1;
inline void room_data_t::clear_estatus() {
  estatus_ = 0;
}
inline ::ProtoMsg::ERoomStatus room_data_t::_internal_estatus() const {
  return static_cast< ::ProtoMsg::ERoomStatus >(estatus_);
}
inline ::ProtoMsg::ERoomStatus room_data_t::estatus() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.eStatus)
  return _internal_estatus();
}
inline void room_data_t::_internal_set_estatus(::ProtoMsg::ERoomStatus value) {
  
  estatus_ = value;
}
inline void room_data_t::set_estatus(::ProtoMsg::ERoomStatus value) {
  _internal_set_estatus(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.eStatus)
}

// .ProtoMsg.EBRCode eResFail = 2;
inline void room_data_t::clear_eresfail() {
  eresfail_ = 0;
}
inline ::ProtoMsg::EBRCode room_data_t::_internal_eresfail() const {
  return static_cast< ::ProtoMsg::EBRCode >(eresfail_);
}
inline ::ProtoMsg::EBRCode room_data_t::eresfail() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.eResFail)
  return _internal_eresfail();
}
inline void room_data_t::_internal_set_eresfail(::ProtoMsg::EBRCode value) {
  
  eresfail_ = value;
}
inline void room_data_t::set_eresfail(::ProtoMsg::EBRCode value) {
  _internal_set_eresfail(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.eResFail)
}

// int32 iBattleSec = 3;
inline void room_data_t::clear_ibattlesec() {
  ibattlesec_ = 0;
}
inline int32_t room_data_t::_internal_ibattlesec() const {
  return ibattlesec_;
}
inline int32_t room_data_t::ibattlesec() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.iBattleSec)
  return _internal_ibattlesec();
}
inline void room_data_t::_internal_set_ibattlesec(int32_t value) {
  
  ibattlesec_ = value;
}
inline void room_data_t::set_ibattlesec(int32_t value) {
  _internal_set_ibattlesec(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.iBattleSec)
}

// bool bNoFullRes = 4;
inline void room_data_t::clear_bnofullres() {
  bnofullres_ = false;
}
inline bool room_data_t::_internal_bnofullres() const {
  return bnofullres_;
}
inline bool room_data_t::bnofullres() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.bNoFullRes)
  return _internal_bnofullres();
}
inline void room_data_t::_internal_set_bnofullres(bool value) {
  
  bnofullres_ = value;
}
inline void room_data_t::set_bnofullres(bool value) {
  _internal_set_bnofullres(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.bNoFullRes)
}

// int32 iOrderSize = 5;
inline void room_data_t::clear_iordersize() {
  iordersize_ = 0;
}
inline int32_t room_data_t::_internal_iordersize() const {
  return iordersize_;
}
inline int32_t room_data_t::iordersize() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.iOrderSize)
  return _internal_iordersize();
}
inline void room_data_t::_internal_set_iordersize(int32_t value) {
  
  iordersize_ = value;
}
inline void room_data_t::set_iordersize(int32_t value) {
  _internal_set_iordersize(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.iOrderSize)
}

// int64 llMaxFrames = 6;
inline void room_data_t::clear_llmaxframes() {
  llmaxframes_ = int64_t{0};
}
inline int64_t room_data_t::_internal_llmaxframes() const {
  return llmaxframes_;
}
inline int64_t room_data_t::llmaxframes() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.llMaxFrames)
  return _internal_llmaxframes();
}
inline void room_data_t::_internal_set_llmaxframes(int64_t value) {
  
  llmaxframes_ = value;
}
inline void room_data_t::set_llmaxframes(int64_t value) {
  _internal_set_llmaxframes(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.llMaxFrames)
}

// int64 llMinFrames = 7;
inline void room_data_t::clear_llminframes() {
  llminframes_ = int64_t{0};
}
inline int64_t room_data_t::_internal_llminframes() const {
  return llminframes_;
}
inline int64_t room_data_t::llminframes() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.llMinFrames)
  return _internal_llminframes();
}
inline void room_data_t::_internal_set_llminframes(int64_t value) {
  
  llminframes_ = value;
}
inline void room_data_t::set_llminframes(int64_t value) {
  _internal_set_llminframes(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.llMinFrames)
}

// int32 iRoomAreanId = 8;
inline void room_data_t::clear_iroomareanid() {
  iroomareanid_ = 0;
}
inline int32_t room_data_t::_internal_iroomareanid() const {
  return iroomareanid_;
}
inline int32_t room_data_t::iroomareanid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.iRoomAreanId)
  return _internal_iroomareanid();
}
inline void room_data_t::_internal_set_iroomareanid(int32_t value) {
  
  iroomareanid_ = value;
}
inline void room_data_t::set_iroomareanid(int32_t value) {
  _internal_set_iroomareanid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.iRoomAreanId)
}

// bool bHaveDiffRes = 9;
inline void room_data_t::clear_bhavediffres() {
  bhavediffres_ = false;
}
inline bool room_data_t::_internal_bhavediffres() const {
  return bhavediffres_;
}
inline bool room_data_t::bhavediffres() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.room_data_t.bHaveDiffRes)
  return _internal_bhavediffres();
}
inline void room_data_t::_internal_set_bhavediffres(bool value) {
  
  bhavediffres_ = value;
}
inline void room_data_t::set_bhavediffres(bool value) {
  _internal_set_bhavediffres(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.room_data_t.bHaveDiffRes)
}

// -------------------------------------------------------------------

// Msg_ServerBattle_BC_Result_Notify

// int64 llRoomId = 1;
inline void Msg_ServerBattle_BC_Result_Notify::clear_llroomid() {
  llroomid_ = int64_t{0};
}
inline int64_t Msg_ServerBattle_BC_Result_Notify::_internal_llroomid() const {
  return llroomid_;
}
inline int64_t Msg_ServerBattle_BC_Result_Notify::llroomid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.llRoomId)
  return _internal_llroomid();
}
inline void Msg_ServerBattle_BC_Result_Notify::_internal_set_llroomid(int64_t value) {
  
  llroomid_ = value;
}
inline void Msg_ServerBattle_BC_Result_Notify::set_llroomid(int64_t value) {
  _internal_set_llroomid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.llRoomId)
}

// repeated .ProtoMsg.user_battle_result_t vecResult = 2;
inline int Msg_ServerBattle_BC_Result_Notify::_internal_vecresult_size() const {
  return vecresult_.size();
}
inline int Msg_ServerBattle_BC_Result_Notify::vecresult_size() const {
  return _internal_vecresult_size();
}
inline ::ProtoMsg::user_battle_result_t* Msg_ServerBattle_BC_Result_Notify::mutable_vecresult(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.vecResult)
  return vecresult_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_result_t >*
Msg_ServerBattle_BC_Result_Notify::mutable_vecresult() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.vecResult)
  return &vecresult_;
}
inline const ::ProtoMsg::user_battle_result_t& Msg_ServerBattle_BC_Result_Notify::_internal_vecresult(int index) const {
  return vecresult_.Get(index);
}
inline const ::ProtoMsg::user_battle_result_t& Msg_ServerBattle_BC_Result_Notify::vecresult(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.vecResult)
  return _internal_vecresult(index);
}
inline ::ProtoMsg::user_battle_result_t* Msg_ServerBattle_BC_Result_Notify::_internal_add_vecresult() {
  return vecresult_.Add();
}
inline ::ProtoMsg::user_battle_result_t* Msg_ServerBattle_BC_Result_Notify::add_vecresult() {
  ::ProtoMsg::user_battle_result_t* _add = _internal_add_vecresult();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.vecResult)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::user_battle_result_t >&
Msg_ServerBattle_BC_Result_Notify::vecresult() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.vecResult)
  return vecresult_;
}

// .ProtoMsg.room_data_t oRoomData = 3;
inline bool Msg_ServerBattle_BC_Result_Notify::_internal_has_oroomdata() const {
  return this != internal_default_instance() && oroomdata_ != nullptr;
}
inline bool Msg_ServerBattle_BC_Result_Notify::has_oroomdata() const {
  return _internal_has_oroomdata();
}
inline void Msg_ServerBattle_BC_Result_Notify::clear_oroomdata() {
  if (GetArenaForAllocation() == nullptr && oroomdata_ != nullptr) {
    delete oroomdata_;
  }
  oroomdata_ = nullptr;
}
inline const ::ProtoMsg::room_data_t& Msg_ServerBattle_BC_Result_Notify::_internal_oroomdata() const {
  const ::ProtoMsg::room_data_t* p = oroomdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::room_data_t&>(
      ::ProtoMsg::_room_data_t_default_instance_);
}
inline const ::ProtoMsg::room_data_t& Msg_ServerBattle_BC_Result_Notify::oroomdata() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.oRoomData)
  return _internal_oroomdata();
}
inline void Msg_ServerBattle_BC_Result_Notify::unsafe_arena_set_allocated_oroomdata(
    ::ProtoMsg::room_data_t* oroomdata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oroomdata_);
  }
  oroomdata_ = oroomdata;
  if (oroomdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.oRoomData)
}
inline ::ProtoMsg::room_data_t* Msg_ServerBattle_BC_Result_Notify::release_oroomdata() {
  
  ::ProtoMsg::room_data_t* temp = oroomdata_;
  oroomdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::room_data_t* Msg_ServerBattle_BC_Result_Notify::unsafe_arena_release_oroomdata() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.oRoomData)
  
  ::ProtoMsg::room_data_t* temp = oroomdata_;
  oroomdata_ = nullptr;
  return temp;
}
inline ::ProtoMsg::room_data_t* Msg_ServerBattle_BC_Result_Notify::_internal_mutable_oroomdata() {
  
  if (oroomdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::room_data_t>(GetArenaForAllocation());
    oroomdata_ = p;
  }
  return oroomdata_;
}
inline ::ProtoMsg::room_data_t* Msg_ServerBattle_BC_Result_Notify::mutable_oroomdata() {
  ::ProtoMsg::room_data_t* _msg = _internal_mutable_oroomdata();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.oRoomData)
  return _msg;
}
inline void Msg_ServerBattle_BC_Result_Notify::set_allocated_oroomdata(::ProtoMsg::room_data_t* oroomdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete oroomdata_;
  }
  if (oroomdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(oroomdata);
    if (message_arena != submessage_arena) {
      oroomdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oroomdata, submessage_arena);
    }
    
  } else {
    
  }
  oroomdata_ = oroomdata;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.oRoomData)
}

// string strRoomLogId = 4;
inline void Msg_ServerBattle_BC_Result_Notify::clear_strroomlogid() {
  strroomlogid_.ClearToEmpty();
}
inline const std::string& Msg_ServerBattle_BC_Result_Notify::strroomlogid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId)
  return _internal_strroomlogid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_ServerBattle_BC_Result_Notify::set_strroomlogid(ArgT0&& arg0, ArgT... args) {
 
 strroomlogid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId)
}
inline std::string* Msg_ServerBattle_BC_Result_Notify::mutable_strroomlogid() {
  std::string* _s = _internal_mutable_strroomlogid();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId)
  return _s;
}
inline const std::string& Msg_ServerBattle_BC_Result_Notify::_internal_strroomlogid() const {
  return strroomlogid_.Get();
}
inline void Msg_ServerBattle_BC_Result_Notify::_internal_set_strroomlogid(const std::string& value) {
  
  strroomlogid_.Set(value, GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Result_Notify::_internal_mutable_strroomlogid() {
  
  return strroomlogid_.Mutable(GetArenaForAllocation());
}
inline std::string* Msg_ServerBattle_BC_Result_Notify::release_strroomlogid() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId)
  return strroomlogid_.Release();
}
inline void Msg_ServerBattle_BC_Result_Notify::set_allocated_strroomlogid(std::string* strroomlogid) {
  if (strroomlogid != nullptr) {
    
  } else {
    
  }
  strroomlogid_.SetAllocated(strroomlogid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strroomlogid_.IsDefault()) {
    strroomlogid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoMsg::MsgModule_ServerBattle_MsgCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MsgModule_ServerBattle_MsgCmd>() {
  return ::ProtoMsg::MsgModule_ServerBattle_MsgCmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverbattle_2eproto
