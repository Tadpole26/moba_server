// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_serverdb.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverdb_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverdb_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "result_code.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fmodule_5fserverdb_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmodule_5fserverdb_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fmodule_5fserverdb_2eproto;
namespace ProtoMsg {
class MsgModule_ServerDB;
struct MsgModule_ServerDBDefaultTypeInternal;
extern MsgModule_ServerDBDefaultTypeInternal _MsgModule_ServerDB_default_instance_;
class Msg_ServerDB_GD_CreateUser_Req;
struct Msg_ServerDB_GD_CreateUser_ReqDefaultTypeInternal;
extern Msg_ServerDB_GD_CreateUser_ReqDefaultTypeInternal _Msg_ServerDB_GD_CreateUser_Req_default_instance_;
class Msg_ServerDB_GD_CreateUser_Rsp;
struct Msg_ServerDB_GD_CreateUser_RspDefaultTypeInternal;
extern Msg_ServerDB_GD_CreateUser_RspDefaultTypeInternal _Msg_ServerDB_GD_CreateUser_Rsp_default_instance_;
class Msg_ServerDB_GD_GetUserInfo_Req;
struct Msg_ServerDB_GD_GetUserInfo_ReqDefaultTypeInternal;
extern Msg_ServerDB_GD_GetUserInfo_ReqDefaultTypeInternal _Msg_ServerDB_GD_GetUserInfo_Req_default_instance_;
class Msg_ServerDB_GD_GetUserInfo_Rsp;
struct Msg_ServerDB_GD_GetUserInfo_RspDefaultTypeInternal;
extern Msg_ServerDB_GD_GetUserInfo_RspDefaultTypeInternal _Msg_ServerDB_GD_GetUserInfo_Rsp_default_instance_;
class Msg_ServerDB_GD_UpdateBaseInfo;
struct Msg_ServerDB_GD_UpdateBaseInfoDefaultTypeInternal;
extern Msg_ServerDB_GD_UpdateBaseInfoDefaultTypeInternal _Msg_ServerDB_GD_UpdateBaseInfo_default_instance_;
class ServerDB_BaseInfo;
struct ServerDB_BaseInfoDefaultTypeInternal;
extern ServerDB_BaseInfoDefaultTypeInternal _ServerDB_BaseInfo_default_instance_;
class buff_data_t;
struct buff_data_tDefaultTypeInternal;
extern buff_data_tDefaultTypeInternal _buff_data_t_default_instance_;
class user_pb_data_t;
struct user_pb_data_tDefaultTypeInternal;
extern user_pb_data_tDefaultTypeInternal _user_pb_data_t_default_instance_;
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMsg::MsgModule_ServerDB* Arena::CreateMaybeMessage<::ProtoMsg::MsgModule_ServerDB>(Arena*);
template<> ::ProtoMsg::Msg_ServerDB_GD_CreateUser_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerDB_GD_CreateUser_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerDB_GD_CreateUser_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerDB_GD_CreateUser_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerDB_GD_GetUserInfo_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerDB_GD_GetUserInfo_Req>(Arena*);
template<> ::ProtoMsg::Msg_ServerDB_GD_GetUserInfo_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerDB_GD_GetUserInfo_Rsp>(Arena*);
template<> ::ProtoMsg::Msg_ServerDB_GD_UpdateBaseInfo* Arena::CreateMaybeMessage<::ProtoMsg::Msg_ServerDB_GD_UpdateBaseInfo>(Arena*);
template<> ::ProtoMsg::ServerDB_BaseInfo* Arena::CreateMaybeMessage<::ProtoMsg::ServerDB_BaseInfo>(Arena*);
template<> ::ProtoMsg::buff_data_t* Arena::CreateMaybeMessage<::ProtoMsg::buff_data_t>(Arena*);
template<> ::ProtoMsg::user_pb_data_t* Arena::CreateMaybeMessage<::ProtoMsg::user_pb_data_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMsg {

enum MsgModule_ServerDB_MsgCmd : int {
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_None = 0,
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_GetUserInfo_Req = 1,
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_GetUserInfo_Rsp = 2,
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_CreateUser_Req = 3,
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_CreateUser_Rsp = 4,
  MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_UpdateBaseInfo = 5,
  MsgModule_ServerDB_MsgCmd_MsgModule_ServerDB_MsgCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgModule_ServerDB_MsgCmd_MsgModule_ServerDB_MsgCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgModule_ServerDB_MsgCmd_IsValid(int value);
constexpr MsgModule_ServerDB_MsgCmd MsgModule_ServerDB_MsgCmd_MsgCmd_MIN = MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_None;
constexpr MsgModule_ServerDB_MsgCmd MsgModule_ServerDB_MsgCmd_MsgCmd_MAX = MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_UpdateBaseInfo;
constexpr int MsgModule_ServerDB_MsgCmd_MsgCmd_ARRAYSIZE = MsgModule_ServerDB_MsgCmd_MsgCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_ServerDB_MsgCmd_descriptor();
template<typename T>
inline const std::string& MsgModule_ServerDB_MsgCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgModule_ServerDB_MsgCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgModule_ServerDB_MsgCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgModule_ServerDB_MsgCmd_descriptor(), enum_t_value);
}
inline bool MsgModule_ServerDB_MsgCmd_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgModule_ServerDB_MsgCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgModule_ServerDB_MsgCmd>(
    MsgModule_ServerDB_MsgCmd_descriptor(), name, value);
}
// ===================================================================

class MsgModule_ServerDB final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.MsgModule_ServerDB) */ {
 public:
  inline MsgModule_ServerDB() : MsgModule_ServerDB(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgModule_ServerDB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgModule_ServerDB(const MsgModule_ServerDB& from);
  MsgModule_ServerDB(MsgModule_ServerDB&& from) noexcept
    : MsgModule_ServerDB() {
    *this = ::std::move(from);
  }

  inline MsgModule_ServerDB& operator=(const MsgModule_ServerDB& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModule_ServerDB& operator=(MsgModule_ServerDB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgModule_ServerDB& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgModule_ServerDB* internal_default_instance() {
    return reinterpret_cast<const MsgModule_ServerDB*>(
               &_MsgModule_ServerDB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgModule_ServerDB& a, MsgModule_ServerDB& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModule_ServerDB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModule_ServerDB* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgModule_ServerDB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgModule_ServerDB>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgModule_ServerDB& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgModule_ServerDB& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.MsgModule_ServerDB";
  }
  protected:
  explicit MsgModule_ServerDB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgModule_ServerDB_MsgCmd MsgCmd;
  static constexpr MsgCmd Msg_ServerDB_GD_None =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_None;
  static constexpr MsgCmd Msg_ServerDB_GD_GetUserInfo_Req =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_GetUserInfo_Req;
  static constexpr MsgCmd Msg_ServerDB_GD_GetUserInfo_Rsp =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_GetUserInfo_Rsp;
  static constexpr MsgCmd Msg_ServerDB_GD_CreateUser_Req =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_CreateUser_Req;
  static constexpr MsgCmd Msg_ServerDB_GD_CreateUser_Rsp =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_CreateUser_Rsp;
  static constexpr MsgCmd Msg_ServerDB_GD_UpdateBaseInfo =
    MsgModule_ServerDB_MsgCmd_Msg_ServerDB_GD_UpdateBaseInfo;
  static inline bool MsgCmd_IsValid(int value) {
    return MsgModule_ServerDB_MsgCmd_IsValid(value);
  }
  static constexpr MsgCmd MsgCmd_MIN =
    MsgModule_ServerDB_MsgCmd_MsgCmd_MIN;
  static constexpr MsgCmd MsgCmd_MAX =
    MsgModule_ServerDB_MsgCmd_MsgCmd_MAX;
  static constexpr int MsgCmd_ARRAYSIZE =
    MsgModule_ServerDB_MsgCmd_MsgCmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgCmd_descriptor() {
    return MsgModule_ServerDB_MsgCmd_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgCmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgCmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgCmd_Name.");
    return MsgModule_ServerDB_MsgCmd_Name(enum_t_value);
  }
  static inline bool MsgCmd_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgCmd* value) {
    return MsgModule_ServerDB_MsgCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MsgModule_ServerDB)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class ServerDB_BaseInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.ServerDB_BaseInfo) */ {
 public:
  inline ServerDB_BaseInfo() : ServerDB_BaseInfo(nullptr) {}
  ~ServerDB_BaseInfo() override;
  explicit PROTOBUF_CONSTEXPR ServerDB_BaseInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerDB_BaseInfo(const ServerDB_BaseInfo& from);
  ServerDB_BaseInfo(ServerDB_BaseInfo&& from) noexcept
    : ServerDB_BaseInfo() {
    *this = ::std::move(from);
  }

  inline ServerDB_BaseInfo& operator=(const ServerDB_BaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerDB_BaseInfo& operator=(ServerDB_BaseInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerDB_BaseInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerDB_BaseInfo* internal_default_instance() {
    return reinterpret_cast<const ServerDB_BaseInfo*>(
               &_ServerDB_BaseInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ServerDB_BaseInfo& a, ServerDB_BaseInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerDB_BaseInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerDB_BaseInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerDB_BaseInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerDB_BaseInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerDB_BaseInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ServerDB_BaseInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerDB_BaseInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.ServerDB_BaseInfo";
  }
  protected:
  explicit ServerDB_BaseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrAccountFieldNumber = 2,
    kStrUserNickFieldNumber = 3,
    kLlUserIdFieldNumber = 1,
    kIGenderFieldNumber = 4,
    kIUserLevelFieldNumber = 5,
    kLlCreateTimeFieldNumber = 7,
    kLlLoginTimeFieldNumber = 8,
    kLlLogoutTimeFieldNumber = 9,
    kIUserExpFieldNumber = 6,
  };
  // string strAccount = 2;
  void clear_straccount();
  const std::string& straccount() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_straccount(ArgT0&& arg0, ArgT... args);
  std::string* mutable_straccount();
  PROTOBUF_NODISCARD std::string* release_straccount();
  void set_allocated_straccount(std::string* straccount);
  private:
  const std::string& _internal_straccount() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_straccount(const std::string& value);
  std::string* _internal_mutable_straccount();
  public:

  // string strUserNick = 3;
  void clear_strusernick();
  const std::string& strusernick() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strusernick(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strusernick();
  PROTOBUF_NODISCARD std::string* release_strusernick();
  void set_allocated_strusernick(std::string* strusernick);
  private:
  const std::string& _internal_strusernick() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strusernick(const std::string& value);
  std::string* _internal_mutable_strusernick();
  public:

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // int32 iGender = 4;
  void clear_igender();
  int32_t igender() const;
  void set_igender(int32_t value);
  private:
  int32_t _internal_igender() const;
  void _internal_set_igender(int32_t value);
  public:

  // int32 iUserLevel = 5;
  void clear_iuserlevel();
  int32_t iuserlevel() const;
  void set_iuserlevel(int32_t value);
  private:
  int32_t _internal_iuserlevel() const;
  void _internal_set_iuserlevel(int32_t value);
  public:

  // int64 llCreateTime = 7;
  void clear_llcreatetime();
  int64_t llcreatetime() const;
  void set_llcreatetime(int64_t value);
  private:
  int64_t _internal_llcreatetime() const;
  void _internal_set_llcreatetime(int64_t value);
  public:

  // int64 llLoginTime = 8;
  void clear_lllogintime();
  int64_t lllogintime() const;
  void set_lllogintime(int64_t value);
  private:
  int64_t _internal_lllogintime() const;
  void _internal_set_lllogintime(int64_t value);
  public:

  // int64 llLogoutTime = 9;
  void clear_lllogouttime();
  int64_t lllogouttime() const;
  void set_lllogouttime(int64_t value);
  private:
  int64_t _internal_lllogouttime() const;
  void _internal_set_lllogouttime(int64_t value);
  public:

  // int32 iUserExp = 6;
  void clear_iuserexp();
  int32_t iuserexp() const;
  void set_iuserexp(int32_t value);
  private:
  int32_t _internal_iuserexp() const;
  void _internal_set_iuserexp(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.ServerDB_BaseInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr straccount_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strusernick_;
  int64_t lluserid_;
  int32_t igender_;
  int32_t iuserlevel_;
  int64_t llcreatetime_;
  int64_t lllogintime_;
  int64_t lllogouttime_;
  int32_t iuserexp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class user_pb_data_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.user_pb_data_t) */ {
 public:
  inline user_pb_data_t() : user_pb_data_t(nullptr) {}
  ~user_pb_data_t() override;
  explicit PROTOBUF_CONSTEXPR user_pb_data_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  user_pb_data_t(const user_pb_data_t& from);
  user_pb_data_t(user_pb_data_t&& from) noexcept
    : user_pb_data_t() {
    *this = ::std::move(from);
  }

  inline user_pb_data_t& operator=(const user_pb_data_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline user_pb_data_t& operator=(user_pb_data_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const user_pb_data_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const user_pb_data_t* internal_default_instance() {
    return reinterpret_cast<const user_pb_data_t*>(
               &_user_pb_data_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(user_pb_data_t& a, user_pb_data_t& b) {
    a.Swap(&b);
  }
  inline void Swap(user_pb_data_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(user_pb_data_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  user_pb_data_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<user_pb_data_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const user_pb_data_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const user_pb_data_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(user_pb_data_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.user_pb_data_t";
  }
  protected:
  explicit user_pb_data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOBaseInfoFieldNumber = 2,
    kLlUserIdFieldNumber = 1,
  };
  // .ProtoMsg.ServerDB_BaseInfo oBaseInfo = 2;
  bool has_obaseinfo() const;
  private:
  bool _internal_has_obaseinfo() const;
  public:
  void clear_obaseinfo();
  const ::ProtoMsg::ServerDB_BaseInfo& obaseinfo() const;
  PROTOBUF_NODISCARD ::ProtoMsg::ServerDB_BaseInfo* release_obaseinfo();
  ::ProtoMsg::ServerDB_BaseInfo* mutable_obaseinfo();
  void set_allocated_obaseinfo(::ProtoMsg::ServerDB_BaseInfo* obaseinfo);
  private:
  const ::ProtoMsg::ServerDB_BaseInfo& _internal_obaseinfo() const;
  ::ProtoMsg::ServerDB_BaseInfo* _internal_mutable_obaseinfo();
  public:
  void unsafe_arena_set_allocated_obaseinfo(
      ::ProtoMsg::ServerDB_BaseInfo* obaseinfo);
  ::ProtoMsg::ServerDB_BaseInfo* unsafe_arena_release_obaseinfo();

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.user_pb_data_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::ProtoMsg::ServerDB_BaseInfo* obaseinfo_;
  int64_t lluserid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class buff_data_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.buff_data_t) */ {
 public:
  inline buff_data_t() : buff_data_t(nullptr) {}
  ~buff_data_t() override;
  explicit PROTOBUF_CONSTEXPR buff_data_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  buff_data_t(const buff_data_t& from);
  buff_data_t(buff_data_t&& from) noexcept
    : buff_data_t() {
    *this = ::std::move(from);
  }

  inline buff_data_t& operator=(const buff_data_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline buff_data_t& operator=(buff_data_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const buff_data_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const buff_data_t* internal_default_instance() {
    return reinterpret_cast<const buff_data_t*>(
               &_buff_data_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(buff_data_t& a, buff_data_t& b) {
    a.Swap(&b);
  }
  inline void Swap(buff_data_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(buff_data_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  buff_data_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<buff_data_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const buff_data_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const buff_data_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(buff_data_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.buff_data_t";
  }
  protected:
  explicit buff_data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrBuffDataFieldNumber = 1,
    kIDataLenFieldNumber = 2,
    kBZipFieldNumber = 3,
  };
  // bytes strBuffData = 1;
  void clear_strbuffdata();
  const std::string& strbuffdata() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strbuffdata(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strbuffdata();
  PROTOBUF_NODISCARD std::string* release_strbuffdata();
  void set_allocated_strbuffdata(std::string* strbuffdata);
  private:
  const std::string& _internal_strbuffdata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strbuffdata(const std::string& value);
  std::string* _internal_mutable_strbuffdata();
  public:

  // int32 iDataLen = 2;
  void clear_idatalen();
  int32_t idatalen() const;
  void set_idatalen(int32_t value);
  private:
  int32_t _internal_idatalen() const;
  void _internal_set_idatalen(int32_t value);
  public:

  // bool bZip = 3;
  void clear_bzip();
  bool bzip() const;
  void set_bzip(bool value);
  private:
  bool _internal_bzip() const;
  void _internal_set_bzip(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.buff_data_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strbuffdata_;
  int32_t idatalen_;
  bool bzip_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerDB_GD_GetUserInfo_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Req) */ {
 public:
  inline Msg_ServerDB_GD_GetUserInfo_Req() : Msg_ServerDB_GD_GetUserInfo_Req(nullptr) {}
  ~Msg_ServerDB_GD_GetUserInfo_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerDB_GD_GetUserInfo_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerDB_GD_GetUserInfo_Req(const Msg_ServerDB_GD_GetUserInfo_Req& from);
  Msg_ServerDB_GD_GetUserInfo_Req(Msg_ServerDB_GD_GetUserInfo_Req&& from) noexcept
    : Msg_ServerDB_GD_GetUserInfo_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerDB_GD_GetUserInfo_Req& operator=(const Msg_ServerDB_GD_GetUserInfo_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerDB_GD_GetUserInfo_Req& operator=(Msg_ServerDB_GD_GetUserInfo_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerDB_GD_GetUserInfo_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerDB_GD_GetUserInfo_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerDB_GD_GetUserInfo_Req*>(
               &_Msg_ServerDB_GD_GetUserInfo_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Msg_ServerDB_GD_GetUserInfo_Req& a, Msg_ServerDB_GD_GetUserInfo_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerDB_GD_GetUserInfo_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerDB_GD_GetUserInfo_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerDB_GD_GetUserInfo_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerDB_GD_GetUserInfo_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerDB_GD_GetUserInfo_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerDB_GD_GetUserInfo_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerDB_GD_GetUserInfo_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Req";
  }
  protected:
  explicit Msg_ServerDB_GD_GetUserInfo_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUserIdFieldNumber = 1,
  };
  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t lluserid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerDB_GD_GetUserInfo_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp) */ {
 public:
  inline Msg_ServerDB_GD_GetUserInfo_Rsp() : Msg_ServerDB_GD_GetUserInfo_Rsp(nullptr) {}
  ~Msg_ServerDB_GD_GetUserInfo_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerDB_GD_GetUserInfo_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerDB_GD_GetUserInfo_Rsp(const Msg_ServerDB_GD_GetUserInfo_Rsp& from);
  Msg_ServerDB_GD_GetUserInfo_Rsp(Msg_ServerDB_GD_GetUserInfo_Rsp&& from) noexcept
    : Msg_ServerDB_GD_GetUserInfo_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerDB_GD_GetUserInfo_Rsp& operator=(const Msg_ServerDB_GD_GetUserInfo_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerDB_GD_GetUserInfo_Rsp& operator=(Msg_ServerDB_GD_GetUserInfo_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerDB_GD_GetUserInfo_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerDB_GD_GetUserInfo_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerDB_GD_GetUserInfo_Rsp*>(
               &_Msg_ServerDB_GD_GetUserInfo_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Msg_ServerDB_GD_GetUserInfo_Rsp& a, Msg_ServerDB_GD_GetUserInfo_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerDB_GD_GetUserInfo_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerDB_GD_GetUserInfo_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerDB_GD_GetUserInfo_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerDB_GD_GetUserInfo_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerDB_GD_GetUserInfo_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerDB_GD_GetUserInfo_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerDB_GD_GetUserInfo_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp";
  }
  protected:
  explicit Msg_ServerDB_GD_GetUserInfo_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOUserDataFieldNumber = 1,
    kLlUserIdFieldNumber = 2,
    kECodeFieldNumber = 3,
  };
  // .ProtoMsg.buff_data_t oUserData = 1;
  bool has_ouserdata() const;
  private:
  bool _internal_has_ouserdata() const;
  public:
  void clear_ouserdata();
  const ::ProtoMsg::buff_data_t& ouserdata() const;
  PROTOBUF_NODISCARD ::ProtoMsg::buff_data_t* release_ouserdata();
  ::ProtoMsg::buff_data_t* mutable_ouserdata();
  void set_allocated_ouserdata(::ProtoMsg::buff_data_t* ouserdata);
  private:
  const ::ProtoMsg::buff_data_t& _internal_ouserdata() const;
  ::ProtoMsg::buff_data_t* _internal_mutable_ouserdata();
  public:
  void unsafe_arena_set_allocated_ouserdata(
      ::ProtoMsg::buff_data_t* ouserdata);
  ::ProtoMsg::buff_data_t* unsafe_arena_release_ouserdata();

  // int64 llUserId = 2;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eCode = 3;
  void clear_ecode();
  ::ProtoMsg::ResultCode ecode() const;
  void set_ecode(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_ecode() const;
  void _internal_set_ecode(::ProtoMsg::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::ProtoMsg::buff_data_t* ouserdata_;
  int64_t lluserid_;
  int ecode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerDB_GD_CreateUser_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerDB_GD_CreateUser_Req) */ {
 public:
  inline Msg_ServerDB_GD_CreateUser_Req() : Msg_ServerDB_GD_CreateUser_Req(nullptr) {}
  ~Msg_ServerDB_GD_CreateUser_Req() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerDB_GD_CreateUser_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerDB_GD_CreateUser_Req(const Msg_ServerDB_GD_CreateUser_Req& from);
  Msg_ServerDB_GD_CreateUser_Req(Msg_ServerDB_GD_CreateUser_Req&& from) noexcept
    : Msg_ServerDB_GD_CreateUser_Req() {
    *this = ::std::move(from);
  }

  inline Msg_ServerDB_GD_CreateUser_Req& operator=(const Msg_ServerDB_GD_CreateUser_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerDB_GD_CreateUser_Req& operator=(Msg_ServerDB_GD_CreateUser_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerDB_GD_CreateUser_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerDB_GD_CreateUser_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerDB_GD_CreateUser_Req*>(
               &_Msg_ServerDB_GD_CreateUser_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Msg_ServerDB_GD_CreateUser_Req& a, Msg_ServerDB_GD_CreateUser_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerDB_GD_CreateUser_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerDB_GD_CreateUser_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerDB_GD_CreateUser_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerDB_GD_CreateUser_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerDB_GD_CreateUser_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerDB_GD_CreateUser_Req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerDB_GD_CreateUser_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerDB_GD_CreateUser_Req";
  }
  protected:
  explicit Msg_ServerDB_GD_CreateUser_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUserIdFieldNumber = 1,
  };
  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerDB_GD_CreateUser_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t lluserid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerDB_GD_CreateUser_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp) */ {
 public:
  inline Msg_ServerDB_GD_CreateUser_Rsp() : Msg_ServerDB_GD_CreateUser_Rsp(nullptr) {}
  ~Msg_ServerDB_GD_CreateUser_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerDB_GD_CreateUser_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerDB_GD_CreateUser_Rsp(const Msg_ServerDB_GD_CreateUser_Rsp& from);
  Msg_ServerDB_GD_CreateUser_Rsp(Msg_ServerDB_GD_CreateUser_Rsp&& from) noexcept
    : Msg_ServerDB_GD_CreateUser_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_ServerDB_GD_CreateUser_Rsp& operator=(const Msg_ServerDB_GD_CreateUser_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerDB_GD_CreateUser_Rsp& operator=(Msg_ServerDB_GD_CreateUser_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerDB_GD_CreateUser_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerDB_GD_CreateUser_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerDB_GD_CreateUser_Rsp*>(
               &_Msg_ServerDB_GD_CreateUser_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_ServerDB_GD_CreateUser_Rsp& a, Msg_ServerDB_GD_CreateUser_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerDB_GD_CreateUser_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerDB_GD_CreateUser_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerDB_GD_CreateUser_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerDB_GD_CreateUser_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerDB_GD_CreateUser_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerDB_GD_CreateUser_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerDB_GD_CreateUser_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp";
  }
  protected:
  explicit Msg_ServerDB_GD_CreateUser_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLlUserIdFieldNumber = 2,
    kECodeFieldNumber = 1,
  };
  // int64 llUserId = 2;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // .ProtoMsg.ResultCode eCode = 1;
  void clear_ecode();
  ::ProtoMsg::ResultCode ecode() const;
  void set_ecode(::ProtoMsg::ResultCode value);
  private:
  ::ProtoMsg::ResultCode _internal_ecode() const;
  void _internal_set_ecode(::ProtoMsg::ResultCode value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t lluserid_;
  int ecode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// -------------------------------------------------------------------

class Msg_ServerDB_GD_UpdateBaseInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo) */ {
 public:
  inline Msg_ServerDB_GD_UpdateBaseInfo() : Msg_ServerDB_GD_UpdateBaseInfo(nullptr) {}
  ~Msg_ServerDB_GD_UpdateBaseInfo() override;
  explicit PROTOBUF_CONSTEXPR Msg_ServerDB_GD_UpdateBaseInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_ServerDB_GD_UpdateBaseInfo(const Msg_ServerDB_GD_UpdateBaseInfo& from);
  Msg_ServerDB_GD_UpdateBaseInfo(Msg_ServerDB_GD_UpdateBaseInfo&& from) noexcept
    : Msg_ServerDB_GD_UpdateBaseInfo() {
    *this = ::std::move(from);
  }

  inline Msg_ServerDB_GD_UpdateBaseInfo& operator=(const Msg_ServerDB_GD_UpdateBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_ServerDB_GD_UpdateBaseInfo& operator=(Msg_ServerDB_GD_UpdateBaseInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_ServerDB_GD_UpdateBaseInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_ServerDB_GD_UpdateBaseInfo* internal_default_instance() {
    return reinterpret_cast<const Msg_ServerDB_GD_UpdateBaseInfo*>(
               &_Msg_ServerDB_GD_UpdateBaseInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg_ServerDB_GD_UpdateBaseInfo& a, Msg_ServerDB_GD_UpdateBaseInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_ServerDB_GD_UpdateBaseInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_ServerDB_GD_UpdateBaseInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_ServerDB_GD_UpdateBaseInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_ServerDB_GD_UpdateBaseInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_ServerDB_GD_UpdateBaseInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_ServerDB_GD_UpdateBaseInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_ServerDB_GD_UpdateBaseInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo";
  }
  protected:
  explicit Msg_ServerDB_GD_UpdateBaseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOInfoFieldNumber = 2,
    kLlUserIdFieldNumber = 1,
  };
  // .ProtoMsg.ServerDB_BaseInfo oInfo = 2;
  bool has_oinfo() const;
  private:
  bool _internal_has_oinfo() const;
  public:
  void clear_oinfo();
  const ::ProtoMsg::ServerDB_BaseInfo& oinfo() const;
  PROTOBUF_NODISCARD ::ProtoMsg::ServerDB_BaseInfo* release_oinfo();
  ::ProtoMsg::ServerDB_BaseInfo* mutable_oinfo();
  void set_allocated_oinfo(::ProtoMsg::ServerDB_BaseInfo* oinfo);
  private:
  const ::ProtoMsg::ServerDB_BaseInfo& _internal_oinfo() const;
  ::ProtoMsg::ServerDB_BaseInfo* _internal_mutable_oinfo();
  public:
  void unsafe_arena_set_allocated_oinfo(
      ::ProtoMsg::ServerDB_BaseInfo* oinfo);
  ::ProtoMsg::ServerDB_BaseInfo* unsafe_arena_release_oinfo();

  // int64 llUserId = 1;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::ProtoMsg::ServerDB_BaseInfo* oinfo_;
  int64_t lluserid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5fserverdb_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgModule_ServerDB

// -------------------------------------------------------------------

// ServerDB_BaseInfo

// int64 llUserId = 1;
inline void ServerDB_BaseInfo::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t ServerDB_BaseInfo::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t ServerDB_BaseInfo::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.llUserId)
  return _internal_lluserid();
}
inline void ServerDB_BaseInfo::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void ServerDB_BaseInfo::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.llUserId)
}

// string strAccount = 2;
inline void ServerDB_BaseInfo::clear_straccount() {
  straccount_.ClearToEmpty();
}
inline const std::string& ServerDB_BaseInfo::straccount() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.strAccount)
  return _internal_straccount();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerDB_BaseInfo::set_straccount(ArgT0&& arg0, ArgT... args) {
 
 straccount_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.strAccount)
}
inline std::string* ServerDB_BaseInfo::mutable_straccount() {
  std::string* _s = _internal_mutable_straccount();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.ServerDB_BaseInfo.strAccount)
  return _s;
}
inline const std::string& ServerDB_BaseInfo::_internal_straccount() const {
  return straccount_.Get();
}
inline void ServerDB_BaseInfo::_internal_set_straccount(const std::string& value) {
  
  straccount_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerDB_BaseInfo::_internal_mutable_straccount() {
  
  return straccount_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerDB_BaseInfo::release_straccount() {
  // @@protoc_insertion_point(field_release:ProtoMsg.ServerDB_BaseInfo.strAccount)
  return straccount_.Release();
}
inline void ServerDB_BaseInfo::set_allocated_straccount(std::string* straccount) {
  if (straccount != nullptr) {
    
  } else {
    
  }
  straccount_.SetAllocated(straccount, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (straccount_.IsDefault()) {
    straccount_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.ServerDB_BaseInfo.strAccount)
}

// string strUserNick = 3;
inline void ServerDB_BaseInfo::clear_strusernick() {
  strusernick_.ClearToEmpty();
}
inline const std::string& ServerDB_BaseInfo::strusernick() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.strUserNick)
  return _internal_strusernick();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ServerDB_BaseInfo::set_strusernick(ArgT0&& arg0, ArgT... args) {
 
 strusernick_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.strUserNick)
}
inline std::string* ServerDB_BaseInfo::mutable_strusernick() {
  std::string* _s = _internal_mutable_strusernick();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.ServerDB_BaseInfo.strUserNick)
  return _s;
}
inline const std::string& ServerDB_BaseInfo::_internal_strusernick() const {
  return strusernick_.Get();
}
inline void ServerDB_BaseInfo::_internal_set_strusernick(const std::string& value) {
  
  strusernick_.Set(value, GetArenaForAllocation());
}
inline std::string* ServerDB_BaseInfo::_internal_mutable_strusernick() {
  
  return strusernick_.Mutable(GetArenaForAllocation());
}
inline std::string* ServerDB_BaseInfo::release_strusernick() {
  // @@protoc_insertion_point(field_release:ProtoMsg.ServerDB_BaseInfo.strUserNick)
  return strusernick_.Release();
}
inline void ServerDB_BaseInfo::set_allocated_strusernick(std::string* strusernick) {
  if (strusernick != nullptr) {
    
  } else {
    
  }
  strusernick_.SetAllocated(strusernick, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strusernick_.IsDefault()) {
    strusernick_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.ServerDB_BaseInfo.strUserNick)
}

// int32 iGender = 4;
inline void ServerDB_BaseInfo::clear_igender() {
  igender_ = 0;
}
inline int32_t ServerDB_BaseInfo::_internal_igender() const {
  return igender_;
}
inline int32_t ServerDB_BaseInfo::igender() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.iGender)
  return _internal_igender();
}
inline void ServerDB_BaseInfo::_internal_set_igender(int32_t value) {
  
  igender_ = value;
}
inline void ServerDB_BaseInfo::set_igender(int32_t value) {
  _internal_set_igender(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.iGender)
}

// int32 iUserLevel = 5;
inline void ServerDB_BaseInfo::clear_iuserlevel() {
  iuserlevel_ = 0;
}
inline int32_t ServerDB_BaseInfo::_internal_iuserlevel() const {
  return iuserlevel_;
}
inline int32_t ServerDB_BaseInfo::iuserlevel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.iUserLevel)
  return _internal_iuserlevel();
}
inline void ServerDB_BaseInfo::_internal_set_iuserlevel(int32_t value) {
  
  iuserlevel_ = value;
}
inline void ServerDB_BaseInfo::set_iuserlevel(int32_t value) {
  _internal_set_iuserlevel(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.iUserLevel)
}

// int32 iUserExp = 6;
inline void ServerDB_BaseInfo::clear_iuserexp() {
  iuserexp_ = 0;
}
inline int32_t ServerDB_BaseInfo::_internal_iuserexp() const {
  return iuserexp_;
}
inline int32_t ServerDB_BaseInfo::iuserexp() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.iUserExp)
  return _internal_iuserexp();
}
inline void ServerDB_BaseInfo::_internal_set_iuserexp(int32_t value) {
  
  iuserexp_ = value;
}
inline void ServerDB_BaseInfo::set_iuserexp(int32_t value) {
  _internal_set_iuserexp(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.iUserExp)
}

// int64 llCreateTime = 7;
inline void ServerDB_BaseInfo::clear_llcreatetime() {
  llcreatetime_ = int64_t{0};
}
inline int64_t ServerDB_BaseInfo::_internal_llcreatetime() const {
  return llcreatetime_;
}
inline int64_t ServerDB_BaseInfo::llcreatetime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.llCreateTime)
  return _internal_llcreatetime();
}
inline void ServerDB_BaseInfo::_internal_set_llcreatetime(int64_t value) {
  
  llcreatetime_ = value;
}
inline void ServerDB_BaseInfo::set_llcreatetime(int64_t value) {
  _internal_set_llcreatetime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.llCreateTime)
}

// int64 llLoginTime = 8;
inline void ServerDB_BaseInfo::clear_lllogintime() {
  lllogintime_ = int64_t{0};
}
inline int64_t ServerDB_BaseInfo::_internal_lllogintime() const {
  return lllogintime_;
}
inline int64_t ServerDB_BaseInfo::lllogintime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.llLoginTime)
  return _internal_lllogintime();
}
inline void ServerDB_BaseInfo::_internal_set_lllogintime(int64_t value) {
  
  lllogintime_ = value;
}
inline void ServerDB_BaseInfo::set_lllogintime(int64_t value) {
  _internal_set_lllogintime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.llLoginTime)
}

// int64 llLogoutTime = 9;
inline void ServerDB_BaseInfo::clear_lllogouttime() {
  lllogouttime_ = int64_t{0};
}
inline int64_t ServerDB_BaseInfo::_internal_lllogouttime() const {
  return lllogouttime_;
}
inline int64_t ServerDB_BaseInfo::lllogouttime() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ServerDB_BaseInfo.llLogoutTime)
  return _internal_lllogouttime();
}
inline void ServerDB_BaseInfo::_internal_set_lllogouttime(int64_t value) {
  
  lllogouttime_ = value;
}
inline void ServerDB_BaseInfo::set_lllogouttime(int64_t value) {
  _internal_set_lllogouttime(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ServerDB_BaseInfo.llLogoutTime)
}

// -------------------------------------------------------------------

// user_pb_data_t

// int64 llUserId = 1;
inline void user_pb_data_t::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t user_pb_data_t::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t user_pb_data_t::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.user_pb_data_t.llUserId)
  return _internal_lluserid();
}
inline void user_pb_data_t::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void user_pb_data_t::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.user_pb_data_t.llUserId)
}

// .ProtoMsg.ServerDB_BaseInfo oBaseInfo = 2;
inline bool user_pb_data_t::_internal_has_obaseinfo() const {
  return this != internal_default_instance() && obaseinfo_ != nullptr;
}
inline bool user_pb_data_t::has_obaseinfo() const {
  return _internal_has_obaseinfo();
}
inline void user_pb_data_t::clear_obaseinfo() {
  if (GetArenaForAllocation() == nullptr && obaseinfo_ != nullptr) {
    delete obaseinfo_;
  }
  obaseinfo_ = nullptr;
}
inline const ::ProtoMsg::ServerDB_BaseInfo& user_pb_data_t::_internal_obaseinfo() const {
  const ::ProtoMsg::ServerDB_BaseInfo* p = obaseinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::ServerDB_BaseInfo&>(
      ::ProtoMsg::_ServerDB_BaseInfo_default_instance_);
}
inline const ::ProtoMsg::ServerDB_BaseInfo& user_pb_data_t::obaseinfo() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.user_pb_data_t.oBaseInfo)
  return _internal_obaseinfo();
}
inline void user_pb_data_t::unsafe_arena_set_allocated_obaseinfo(
    ::ProtoMsg::ServerDB_BaseInfo* obaseinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(obaseinfo_);
  }
  obaseinfo_ = obaseinfo;
  if (obaseinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.user_pb_data_t.oBaseInfo)
}
inline ::ProtoMsg::ServerDB_BaseInfo* user_pb_data_t::release_obaseinfo() {
  
  ::ProtoMsg::ServerDB_BaseInfo* temp = obaseinfo_;
  obaseinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::ServerDB_BaseInfo* user_pb_data_t::unsafe_arena_release_obaseinfo() {
  // @@protoc_insertion_point(field_release:ProtoMsg.user_pb_data_t.oBaseInfo)
  
  ::ProtoMsg::ServerDB_BaseInfo* temp = obaseinfo_;
  obaseinfo_ = nullptr;
  return temp;
}
inline ::ProtoMsg::ServerDB_BaseInfo* user_pb_data_t::_internal_mutable_obaseinfo() {
  
  if (obaseinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::ServerDB_BaseInfo>(GetArenaForAllocation());
    obaseinfo_ = p;
  }
  return obaseinfo_;
}
inline ::ProtoMsg::ServerDB_BaseInfo* user_pb_data_t::mutable_obaseinfo() {
  ::ProtoMsg::ServerDB_BaseInfo* _msg = _internal_mutable_obaseinfo();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.user_pb_data_t.oBaseInfo)
  return _msg;
}
inline void user_pb_data_t::set_allocated_obaseinfo(::ProtoMsg::ServerDB_BaseInfo* obaseinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete obaseinfo_;
  }
  if (obaseinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(obaseinfo);
    if (message_arena != submessage_arena) {
      obaseinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obaseinfo, submessage_arena);
    }
    
  } else {
    
  }
  obaseinfo_ = obaseinfo;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.user_pb_data_t.oBaseInfo)
}

// -------------------------------------------------------------------

// buff_data_t

// bytes strBuffData = 1;
inline void buff_data_t::clear_strbuffdata() {
  strbuffdata_.ClearToEmpty();
}
inline const std::string& buff_data_t::strbuffdata() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.buff_data_t.strBuffData)
  return _internal_strbuffdata();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void buff_data_t::set_strbuffdata(ArgT0&& arg0, ArgT... args) {
 
 strbuffdata_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.buff_data_t.strBuffData)
}
inline std::string* buff_data_t::mutable_strbuffdata() {
  std::string* _s = _internal_mutable_strbuffdata();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.buff_data_t.strBuffData)
  return _s;
}
inline const std::string& buff_data_t::_internal_strbuffdata() const {
  return strbuffdata_.Get();
}
inline void buff_data_t::_internal_set_strbuffdata(const std::string& value) {
  
  strbuffdata_.Set(value, GetArenaForAllocation());
}
inline std::string* buff_data_t::_internal_mutable_strbuffdata() {
  
  return strbuffdata_.Mutable(GetArenaForAllocation());
}
inline std::string* buff_data_t::release_strbuffdata() {
  // @@protoc_insertion_point(field_release:ProtoMsg.buff_data_t.strBuffData)
  return strbuffdata_.Release();
}
inline void buff_data_t::set_allocated_strbuffdata(std::string* strbuffdata) {
  if (strbuffdata != nullptr) {
    
  } else {
    
  }
  strbuffdata_.SetAllocated(strbuffdata, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strbuffdata_.IsDefault()) {
    strbuffdata_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.buff_data_t.strBuffData)
}

// int32 iDataLen = 2;
inline void buff_data_t::clear_idatalen() {
  idatalen_ = 0;
}
inline int32_t buff_data_t::_internal_idatalen() const {
  return idatalen_;
}
inline int32_t buff_data_t::idatalen() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.buff_data_t.iDataLen)
  return _internal_idatalen();
}
inline void buff_data_t::_internal_set_idatalen(int32_t value) {
  
  idatalen_ = value;
}
inline void buff_data_t::set_idatalen(int32_t value) {
  _internal_set_idatalen(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.buff_data_t.iDataLen)
}

// bool bZip = 3;
inline void buff_data_t::clear_bzip() {
  bzip_ = false;
}
inline bool buff_data_t::_internal_bzip() const {
  return bzip_;
}
inline bool buff_data_t::bzip() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.buff_data_t.bZip)
  return _internal_bzip();
}
inline void buff_data_t::_internal_set_bzip(bool value) {
  
  bzip_ = value;
}
inline void buff_data_t::set_bzip(bool value) {
  _internal_set_bzip(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.buff_data_t.bZip)
}

// -------------------------------------------------------------------

// Msg_ServerDB_GD_GetUserInfo_Req

// int64 llUserId = 1;
inline void Msg_ServerDB_GD_GetUserInfo_Req::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerDB_GD_GetUserInfo_Req::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerDB_GD_GetUserInfo_Req::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Req.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerDB_GD_GetUserInfo_Req::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerDB_GD_GetUserInfo_Req::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Req.llUserId)
}

// -------------------------------------------------------------------

// Msg_ServerDB_GD_GetUserInfo_Rsp

// .ProtoMsg.buff_data_t oUserData = 1;
inline bool Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_has_ouserdata() const {
  return this != internal_default_instance() && ouserdata_ != nullptr;
}
inline bool Msg_ServerDB_GD_GetUserInfo_Rsp::has_ouserdata() const {
  return _internal_has_ouserdata();
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::clear_ouserdata() {
  if (GetArenaForAllocation() == nullptr && ouserdata_ != nullptr) {
    delete ouserdata_;
  }
  ouserdata_ = nullptr;
}
inline const ::ProtoMsg::buff_data_t& Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_ouserdata() const {
  const ::ProtoMsg::buff_data_t* p = ouserdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::buff_data_t&>(
      ::ProtoMsg::_buff_data_t_default_instance_);
}
inline const ::ProtoMsg::buff_data_t& Msg_ServerDB_GD_GetUserInfo_Rsp::ouserdata() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.oUserData)
  return _internal_ouserdata();
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::unsafe_arena_set_allocated_ouserdata(
    ::ProtoMsg::buff_data_t* ouserdata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ouserdata_);
  }
  ouserdata_ = ouserdata;
  if (ouserdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.oUserData)
}
inline ::ProtoMsg::buff_data_t* Msg_ServerDB_GD_GetUserInfo_Rsp::release_ouserdata() {
  
  ::ProtoMsg::buff_data_t* temp = ouserdata_;
  ouserdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::buff_data_t* Msg_ServerDB_GD_GetUserInfo_Rsp::unsafe_arena_release_ouserdata() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.oUserData)
  
  ::ProtoMsg::buff_data_t* temp = ouserdata_;
  ouserdata_ = nullptr;
  return temp;
}
inline ::ProtoMsg::buff_data_t* Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_mutable_ouserdata() {
  
  if (ouserdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::buff_data_t>(GetArenaForAllocation());
    ouserdata_ = p;
  }
  return ouserdata_;
}
inline ::ProtoMsg::buff_data_t* Msg_ServerDB_GD_GetUserInfo_Rsp::mutable_ouserdata() {
  ::ProtoMsg::buff_data_t* _msg = _internal_mutable_ouserdata();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.oUserData)
  return _msg;
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::set_allocated_ouserdata(::ProtoMsg::buff_data_t* ouserdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ouserdata_;
  }
  if (ouserdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ouserdata);
    if (message_arena != submessage_arena) {
      ouserdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ouserdata, submessage_arena);
    }
    
  } else {
    
  }
  ouserdata_ = ouserdata;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.oUserData)
}

// int64 llUserId = 2;
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerDB_GD_GetUserInfo_Rsp::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.llUserId)
}

// .ProtoMsg.ResultCode eCode = 3;
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::clear_ecode() {
  ecode_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_ecode() const {
  return static_cast< ::ProtoMsg::ResultCode >(ecode_);
}
inline ::ProtoMsg::ResultCode Msg_ServerDB_GD_GetUserInfo_Rsp::ecode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.eCode)
  return _internal_ecode();
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::_internal_set_ecode(::ProtoMsg::ResultCode value) {
  
  ecode_ = value;
}
inline void Msg_ServerDB_GD_GetUserInfo_Rsp::set_ecode(::ProtoMsg::ResultCode value) {
  _internal_set_ecode(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_GetUserInfo_Rsp.eCode)
}

// -------------------------------------------------------------------

// Msg_ServerDB_GD_CreateUser_Req

// int64 llUserId = 1;
inline void Msg_ServerDB_GD_CreateUser_Req::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerDB_GD_CreateUser_Req::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerDB_GD_CreateUser_Req::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_CreateUser_Req.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerDB_GD_CreateUser_Req::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerDB_GD_CreateUser_Req::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_CreateUser_Req.llUserId)
}

// -------------------------------------------------------------------

// Msg_ServerDB_GD_CreateUser_Rsp

// .ProtoMsg.ResultCode eCode = 1;
inline void Msg_ServerDB_GD_CreateUser_Rsp::clear_ecode() {
  ecode_ = 0;
}
inline ::ProtoMsg::ResultCode Msg_ServerDB_GD_CreateUser_Rsp::_internal_ecode() const {
  return static_cast< ::ProtoMsg::ResultCode >(ecode_);
}
inline ::ProtoMsg::ResultCode Msg_ServerDB_GD_CreateUser_Rsp::ecode() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp.eCode)
  return _internal_ecode();
}
inline void Msg_ServerDB_GD_CreateUser_Rsp::_internal_set_ecode(::ProtoMsg::ResultCode value) {
  
  ecode_ = value;
}
inline void Msg_ServerDB_GD_CreateUser_Rsp::set_ecode(::ProtoMsg::ResultCode value) {
  _internal_set_ecode(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp.eCode)
}

// int64 llUserId = 2;
inline void Msg_ServerDB_GD_CreateUser_Rsp::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerDB_GD_CreateUser_Rsp::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerDB_GD_CreateUser_Rsp::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerDB_GD_CreateUser_Rsp::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerDB_GD_CreateUser_Rsp::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_CreateUser_Rsp.llUserId)
}

// -------------------------------------------------------------------

// Msg_ServerDB_GD_UpdateBaseInfo

// int64 llUserId = 1;
inline void Msg_ServerDB_GD_UpdateBaseInfo::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t Msg_ServerDB_GD_UpdateBaseInfo::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t Msg_ServerDB_GD_UpdateBaseInfo::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.llUserId)
  return _internal_lluserid();
}
inline void Msg_ServerDB_GD_UpdateBaseInfo::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void Msg_ServerDB_GD_UpdateBaseInfo::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.llUserId)
}

// .ProtoMsg.ServerDB_BaseInfo oInfo = 2;
inline bool Msg_ServerDB_GD_UpdateBaseInfo::_internal_has_oinfo() const {
  return this != internal_default_instance() && oinfo_ != nullptr;
}
inline bool Msg_ServerDB_GD_UpdateBaseInfo::has_oinfo() const {
  return _internal_has_oinfo();
}
inline void Msg_ServerDB_GD_UpdateBaseInfo::clear_oinfo() {
  if (GetArenaForAllocation() == nullptr && oinfo_ != nullptr) {
    delete oinfo_;
  }
  oinfo_ = nullptr;
}
inline const ::ProtoMsg::ServerDB_BaseInfo& Msg_ServerDB_GD_UpdateBaseInfo::_internal_oinfo() const {
  const ::ProtoMsg::ServerDB_BaseInfo* p = oinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::ServerDB_BaseInfo&>(
      ::ProtoMsg::_ServerDB_BaseInfo_default_instance_);
}
inline const ::ProtoMsg::ServerDB_BaseInfo& Msg_ServerDB_GD_UpdateBaseInfo::oinfo() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.oInfo)
  return _internal_oinfo();
}
inline void Msg_ServerDB_GD_UpdateBaseInfo::unsafe_arena_set_allocated_oinfo(
    ::ProtoMsg::ServerDB_BaseInfo* oinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oinfo_);
  }
  oinfo_ = oinfo;
  if (oinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.oInfo)
}
inline ::ProtoMsg::ServerDB_BaseInfo* Msg_ServerDB_GD_UpdateBaseInfo::release_oinfo() {
  
  ::ProtoMsg::ServerDB_BaseInfo* temp = oinfo_;
  oinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::ServerDB_BaseInfo* Msg_ServerDB_GD_UpdateBaseInfo::unsafe_arena_release_oinfo() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.oInfo)
  
  ::ProtoMsg::ServerDB_BaseInfo* temp = oinfo_;
  oinfo_ = nullptr;
  return temp;
}
inline ::ProtoMsg::ServerDB_BaseInfo* Msg_ServerDB_GD_UpdateBaseInfo::_internal_mutable_oinfo() {
  
  if (oinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::ServerDB_BaseInfo>(GetArenaForAllocation());
    oinfo_ = p;
  }
  return oinfo_;
}
inline ::ProtoMsg::ServerDB_BaseInfo* Msg_ServerDB_GD_UpdateBaseInfo::mutable_oinfo() {
  ::ProtoMsg::ServerDB_BaseInfo* _msg = _internal_mutable_oinfo();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.oInfo)
  return _msg;
}
inline void Msg_ServerDB_GD_UpdateBaseInfo::set_allocated_oinfo(::ProtoMsg::ServerDB_BaseInfo* oinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete oinfo_;
  }
  if (oinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(oinfo);
    if (message_arena != submessage_arena) {
      oinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oinfo, submessage_arena);
    }
    
  } else {
    
  }
  oinfo_ = oinfo;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_ServerDB_GD_UpdateBaseInfo.oInfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoMsg::MsgModule_ServerDB_MsgCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MsgModule_ServerDB_MsgCmd>() {
  return ::ProtoMsg::MsgModule_ServerDB_MsgCmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5fserverdb_2eproto
