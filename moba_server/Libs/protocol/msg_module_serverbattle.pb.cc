// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_serverbattle.proto

#include "msg_module_serverbattle.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ProtoMsg {
PROTOBUF_CONSTEXPR MsgModule_ServerBattle::MsgModule_ServerBattle(
    ::_pbi::ConstantInitialized){}
struct MsgModule_ServerBattleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgModule_ServerBattleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgModule_ServerBattleDefaultTypeInternal() {}
  union {
    MsgModule_ServerBattle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgModule_ServerBattleDefaultTypeInternal _MsgModule_ServerBattle_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_Req::Msg_ServerBattle_BC_Register_Req(
    ::_pbi::ConstantInitialized)
  : strip_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strlinkip_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , iport_(0)
  , imaxroomnum_(0)
  , iid_(0)
  , iserverarea_(0)
  , imaxusernum_(0)
  , icuruser_(0)
  , icurroom_(0){}
struct Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_Register_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_Register_ReqDefaultTypeInternal _Msg_ServerBattle_BC_Register_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_Rsp::Msg_ServerBattle_BC_Register_Rsp(
    ::_pbi::ConstantInitialized)
  : iserverid_(0){}
struct Msg_ServerBattle_BC_Register_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Register_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_Register_RspDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_Register_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_Register_RspDefaultTypeInternal _Msg_ServerBattle_BC_Register_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_Req::Msg_ServerBattle_CB_CreateRoom_Req(
    ::_pbi::ConstantInitialized)
  : vecuserdata_()
  , vecobuserdata_()
  , strmapname_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strroomlogid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llroomid_(int64_t{0})
  , etype_(0)

  , imapid_(0)
  , imapsec_(0)
  , iinitarea_(0)
  , bwaitlst_(false)
  , iusernum_(0)
  , irobotnum_(0)
  , eleisuretype_(0)
{}
struct Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_CB_CreateRoom_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_CB_CreateRoom_ReqDefaultTypeInternal _Msg_ServerBattle_CB_CreateRoom_Req_default_instance_;
PROTOBUF_CONSTEXPR user_conv_id_t::user_conv_id_t(
    ::_pbi::ConstantInitialized)
  : lluserid_(int64_t{0})
  , iconvid_(0){}
struct user_conv_id_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR user_conv_id_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~user_conv_id_tDefaultTypeInternal() {}
  union {
    user_conv_id_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 user_conv_id_tDefaultTypeInternal _user_conv_id_t_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_Rsp::Msg_ServerBattle_CB_CreateRoom_Rsp(
    ::_pbi::ConstantInitialized)
  : vecuserconv_()
  , strip_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strroomlogid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stroldlogid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strlinkip_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llroomid_(int64_t{0})
  , iport_(0)
  , ecode_(0)

  , iroomareaid_(0)
  , budp_(false)
  , llcreatems_(int64_t{0}){}
struct Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_CB_CreateRoom_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_CB_CreateRoom_RspDefaultTypeInternal _Msg_ServerBattle_CB_CreateRoom_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_Req::Msg_ServerBattle_BC_Heart_Req(
    ::_pbi::ConstantInitialized){}
struct Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_Heart_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_Heart_ReqDefaultTypeInternal _Msg_ServerBattle_BC_Heart_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_Rsp::Msg_ServerBattle_BC_Heart_Rsp(
    ::_pbi::ConstantInitialized){}
struct Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_Heart_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_Heart_RspDefaultTypeInternal _Msg_ServerBattle_BC_Heart_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_RoomInfo_Notify::Msg_ServerBattle_BC_RoomInfo_Notify(
    ::_pbi::ConstantInitialized)
  : strroomlogid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llroomid_(int64_t{0})
  , estatus_(0)

  , iusernum_(0){}
struct Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_RoomInfo_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_RoomInfo_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_RoomInfo_Notify_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_LoadInfo_Notify::Msg_ServerBattle_BC_LoadInfo_Notify(
    ::_pbi::ConstantInitialized)
  : iroomnum_(0)
  , iusernum_(0){}
struct Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_LoadInfo_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_LoadInfo_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_LoadInfo_Notify_default_instance_;
PROTOBUF_CONSTEXPR room_data_t::room_data_t(
    ::_pbi::ConstantInitialized)
  : estatus_(0)

  , eresfail_(0)

  , ibattlesec_(0)
  , iordersize_(0)
  , llmaxframes_(int64_t{0})
  , llminframes_(int64_t{0})
  , bnofullres_(false)
  , bhavediffres_(false)
  , iroomareanid_(0){}
struct room_data_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR room_data_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~room_data_tDefaultTypeInternal() {}
  union {
    room_data_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 room_data_tDefaultTypeInternal _room_data_t_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Result_Notify::Msg_ServerBattle_BC_Result_Notify(
    ::_pbi::ConstantInitialized)
  : vecresult_()
  , strroomlogid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , oroomdata_(nullptr)
  , llroomid_(int64_t{0}){}
struct Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal() {}
  union {
    Msg_ServerBattle_BC_Result_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerBattle_BC_Result_NotifyDefaultTypeInternal _Msg_ServerBattle_BC_Result_Notify_default_instance_;
}  // namespace ProtoMsg
static ::_pb::Metadata file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_5fmodule_5fserverbattle_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fmodule_5fserverbattle_2eproto = nullptr;

const uint32_t TableStruct_msg_5fmodule_5fserverbattle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::MsgModule_ServerBattle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, strip_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, iport_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, imaxroomnum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, iid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, iserverarea_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, imaxusernum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, icuruser_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, icurroom_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Req, strlinkip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp, iserverid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, llroomid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, etype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, strmapname_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, imapid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, imapsec_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, vecuserdata_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, strroomlogid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, iinitarea_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, bwaitlst_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, iusernum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, irobotnum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, vecobuserdata_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req, eleisuretype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::user_conv_id_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::user_conv_id_t, lluserid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::user_conv_id_t, iconvid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, llroomid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, strip_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, iport_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, ecode_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, strroomlogid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, stroldlogid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, iroomareaid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, vecuserconv_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, budp_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, llcreatems_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp, strlinkip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Heart_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify, llroomid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify, estatus_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify, iusernum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify, strroomlogid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify, iroomnum_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify, iusernum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, estatus_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, eresfail_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, ibattlesec_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, bnofullres_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, iordersize_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, llmaxframes_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, llminframes_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, iroomareanid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::room_data_t, bhavediffres_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify, llroomid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify, vecresult_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify, oroomdata_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify, strroomlogid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ProtoMsg::MsgModule_ServerBattle)},
  { 6, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_Register_Req)},
  { 21, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp)},
  { 28, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req)},
  { 47, -1, -1, sizeof(::ProtoMsg::user_conv_id_t)},
  { 55, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp)},
  { 72, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_Heart_Req)},
  { 78, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp)},
  { 84, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify)},
  { 94, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify)},
  { 102, -1, -1, sizeof(::ProtoMsg::room_data_t)},
  { 117, -1, -1, sizeof(::ProtoMsg::Msg_ServerBattle_BC_Result_Notify)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ProtoMsg::_MsgModule_ServerBattle_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_Register_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_Register_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_CB_CreateRoom_Req_default_instance_._instance,
  &::ProtoMsg::_user_conv_id_t_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_CB_CreateRoom_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_Heart_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_Heart_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_RoomInfo_Notify_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_LoadInfo_Notify_default_instance_._instance,
  &::ProtoMsg::_room_data_t_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerBattle_BC_Result_Notify_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fmodule_5fserverbattle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035msg_module_serverbattle.proto\022\010ProtoMs"
  "g\032\020msg_common.proto\032\021result_code.proto\"\231"
  "\003\n\026MsgModule_ServerBattle\"\376\002\n\006MsgCmd\022\031\n\025"
  "Msg_ServerBattle_None\020\000\022$\n Msg_ServerBat"
  "tle_BC_Register_Req\020\001\022$\n Msg_ServerBattl"
  "e_BC_Register_Rsp\020\002\022&\n\"Msg_ServerBattle_"
  "CB_CreateRoom_Req\020\003\022&\n\"Msg_ServerBattle_"
  "CB_CreateRoom_Rsp\020\004\022!\n\035Msg_ServerBattle_"
  "BC_Heart_Req\020\005\022!\n\035Msg_ServerBattle_BC_He"
  "art_Rsp\020\006\022\'\n#Msg_ServerBattle_BC_RoomInf"
  "o_Notify\020\007\022\'\n#Msg_ServerBattle_BC_LoadIn"
  "fo_Notify\020\010\022%\n!Msg_ServerBattle_BC_Resul"
  "t_Notify\020\t\"\303\001\n Msg_ServerBattle_BC_Regis"
  "ter_Req\022\r\n\005strIp\030\001 \001(\t\022\r\n\005iPort\030\002 \001(\005\022\023\n"
  "\013iMaxRoomNum\030\003 \001(\005\022\013\n\003iId\030\004 \001(\005\022\023\n\013iServ"
  "erArea\030\005 \001(\005\022\023\n\013iMaxUserNum\030\006 \001(\005\022\020\n\010iCu"
  "rUser\030\007 \001(\005\022\020\n\010iCurRoom\030\010 \001(\005\022\021\n\tstrLink"
  "Ip\030\t \001(\t\"5\n Msg_ServerBattle_BC_Register"
  "_Rsp\022\021\n\tiServerId\030\001 \001(\005\"\205\003\n\"Msg_ServerBa"
  "ttle_CB_CreateRoom_Req\022\020\n\010llRoomId\030\001 \001(\003"
  "\022\"\n\005eType\030\002 \001(\0162\023.ProtoMsg.ERoomType\022\022\n\n"
  "strMapName\030\003 \001(\t\022\016\n\006iMapId\030\004 \001(\005\022\017\n\007iMap"
  "Sec\030\005 \001(\005\0221\n\013vecUserData\030\006 \003(\0132\034.ProtoMs"
  "g.user_battle_info_t\022\024\n\014strRoomLogId\030\007 \001"
  "(\t\022\021\n\tiInitArea\030\010 \001(\005\022\020\n\010bWaitLst\030\t \001(\010\022"
  "\020\n\010iUserNum\030\n \001(\005\022\021\n\tiRobotNum\030\013 \001(\005\0223\n\r"
  "vecObUserData\030\014 \003(\0132\034.ProtoMsg.user_batt"
  "le_info_t\022,\n\014eLeisureType\030\r \001(\0162\026.ProtoM"
  "sg.ELeisureType\"3\n\016user_conv_id_t\022\020\n\010llU"
  "serid\030\001 \001(\003\022\017\n\007iConvId\030\002 \001(\005\"\235\002\n\"Msg_Ser"
  "verBattle_CB_CreateRoom_Rsp\022\020\n\010llRoomId\030"
  "\001 \001(\003\022\r\n\005strIp\030\002 \001(\t\022\r\n\005iPort\030\003 \001(\005\022#\n\005e"
  "Code\030\004 \001(\0162\024.ProtoMsg.ResultCode\022\024\n\014strR"
  "oomLogId\030\005 \001(\t\022\023\n\013strOldLogId\030\006 \001(\t\022\023\n\013i"
  "RoomAreaId\030\007 \001(\005\022-\n\013vecUserConv\030\010 \003(\0132\030."
  "ProtoMsg.user_conv_id_t\022\014\n\004bUdp\030\t \001(\010\022\022\n"
  "\nllCreateMs\030\n \001(\003\022\021\n\tstrLinkIp\030\013 \001(\t\"\037\n\035"
  "Msg_ServerBattle_BC_Heart_Req\"\037\n\035Msg_Ser"
  "verBattle_BC_Heart_Rsp\"\207\001\n#Msg_ServerBat"
  "tle_BC_RoomInfo_Notify\022\020\n\010llRoomId\030\001 \001(\003"
  "\022&\n\007eStatus\030\002 \001(\0162\025.ProtoMsg.ERoomStatus"
  "\022\020\n\010iUserNum\030\003 \001(\005\022\024\n\014strRoomLogId\030\004 \001(\t"
  "\"I\n#Msg_ServerBattle_BC_LoadInfo_Notify\022"
  "\020\n\010iRoomNum\030\001 \001(\005\022\020\n\010iUserNum\030\002 \001(\005\"\354\001\n\013"
  "room_data_t\022&\n\007eStatus\030\001 \001(\0162\025.ProtoMsg."
  "ERoomStatus\022#\n\010eResFail\030\002 \001(\0162\021.ProtoMsg"
  ".EBRCode\022\022\n\niBattleSec\030\003 \001(\005\022\022\n\nbNoFullR"
  "es\030\004 \001(\010\022\022\n\niOrderSize\030\005 \001(\005\022\023\n\013llMaxFra"
  "mes\030\006 \001(\003\022\023\n\013llMinFrames\030\007 \001(\003\022\024\n\014iRoomA"
  "reanId\030\010 \001(\005\022\024\n\014bHaveDiffRes\030\t \001(\010\"\250\001\n!M"
  "sg_ServerBattle_BC_Result_Notify\022\020\n\010llRo"
  "omId\030\001 \001(\003\0221\n\tvecResult\030\002 \003(\0132\036.ProtoMsg"
  ".user_battle_result_t\022(\n\toRoomData\030\003 \001(\013"
  "2\025.ProtoMsg.room_data_t\022\024\n\014strRoomLogId\030"
  "\004 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_msg_5fmodule_5fserverbattle_2eproto_deps[2] = {
  &::descriptor_table_msg_5fcommon_2eproto,
  &::descriptor_table_result_5fcode_2eproto,
};
static ::_pbi::once_flag descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fmodule_5fserverbattle_2eproto = {
    false, false, 2173, descriptor_table_protodef_msg_5fmodule_5fserverbattle_2eproto,
    "msg_module_serverbattle.proto",
    &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once, descriptor_table_msg_5fmodule_5fserverbattle_2eproto_deps, 2, 12,
    schemas, file_default_instances, TableStruct_msg_5fmodule_5fserverbattle_2eproto::offsets,
    file_level_metadata_msg_5fmodule_5fserverbattle_2eproto, file_level_enum_descriptors_msg_5fmodule_5fserverbattle_2eproto,
    file_level_service_descriptors_msg_5fmodule_5fserverbattle_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter() {
  return &descriptor_table_msg_5fmodule_5fserverbattle_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fmodule_5fserverbattle_2eproto(&descriptor_table_msg_5fmodule_5fserverbattle_2eproto);
namespace ProtoMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_ServerBattle_MsgCmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fmodule_5fserverbattle_2eproto);
  return file_level_enum_descriptors_msg_5fmodule_5fserverbattle_2eproto[0];
}
bool MsgModule_ServerBattle_MsgCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_None;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_Register_Req;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_Register_Rsp;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_CB_CreateRoom_Req;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_CB_CreateRoom_Rsp;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_Heart_Req;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_Heart_Rsp;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_RoomInfo_Notify;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_LoadInfo_Notify;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::Msg_ServerBattle_BC_Result_Notify;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::MsgCmd_MIN;
constexpr MsgModule_ServerBattle_MsgCmd MsgModule_ServerBattle::MsgCmd_MAX;
constexpr int MsgModule_ServerBattle::MsgCmd_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgModule_ServerBattle::_Internal {
 public:
};

MsgModule_ServerBattle::MsgModule_ServerBattle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.MsgModule_ServerBattle)
}
MsgModule_ServerBattle::MsgModule_ServerBattle(const MsgModule_ServerBattle& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MsgModule_ServerBattle)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgModule_ServerBattle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgModule_ServerBattle::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgModule_ServerBattle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[0]);
}

// ===================================================================

class Msg_ServerBattle_BC_Register_Req::_Internal {
 public:
};

Msg_ServerBattle_BC_Register_Req::Msg_ServerBattle_BC_Register_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
}
Msg_ServerBattle_BC_Register_Req::Msg_ServerBattle_BC_Register_Req(const Msg_ServerBattle_BC_Register_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strip().empty()) {
    strip_.Set(from._internal_strip(), 
      GetArenaForAllocation());
  }
  strlinkip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strlinkip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strlinkip().empty()) {
    strlinkip_.Set(from._internal_strlinkip(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iport_, &from.iport_,
    static_cast<size_t>(reinterpret_cast<char*>(&icurroom_) -
    reinterpret_cast<char*>(&iport_)) + sizeof(icurroom_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
}

inline void Msg_ServerBattle_BC_Register_Req::SharedCtor() {
strip_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strip_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strlinkip_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strlinkip_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iport_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&icurroom_) -
    reinterpret_cast<char*>(&iport_)) + sizeof(icurroom_));
}

Msg_ServerBattle_BC_Register_Req::~Msg_ServerBattle_BC_Register_Req() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_BC_Register_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strip_.Destroy();
  strlinkip_.Destroy();
}

void Msg_ServerBattle_BC_Register_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_BC_Register_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strip_.ClearToEmpty();
  strlinkip_.ClearToEmpty();
  ::memset(&iport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&icurroom_) -
      reinterpret_cast<char*>(&iport_)) + sizeof(icurroom_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_BC_Register_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string strIp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_strip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp"));
        } else
          goto handle_unusual;
        continue;
      // int32 iPort = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iMaxRoomNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          imaxroomnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iServerArea = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          iserverarea_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iMaxUserNum = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          imaxusernum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iCurUser = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          icuruser_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iCurRoom = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          icurroom_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strLinkIp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_strlinkip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_BC_Register_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string strIp = 1;
  if (!this->_internal_strip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strip().data(), static_cast<int>(this->_internal_strip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_BC_Register_Req.strIp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strip(), target);
  }

  // int32 iPort = 2;
  if (this->_internal_iport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iport(), target);
  }

  // int32 iMaxRoomNum = 3;
  if (this->_internal_imaxroomnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_imaxroomnum(), target);
  }

  // int32 iId = 4;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_iid(), target);
  }

  // int32 iServerArea = 5;
  if (this->_internal_iserverarea() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_iserverarea(), target);
  }

  // int32 iMaxUserNum = 6;
  if (this->_internal_imaxusernum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_imaxusernum(), target);
  }

  // int32 iCurUser = 7;
  if (this->_internal_icuruser() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_icuruser(), target);
  }

  // int32 iCurRoom = 8;
  if (this->_internal_icurroom() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_icurroom(), target);
  }

  // string strLinkIp = 9;
  if (!this->_internal_strlinkip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strlinkip().data(), static_cast<int>(this->_internal_strlinkip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_BC_Register_Req.strLinkIp");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_strlinkip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  return target;
}

size_t Msg_ServerBattle_BC_Register_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strIp = 1;
  if (!this->_internal_strip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strip());
  }

  // string strLinkIp = 9;
  if (!this->_internal_strlinkip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strlinkip());
  }

  // int32 iPort = 2;
  if (this->_internal_iport() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iport());
  }

  // int32 iMaxRoomNum = 3;
  if (this->_internal_imaxroomnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_imaxroomnum());
  }

  // int32 iId = 4;
  if (this->_internal_iid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iid());
  }

  // int32 iServerArea = 5;
  if (this->_internal_iserverarea() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iserverarea());
  }

  // int32 iMaxUserNum = 6;
  if (this->_internal_imaxusernum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_imaxusernum());
  }

  // int32 iCurUser = 7;
  if (this->_internal_icuruser() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_icuruser());
  }

  // int32 iCurRoom = 8;
  if (this->_internal_icurroom() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_icurroom());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_Register_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_BC_Register_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_Register_Req::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_BC_Register_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_BC_Register_Req *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_BC_Register_Req &>(from));
}


void Msg_ServerBattle_BC_Register_Req::MergeFrom(const Msg_ServerBattle_BC_Register_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strip().empty()) {
    _internal_set_strip(from._internal_strip());
  }
  if (!from._internal_strlinkip().empty()) {
    _internal_set_strlinkip(from._internal_strlinkip());
  }
  if (from._internal_iport() != 0) {
    _internal_set_iport(from._internal_iport());
  }
  if (from._internal_imaxroomnum() != 0) {
    _internal_set_imaxroomnum(from._internal_imaxroomnum());
  }
  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_iserverarea() != 0) {
    _internal_set_iserverarea(from._internal_iserverarea());
  }
  if (from._internal_imaxusernum() != 0) {
    _internal_set_imaxusernum(from._internal_imaxusernum());
  }
  if (from._internal_icuruser() != 0) {
    _internal_set_icuruser(from._internal_icuruser());
  }
  if (from._internal_icurroom() != 0) {
    _internal_set_icurroom(from._internal_icurroom());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_BC_Register_Req::CopyFrom(const Msg_ServerBattle_BC_Register_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_BC_Register_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_BC_Register_Req::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_BC_Register_Req::InternalSwap(Msg_ServerBattle_BC_Register_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strip_, lhs_arena,
      &other->strip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strlinkip_, lhs_arena,
      &other->strlinkip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_Register_Req, icurroom_)
      + sizeof(Msg_ServerBattle_BC_Register_Req::icurroom_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_Register_Req, iport_)>(
          reinterpret_cast<char*>(&iport_),
          reinterpret_cast<char*>(&other->iport_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_Register_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[1]);
}

// ===================================================================

class Msg_ServerBattle_BC_Register_Rsp::_Internal {
 public:
};

Msg_ServerBattle_BC_Register_Rsp::Msg_ServerBattle_BC_Register_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
}
Msg_ServerBattle_BC_Register_Rsp::Msg_ServerBattle_BC_Register_Rsp(const Msg_ServerBattle_BC_Register_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  iserverid_ = from.iserverid_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
}

inline void Msg_ServerBattle_BC_Register_Rsp::SharedCtor() {
iserverid_ = 0;
}

Msg_ServerBattle_BC_Register_Rsp::~Msg_ServerBattle_BC_Register_Rsp() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_BC_Register_Rsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_ServerBattle_BC_Register_Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_BC_Register_Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iserverid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_BC_Register_Rsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iServerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_BC_Register_Rsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iServerId = 1;
  if (this->_internal_iserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_iserverid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  return target;
}

size_t Msg_ServerBattle_BC_Register_Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 iServerId = 1;
  if (this->_internal_iserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iserverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_Register_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_BC_Register_Rsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_Register_Rsp::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_BC_Register_Rsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_BC_Register_Rsp *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_BC_Register_Rsp &>(from));
}


void Msg_ServerBattle_BC_Register_Rsp::MergeFrom(const Msg_ServerBattle_BC_Register_Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iserverid() != 0) {
    _internal_set_iserverid(from._internal_iserverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_BC_Register_Rsp::CopyFrom(const Msg_ServerBattle_BC_Register_Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_BC_Register_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_BC_Register_Rsp::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_BC_Register_Rsp::InternalSwap(Msg_ServerBattle_BC_Register_Rsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(iserverid_, other->iserverid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_Register_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[2]);
}

// ===================================================================

class Msg_ServerBattle_CB_CreateRoom_Req::_Internal {
 public:
};

void Msg_ServerBattle_CB_CreateRoom_Req::clear_vecuserdata() {
  vecuserdata_.Clear();
}
void Msg_ServerBattle_CB_CreateRoom_Req::clear_vecobuserdata() {
  vecobuserdata_.Clear();
}
Msg_ServerBattle_CB_CreateRoom_Req::Msg_ServerBattle_CB_CreateRoom_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecuserdata_(arena),
  vecobuserdata_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
}
Msg_ServerBattle_CB_CreateRoom_Req::Msg_ServerBattle_CB_CreateRoom_Req(const Msg_ServerBattle_CB_CreateRoom_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecuserdata_(from.vecuserdata_),
      vecobuserdata_(from.vecobuserdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strmapname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strmapname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strmapname().empty()) {
    strmapname_.Set(from._internal_strmapname(), 
      GetArenaForAllocation());
  }
  strroomlogid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strroomlogid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strroomlogid().empty()) {
    strroomlogid_.Set(from._internal_strroomlogid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llroomid_, &from.llroomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eleisuretype_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(eleisuretype_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
}

inline void Msg_ServerBattle_CB_CreateRoom_Req::SharedCtor() {
strmapname_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strmapname_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strroomlogid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strroomlogid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llroomid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&eleisuretype_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(eleisuretype_));
}

Msg_ServerBattle_CB_CreateRoom_Req::~Msg_ServerBattle_CB_CreateRoom_Req() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_CB_CreateRoom_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strmapname_.Destroy();
  strroomlogid_.Destroy();
}

void Msg_ServerBattle_CB_CreateRoom_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_CB_CreateRoom_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecuserdata_.Clear();
  vecobuserdata_.Clear();
  strmapname_.ClearToEmpty();
  strroomlogid_.ClearToEmpty();
  ::memset(&llroomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eleisuretype_) -
      reinterpret_cast<char*>(&llroomid_)) + sizeof(eleisuretype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_CB_CreateRoom_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llRoomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ERoomType eType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_etype(static_cast<::ProtoMsg::ERoomType>(val));
        } else
          goto handle_unusual;
        continue;
      // string strMapName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_strmapname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName"));
        } else
          goto handle_unusual;
        continue;
      // int32 iMapId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          imapid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iMapSec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          imapsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.user_battle_info_t vecUserData = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecuserdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string strRoomLogId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_strroomlogid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId"));
        } else
          goto handle_unusual;
        continue;
      // int32 iInitArea = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          iinitarea_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bWaitLst = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          bwaitlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iUserNum = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          iusernum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iRobotNum = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          irobotnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.user_battle_info_t vecObUserData = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecobuserdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ELeisureType eLeisureType = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eleisuretype(static_cast<::ProtoMsg::ELeisureType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_CB_CreateRoom_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llroomid(), target);
  }

  // .ProtoMsg.ERoomType eType = 2;
  if (this->_internal_etype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_etype(), target);
  }

  // string strMapName = 3;
  if (!this->_internal_strmapname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strmapname().data(), static_cast<int>(this->_internal_strmapname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strMapName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_strmapname(), target);
  }

  // int32 iMapId = 4;
  if (this->_internal_imapid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_imapid(), target);
  }

  // int32 iMapSec = 5;
  if (this->_internal_imapsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_imapsec(), target);
  }

  // repeated .ProtoMsg.user_battle_info_t vecUserData = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecuserdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecuserdata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string strRoomLogId = 7;
  if (!this->_internal_strroomlogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strroomlogid().data(), static_cast<int>(this->_internal_strroomlogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req.strRoomLogId");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_strroomlogid(), target);
  }

  // int32 iInitArea = 8;
  if (this->_internal_iinitarea() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_iinitarea(), target);
  }

  // bool bWaitLst = 9;
  if (this->_internal_bwaitlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_bwaitlst(), target);
  }

  // int32 iUserNum = 10;
  if (this->_internal_iusernum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_iusernum(), target);
  }

  // int32 iRobotNum = 11;
  if (this->_internal_irobotnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_irobotnum(), target);
  }

  // repeated .ProtoMsg.user_battle_info_t vecObUserData = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecobuserdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecobuserdata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .ProtoMsg.ELeisureType eLeisureType = 13;
  if (this->_internal_eleisuretype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      13, this->_internal_eleisuretype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  return target;
}

size_t Msg_ServerBattle_CB_CreateRoom_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.user_battle_info_t vecUserData = 6;
  total_size += 1UL * this->_internal_vecuserdata_size();
  for (const auto& msg : this->vecuserdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoMsg.user_battle_info_t vecObUserData = 12;
  total_size += 1UL * this->_internal_vecobuserdata_size();
  for (const auto& msg : this->vecobuserdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string strMapName = 3;
  if (!this->_internal_strmapname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strmapname());
  }

  // string strRoomLogId = 7;
  if (!this->_internal_strroomlogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strroomlogid());
  }

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llroomid());
  }

  // .ProtoMsg.ERoomType eType = 2;
  if (this->_internal_etype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_etype());
  }

  // int32 iMapId = 4;
  if (this->_internal_imapid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_imapid());
  }

  // int32 iMapSec = 5;
  if (this->_internal_imapsec() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_imapsec());
  }

  // int32 iInitArea = 8;
  if (this->_internal_iinitarea() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iinitarea());
  }

  // bool bWaitLst = 9;
  if (this->_internal_bwaitlst() != 0) {
    total_size += 1 + 1;
  }

  // int32 iUserNum = 10;
  if (this->_internal_iusernum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iusernum());
  }

  // int32 iRobotNum = 11;
  if (this->_internal_irobotnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_irobotnum());
  }

  // .ProtoMsg.ELeisureType eLeisureType = 13;
  if (this->_internal_eleisuretype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eleisuretype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_CB_CreateRoom_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_CB_CreateRoom_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_CB_CreateRoom_Req::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_CB_CreateRoom_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_CB_CreateRoom_Req *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_CB_CreateRoom_Req &>(from));
}


void Msg_ServerBattle_CB_CreateRoom_Req::MergeFrom(const Msg_ServerBattle_CB_CreateRoom_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecuserdata_.MergeFrom(from.vecuserdata_);
  vecobuserdata_.MergeFrom(from.vecobuserdata_);
  if (!from._internal_strmapname().empty()) {
    _internal_set_strmapname(from._internal_strmapname());
  }
  if (!from._internal_strroomlogid().empty()) {
    _internal_set_strroomlogid(from._internal_strroomlogid());
  }
  if (from._internal_llroomid() != 0) {
    _internal_set_llroomid(from._internal_llroomid());
  }
  if (from._internal_etype() != 0) {
    _internal_set_etype(from._internal_etype());
  }
  if (from._internal_imapid() != 0) {
    _internal_set_imapid(from._internal_imapid());
  }
  if (from._internal_imapsec() != 0) {
    _internal_set_imapsec(from._internal_imapsec());
  }
  if (from._internal_iinitarea() != 0) {
    _internal_set_iinitarea(from._internal_iinitarea());
  }
  if (from._internal_bwaitlst() != 0) {
    _internal_set_bwaitlst(from._internal_bwaitlst());
  }
  if (from._internal_iusernum() != 0) {
    _internal_set_iusernum(from._internal_iusernum());
  }
  if (from._internal_irobotnum() != 0) {
    _internal_set_irobotnum(from._internal_irobotnum());
  }
  if (from._internal_eleisuretype() != 0) {
    _internal_set_eleisuretype(from._internal_eleisuretype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_CB_CreateRoom_Req::CopyFrom(const Msg_ServerBattle_CB_CreateRoom_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_CB_CreateRoom_Req::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_CB_CreateRoom_Req::InternalSwap(Msg_ServerBattle_CB_CreateRoom_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecuserdata_.InternalSwap(&other->vecuserdata_);
  vecobuserdata_.InternalSwap(&other->vecobuserdata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strmapname_, lhs_arena,
      &other->strmapname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strroomlogid_, lhs_arena,
      &other->strroomlogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_CB_CreateRoom_Req, eleisuretype_)
      + sizeof(Msg_ServerBattle_CB_CreateRoom_Req::eleisuretype_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_CB_CreateRoom_Req, llroomid_)>(
          reinterpret_cast<char*>(&llroomid_),
          reinterpret_cast<char*>(&other->llroomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_CB_CreateRoom_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[3]);
}

// ===================================================================

class user_conv_id_t::_Internal {
 public:
};

user_conv_id_t::user_conv_id_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.user_conv_id_t)
}
user_conv_id_t::user_conv_id_t(const user_conv_id_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lluserid_, &from.lluserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&iconvid_) -
    reinterpret_cast<char*>(&lluserid_)) + sizeof(iconvid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.user_conv_id_t)
}

inline void user_conv_id_t::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lluserid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iconvid_) -
    reinterpret_cast<char*>(&lluserid_)) + sizeof(iconvid_));
}

user_conv_id_t::~user_conv_id_t() {
  // @@protoc_insertion_point(destructor:ProtoMsg.user_conv_id_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void user_conv_id_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void user_conv_id_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void user_conv_id_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.user_conv_id_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lluserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iconvid_) -
      reinterpret_cast<char*>(&lluserid_)) + sizeof(iconvid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* user_conv_id_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llUserid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lluserid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iConvId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iconvid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* user_conv_id_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.user_conv_id_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llUserid = 1;
  if (this->_internal_lluserid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_lluserid(), target);
  }

  // int32 iConvId = 2;
  if (this->_internal_iconvid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iconvid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.user_conv_id_t)
  return target;
}

size_t user_conv_id_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.user_conv_id_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 llUserid = 1;
  if (this->_internal_lluserid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_lluserid());
  }

  // int32 iConvId = 2;
  if (this->_internal_iconvid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iconvid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData user_conv_id_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    user_conv_id_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*user_conv_id_t::GetClassData() const { return &_class_data_; }

void user_conv_id_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<user_conv_id_t *>(to)->MergeFrom(
      static_cast<const user_conv_id_t &>(from));
}


void user_conv_id_t::MergeFrom(const user_conv_id_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.user_conv_id_t)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lluserid() != 0) {
    _internal_set_lluserid(from._internal_lluserid());
  }
  if (from._internal_iconvid() != 0) {
    _internal_set_iconvid(from._internal_iconvid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void user_conv_id_t::CopyFrom(const user_conv_id_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.user_conv_id_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_conv_id_t::IsInitialized() const {
  return true;
}

void user_conv_id_t::InternalSwap(user_conv_id_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(user_conv_id_t, iconvid_)
      + sizeof(user_conv_id_t::iconvid_)
      - PROTOBUF_FIELD_OFFSET(user_conv_id_t, lluserid_)>(
          reinterpret_cast<char*>(&lluserid_),
          reinterpret_cast<char*>(&other->lluserid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata user_conv_id_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[4]);
}

// ===================================================================

class Msg_ServerBattle_CB_CreateRoom_Rsp::_Internal {
 public:
};

Msg_ServerBattle_CB_CreateRoom_Rsp::Msg_ServerBattle_CB_CreateRoom_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecuserconv_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
}
Msg_ServerBattle_CB_CreateRoom_Rsp::Msg_ServerBattle_CB_CreateRoom_Rsp(const Msg_ServerBattle_CB_CreateRoom_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecuserconv_(from.vecuserconv_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strip().empty()) {
    strip_.Set(from._internal_strip(), 
      GetArenaForAllocation());
  }
  strroomlogid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strroomlogid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strroomlogid().empty()) {
    strroomlogid_.Set(from._internal_strroomlogid(), 
      GetArenaForAllocation());
  }
  stroldlogid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stroldlogid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stroldlogid().empty()) {
    stroldlogid_.Set(from._internal_stroldlogid(), 
      GetArenaForAllocation());
  }
  strlinkip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strlinkip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strlinkip().empty()) {
    strlinkip_.Set(from._internal_strlinkip(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llroomid_, &from.llroomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&llcreatems_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(llcreatems_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
}

inline void Msg_ServerBattle_CB_CreateRoom_Rsp::SharedCtor() {
strip_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strip_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strroomlogid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strroomlogid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stroldlogid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stroldlogid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strlinkip_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strlinkip_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llroomid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llcreatems_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(llcreatems_));
}

Msg_ServerBattle_CB_CreateRoom_Rsp::~Msg_ServerBattle_CB_CreateRoom_Rsp() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_CB_CreateRoom_Rsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strip_.Destroy();
  strroomlogid_.Destroy();
  stroldlogid_.Destroy();
  strlinkip_.Destroy();
}

void Msg_ServerBattle_CB_CreateRoom_Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_CB_CreateRoom_Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecuserconv_.Clear();
  strip_.ClearToEmpty();
  strroomlogid_.ClearToEmpty();
  stroldlogid_.ClearToEmpty();
  strlinkip_.ClearToEmpty();
  ::memset(&llroomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llcreatems_) -
      reinterpret_cast<char*>(&llroomid_)) + sizeof(llcreatems_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_CB_CreateRoom_Rsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llRoomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strIp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_strip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp"));
        } else
          goto handle_unusual;
        continue;
      // int32 iPort = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          iport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ResultCode eCode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ecode(static_cast<::ProtoMsg::ResultCode>(val));
        } else
          goto handle_unusual;
        continue;
      // string strRoomLogId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_strroomlogid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId"));
        } else
          goto handle_unusual;
        continue;
      // string strOldLogId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_stroldlogid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId"));
        } else
          goto handle_unusual;
        continue;
      // int32 iRoomAreaId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          iroomareaid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.user_conv_id_t vecUserConv = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecuserconv(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool bUdp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          budp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 llCreateMs = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          llcreatems_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strLinkIp = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_strlinkip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_CB_CreateRoom_Rsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llroomid(), target);
  }

  // string strIp = 2;
  if (!this->_internal_strip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strip().data(), static_cast<int>(this->_internal_strip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strIp");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_strip(), target);
  }

  // int32 iPort = 3;
  if (this->_internal_iport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_iport(), target);
  }

  // .ProtoMsg.ResultCode eCode = 4;
  if (this->_internal_ecode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_ecode(), target);
  }

  // string strRoomLogId = 5;
  if (!this->_internal_strroomlogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strroomlogid().data(), static_cast<int>(this->_internal_strroomlogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strRoomLogId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strroomlogid(), target);
  }

  // string strOldLogId = 6;
  if (!this->_internal_stroldlogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stroldlogid().data(), static_cast<int>(this->_internal_stroldlogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strOldLogId");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_stroldlogid(), target);
  }

  // int32 iRoomAreaId = 7;
  if (this->_internal_iroomareaid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_iroomareaid(), target);
  }

  // repeated .ProtoMsg.user_conv_id_t vecUserConv = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecuserconv_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecuserconv(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool bUdp = 9;
  if (this->_internal_budp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_budp(), target);
  }

  // int64 llCreateMs = 10;
  if (this->_internal_llcreatems() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_llcreatems(), target);
  }

  // string strLinkIp = 11;
  if (!this->_internal_strlinkip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strlinkip().data(), static_cast<int>(this->_internal_strlinkip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp.strLinkIp");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_strlinkip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  return target;
}

size_t Msg_ServerBattle_CB_CreateRoom_Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.user_conv_id_t vecUserConv = 8;
  total_size += 1UL * this->_internal_vecuserconv_size();
  for (const auto& msg : this->vecuserconv_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string strIp = 2;
  if (!this->_internal_strip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strip());
  }

  // string strRoomLogId = 5;
  if (!this->_internal_strroomlogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strroomlogid());
  }

  // string strOldLogId = 6;
  if (!this->_internal_stroldlogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stroldlogid());
  }

  // string strLinkIp = 11;
  if (!this->_internal_strlinkip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strlinkip());
  }

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llroomid());
  }

  // int32 iPort = 3;
  if (this->_internal_iport() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iport());
  }

  // .ProtoMsg.ResultCode eCode = 4;
  if (this->_internal_ecode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_ecode());
  }

  // int32 iRoomAreaId = 7;
  if (this->_internal_iroomareaid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomareaid());
  }

  // bool bUdp = 9;
  if (this->_internal_budp() != 0) {
    total_size += 1 + 1;
  }

  // int64 llCreateMs = 10;
  if (this->_internal_llcreatems() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llcreatems());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_CB_CreateRoom_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_CB_CreateRoom_Rsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_CB_CreateRoom_Rsp::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_CB_CreateRoom_Rsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_CB_CreateRoom_Rsp *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_CB_CreateRoom_Rsp &>(from));
}


void Msg_ServerBattle_CB_CreateRoom_Rsp::MergeFrom(const Msg_ServerBattle_CB_CreateRoom_Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecuserconv_.MergeFrom(from.vecuserconv_);
  if (!from._internal_strip().empty()) {
    _internal_set_strip(from._internal_strip());
  }
  if (!from._internal_strroomlogid().empty()) {
    _internal_set_strroomlogid(from._internal_strroomlogid());
  }
  if (!from._internal_stroldlogid().empty()) {
    _internal_set_stroldlogid(from._internal_stroldlogid());
  }
  if (!from._internal_strlinkip().empty()) {
    _internal_set_strlinkip(from._internal_strlinkip());
  }
  if (from._internal_llroomid() != 0) {
    _internal_set_llroomid(from._internal_llroomid());
  }
  if (from._internal_iport() != 0) {
    _internal_set_iport(from._internal_iport());
  }
  if (from._internal_ecode() != 0) {
    _internal_set_ecode(from._internal_ecode());
  }
  if (from._internal_iroomareaid() != 0) {
    _internal_set_iroomareaid(from._internal_iroomareaid());
  }
  if (from._internal_budp() != 0) {
    _internal_set_budp(from._internal_budp());
  }
  if (from._internal_llcreatems() != 0) {
    _internal_set_llcreatems(from._internal_llcreatems());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_CB_CreateRoom_Rsp::CopyFrom(const Msg_ServerBattle_CB_CreateRoom_Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_CB_CreateRoom_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_CB_CreateRoom_Rsp::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_CB_CreateRoom_Rsp::InternalSwap(Msg_ServerBattle_CB_CreateRoom_Rsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecuserconv_.InternalSwap(&other->vecuserconv_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strip_, lhs_arena,
      &other->strip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strroomlogid_, lhs_arena,
      &other->strroomlogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stroldlogid_, lhs_arena,
      &other->stroldlogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strlinkip_, lhs_arena,
      &other->strlinkip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_CB_CreateRoom_Rsp, llcreatems_)
      + sizeof(Msg_ServerBattle_CB_CreateRoom_Rsp::llcreatems_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_CB_CreateRoom_Rsp, llroomid_)>(
          reinterpret_cast<char*>(&llroomid_),
          reinterpret_cast<char*>(&other->llroomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_CB_CreateRoom_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[5]);
}

// ===================================================================

class Msg_ServerBattle_BC_Heart_Req::_Internal {
 public:
};

Msg_ServerBattle_BC_Heart_Req::Msg_ServerBattle_BC_Heart_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_Heart_Req)
}
Msg_ServerBattle_BC_Heart_Req::Msg_ServerBattle_BC_Heart_Req(const Msg_ServerBattle_BC_Heart_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_Heart_Req)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_Heart_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_Heart_Req::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_Heart_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[6]);
}

// ===================================================================

class Msg_ServerBattle_BC_Heart_Rsp::_Internal {
 public:
};

Msg_ServerBattle_BC_Heart_Rsp::Msg_ServerBattle_BC_Heart_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_Heart_Rsp)
}
Msg_ServerBattle_BC_Heart_Rsp::Msg_ServerBattle_BC_Heart_Rsp(const Msg_ServerBattle_BC_Heart_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_Heart_Rsp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_Heart_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_Heart_Rsp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_Heart_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[7]);
}

// ===================================================================

class Msg_ServerBattle_BC_RoomInfo_Notify::_Internal {
 public:
};

Msg_ServerBattle_BC_RoomInfo_Notify::Msg_ServerBattle_BC_RoomInfo_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
}
Msg_ServerBattle_BC_RoomInfo_Notify::Msg_ServerBattle_BC_RoomInfo_Notify(const Msg_ServerBattle_BC_RoomInfo_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strroomlogid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strroomlogid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strroomlogid().empty()) {
    strroomlogid_.Set(from._internal_strroomlogid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llroomid_, &from.llroomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&iusernum_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(iusernum_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
}

inline void Msg_ServerBattle_BC_RoomInfo_Notify::SharedCtor() {
strroomlogid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strroomlogid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llroomid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iusernum_) -
    reinterpret_cast<char*>(&llroomid_)) + sizeof(iusernum_));
}

Msg_ServerBattle_BC_RoomInfo_Notify::~Msg_ServerBattle_BC_RoomInfo_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_BC_RoomInfo_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strroomlogid_.Destroy();
}

void Msg_ServerBattle_BC_RoomInfo_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_BC_RoomInfo_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strroomlogid_.ClearToEmpty();
  ::memset(&llroomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iusernum_) -
      reinterpret_cast<char*>(&llroomid_)) + sizeof(iusernum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_BC_RoomInfo_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llRoomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ERoomStatus eStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_estatus(static_cast<::ProtoMsg::ERoomStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 iUserNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          iusernum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strRoomLogId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strroomlogid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_BC_RoomInfo_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llroomid(), target);
  }

  // .ProtoMsg.ERoomStatus eStatus = 2;
  if (this->_internal_estatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_estatus(), target);
  }

  // int32 iUserNum = 3;
  if (this->_internal_iusernum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_iusernum(), target);
  }

  // string strRoomLogId = 4;
  if (!this->_internal_strroomlogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strroomlogid().data(), static_cast<int>(this->_internal_strroomlogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify.strRoomLogId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strroomlogid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  return target;
}

size_t Msg_ServerBattle_BC_RoomInfo_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strRoomLogId = 4;
  if (!this->_internal_strroomlogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strroomlogid());
  }

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llroomid());
  }

  // .ProtoMsg.ERoomStatus eStatus = 2;
  if (this->_internal_estatus() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_estatus());
  }

  // int32 iUserNum = 3;
  if (this->_internal_iusernum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iusernum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_RoomInfo_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_BC_RoomInfo_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_RoomInfo_Notify::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_BC_RoomInfo_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_BC_RoomInfo_Notify *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_BC_RoomInfo_Notify &>(from));
}


void Msg_ServerBattle_BC_RoomInfo_Notify::MergeFrom(const Msg_ServerBattle_BC_RoomInfo_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strroomlogid().empty()) {
    _internal_set_strroomlogid(from._internal_strroomlogid());
  }
  if (from._internal_llroomid() != 0) {
    _internal_set_llroomid(from._internal_llroomid());
  }
  if (from._internal_estatus() != 0) {
    _internal_set_estatus(from._internal_estatus());
  }
  if (from._internal_iusernum() != 0) {
    _internal_set_iusernum(from._internal_iusernum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_BC_RoomInfo_Notify::CopyFrom(const Msg_ServerBattle_BC_RoomInfo_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_BC_RoomInfo_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_BC_RoomInfo_Notify::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_BC_RoomInfo_Notify::InternalSwap(Msg_ServerBattle_BC_RoomInfo_Notify* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strroomlogid_, lhs_arena,
      &other->strroomlogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_RoomInfo_Notify, iusernum_)
      + sizeof(Msg_ServerBattle_BC_RoomInfo_Notify::iusernum_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_RoomInfo_Notify, llroomid_)>(
          reinterpret_cast<char*>(&llroomid_),
          reinterpret_cast<char*>(&other->llroomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_RoomInfo_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[8]);
}

// ===================================================================

class Msg_ServerBattle_BC_LoadInfo_Notify::_Internal {
 public:
};

Msg_ServerBattle_BC_LoadInfo_Notify::Msg_ServerBattle_BC_LoadInfo_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
}
Msg_ServerBattle_BC_LoadInfo_Notify::Msg_ServerBattle_BC_LoadInfo_Notify(const Msg_ServerBattle_BC_LoadInfo_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iroomnum_, &from.iroomnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&iusernum_) -
    reinterpret_cast<char*>(&iroomnum_)) + sizeof(iusernum_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
}

inline void Msg_ServerBattle_BC_LoadInfo_Notify::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iroomnum_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iusernum_) -
    reinterpret_cast<char*>(&iroomnum_)) + sizeof(iusernum_));
}

Msg_ServerBattle_BC_LoadInfo_Notify::~Msg_ServerBattle_BC_LoadInfo_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_BC_LoadInfo_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_ServerBattle_BC_LoadInfo_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_BC_LoadInfo_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iroomnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iusernum_) -
      reinterpret_cast<char*>(&iroomnum_)) + sizeof(iusernum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_BC_LoadInfo_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 iRoomNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iroomnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iUserNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iusernum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_BC_LoadInfo_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 iRoomNum = 1;
  if (this->_internal_iroomnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_iroomnum(), target);
  }

  // int32 iUserNum = 2;
  if (this->_internal_iusernum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_iusernum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  return target;
}

size_t Msg_ServerBattle_BC_LoadInfo_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 iRoomNum = 1;
  if (this->_internal_iroomnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomnum());
  }

  // int32 iUserNum = 2;
  if (this->_internal_iusernum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iusernum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_LoadInfo_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_BC_LoadInfo_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_LoadInfo_Notify::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_BC_LoadInfo_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_BC_LoadInfo_Notify *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_BC_LoadInfo_Notify &>(from));
}


void Msg_ServerBattle_BC_LoadInfo_Notify::MergeFrom(const Msg_ServerBattle_BC_LoadInfo_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iroomnum() != 0) {
    _internal_set_iroomnum(from._internal_iroomnum());
  }
  if (from._internal_iusernum() != 0) {
    _internal_set_iusernum(from._internal_iusernum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_BC_LoadInfo_Notify::CopyFrom(const Msg_ServerBattle_BC_LoadInfo_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_BC_LoadInfo_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_BC_LoadInfo_Notify::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_BC_LoadInfo_Notify::InternalSwap(Msg_ServerBattle_BC_LoadInfo_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_LoadInfo_Notify, iusernum_)
      + sizeof(Msg_ServerBattle_BC_LoadInfo_Notify::iusernum_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_LoadInfo_Notify, iroomnum_)>(
          reinterpret_cast<char*>(&iroomnum_),
          reinterpret_cast<char*>(&other->iroomnum_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_LoadInfo_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[9]);
}

// ===================================================================

class room_data_t::_Internal {
 public:
};

room_data_t::room_data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.room_data_t)
}
room_data_t::room_data_t(const room_data_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&estatus_, &from.estatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&iroomareanid_) -
    reinterpret_cast<char*>(&estatus_)) + sizeof(iroomareanid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.room_data_t)
}

inline void room_data_t::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&estatus_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iroomareanid_) -
    reinterpret_cast<char*>(&estatus_)) + sizeof(iroomareanid_));
}

room_data_t::~room_data_t() {
  // @@protoc_insertion_point(destructor:ProtoMsg.room_data_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void room_data_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void room_data_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void room_data_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.room_data_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&estatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iroomareanid_) -
      reinterpret_cast<char*>(&estatus_)) + sizeof(iroomareanid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* room_data_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ProtoMsg.ERoomStatus eStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_estatus(static_cast<::ProtoMsg::ERoomStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.EBRCode eResFail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eresfail(static_cast<::ProtoMsg::EBRCode>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 iBattleSec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ibattlesec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bNoFullRes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bnofullres_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iOrderSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          iordersize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 llMaxFrames = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          llmaxframes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 llMinFrames = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          llminframes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iRoomAreanId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          iroomareanid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bHaveDiffRes = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          bhavediffres_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* room_data_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.room_data_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.ERoomStatus eStatus = 1;
  if (this->_internal_estatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_estatus(), target);
  }

  // .ProtoMsg.EBRCode eResFail = 2;
  if (this->_internal_eresfail() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_eresfail(), target);
  }

  // int32 iBattleSec = 3;
  if (this->_internal_ibattlesec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_ibattlesec(), target);
  }

  // bool bNoFullRes = 4;
  if (this->_internal_bnofullres() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_bnofullres(), target);
  }

  // int32 iOrderSize = 5;
  if (this->_internal_iordersize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_iordersize(), target);
  }

  // int64 llMaxFrames = 6;
  if (this->_internal_llmaxframes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_llmaxframes(), target);
  }

  // int64 llMinFrames = 7;
  if (this->_internal_llminframes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_llminframes(), target);
  }

  // int32 iRoomAreanId = 8;
  if (this->_internal_iroomareanid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_iroomareanid(), target);
  }

  // bool bHaveDiffRes = 9;
  if (this->_internal_bhavediffres() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_bhavediffres(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.room_data_t)
  return target;
}

size_t room_data_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.room_data_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ProtoMsg.ERoomStatus eStatus = 1;
  if (this->_internal_estatus() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_estatus());
  }

  // .ProtoMsg.EBRCode eResFail = 2;
  if (this->_internal_eresfail() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eresfail());
  }

  // int32 iBattleSec = 3;
  if (this->_internal_ibattlesec() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ibattlesec());
  }

  // int32 iOrderSize = 5;
  if (this->_internal_iordersize() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iordersize());
  }

  // int64 llMaxFrames = 6;
  if (this->_internal_llmaxframes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llmaxframes());
  }

  // int64 llMinFrames = 7;
  if (this->_internal_llminframes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llminframes());
  }

  // bool bNoFullRes = 4;
  if (this->_internal_bnofullres() != 0) {
    total_size += 1 + 1;
  }

  // bool bHaveDiffRes = 9;
  if (this->_internal_bhavediffres() != 0) {
    total_size += 1 + 1;
  }

  // int32 iRoomAreanId = 8;
  if (this->_internal_iroomareanid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iroomareanid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData room_data_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    room_data_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*room_data_t::GetClassData() const { return &_class_data_; }

void room_data_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<room_data_t *>(to)->MergeFrom(
      static_cast<const room_data_t &>(from));
}


void room_data_t::MergeFrom(const room_data_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.room_data_t)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_estatus() != 0) {
    _internal_set_estatus(from._internal_estatus());
  }
  if (from._internal_eresfail() != 0) {
    _internal_set_eresfail(from._internal_eresfail());
  }
  if (from._internal_ibattlesec() != 0) {
    _internal_set_ibattlesec(from._internal_ibattlesec());
  }
  if (from._internal_iordersize() != 0) {
    _internal_set_iordersize(from._internal_iordersize());
  }
  if (from._internal_llmaxframes() != 0) {
    _internal_set_llmaxframes(from._internal_llmaxframes());
  }
  if (from._internal_llminframes() != 0) {
    _internal_set_llminframes(from._internal_llminframes());
  }
  if (from._internal_bnofullres() != 0) {
    _internal_set_bnofullres(from._internal_bnofullres());
  }
  if (from._internal_bhavediffres() != 0) {
    _internal_set_bhavediffres(from._internal_bhavediffres());
  }
  if (from._internal_iroomareanid() != 0) {
    _internal_set_iroomareanid(from._internal_iroomareanid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void room_data_t::CopyFrom(const room_data_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.room_data_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_data_t::IsInitialized() const {
  return true;
}

void room_data_t::InternalSwap(room_data_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(room_data_t, iroomareanid_)
      + sizeof(room_data_t::iroomareanid_)
      - PROTOBUF_FIELD_OFFSET(room_data_t, estatus_)>(
          reinterpret_cast<char*>(&estatus_),
          reinterpret_cast<char*>(&other->estatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata room_data_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[10]);
}

// ===================================================================

class Msg_ServerBattle_BC_Result_Notify::_Internal {
 public:
  static const ::ProtoMsg::room_data_t& oroomdata(const Msg_ServerBattle_BC_Result_Notify* msg);
};

const ::ProtoMsg::room_data_t&
Msg_ServerBattle_BC_Result_Notify::_Internal::oroomdata(const Msg_ServerBattle_BC_Result_Notify* msg) {
  return *msg->oroomdata_;
}
void Msg_ServerBattle_BC_Result_Notify::clear_vecresult() {
  vecresult_.Clear();
}
Msg_ServerBattle_BC_Result_Notify::Msg_ServerBattle_BC_Result_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecresult_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
}
Msg_ServerBattle_BC_Result_Notify::Msg_ServerBattle_BC_Result_Notify(const Msg_ServerBattle_BC_Result_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecresult_(from.vecresult_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strroomlogid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strroomlogid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strroomlogid().empty()) {
    strroomlogid_.Set(from._internal_strroomlogid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_oroomdata()) {
    oroomdata_ = new ::ProtoMsg::room_data_t(*from.oroomdata_);
  } else {
    oroomdata_ = nullptr;
  }
  llroomid_ = from.llroomid_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
}

inline void Msg_ServerBattle_BC_Result_Notify::SharedCtor() {
strroomlogid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strroomlogid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&oroomdata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llroomid_) -
    reinterpret_cast<char*>(&oroomdata_)) + sizeof(llroomid_));
}

Msg_ServerBattle_BC_Result_Notify::~Msg_ServerBattle_BC_Result_Notify() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerBattle_BC_Result_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strroomlogid_.Destroy();
  if (this != internal_default_instance()) delete oroomdata_;
}

void Msg_ServerBattle_BC_Result_Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerBattle_BC_Result_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecresult_.Clear();
  strroomlogid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && oroomdata_ != nullptr) {
    delete oroomdata_;
  }
  oroomdata_ = nullptr;
  llroomid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerBattle_BC_Result_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llRoomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ProtoMsg.user_battle_result_t vecResult = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vecresult(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.room_data_t oRoomData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oroomdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strRoomLogId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strroomlogid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerBattle_BC_Result_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llroomid(), target);
  }

  // repeated .ProtoMsg.user_battle_result_t vecResult = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vecresult_size()); i < n; i++) {
    const auto& repfield = this->_internal_vecresult(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .ProtoMsg.room_data_t oRoomData = 3;
  if (this->_internal_has_oroomdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::oroomdata(this),
        _Internal::oroomdata(this).GetCachedSize(), target, stream);
  }

  // string strRoomLogId = 4;
  if (!this->_internal_strroomlogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strroomlogid().data(), static_cast<int>(this->_internal_strroomlogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerBattle_BC_Result_Notify.strRoomLogId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strroomlogid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  return target;
}

size_t Msg_ServerBattle_BC_Result_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMsg.user_battle_result_t vecResult = 2;
  total_size += 1UL * this->_internal_vecresult_size();
  for (const auto& msg : this->vecresult_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string strRoomLogId = 4;
  if (!this->_internal_strroomlogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strroomlogid());
  }

  // .ProtoMsg.room_data_t oRoomData = 3;
  if (this->_internal_has_oroomdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oroomdata_);
  }

  // int64 llRoomId = 1;
  if (this->_internal_llroomid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llroomid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerBattle_BC_Result_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerBattle_BC_Result_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerBattle_BC_Result_Notify::GetClassData() const { return &_class_data_; }

void Msg_ServerBattle_BC_Result_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerBattle_BC_Result_Notify *>(to)->MergeFrom(
      static_cast<const Msg_ServerBattle_BC_Result_Notify &>(from));
}


void Msg_ServerBattle_BC_Result_Notify::MergeFrom(const Msg_ServerBattle_BC_Result_Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecresult_.MergeFrom(from.vecresult_);
  if (!from._internal_strroomlogid().empty()) {
    _internal_set_strroomlogid(from._internal_strroomlogid());
  }
  if (from._internal_has_oroomdata()) {
    _internal_mutable_oroomdata()->::ProtoMsg::room_data_t::MergeFrom(from._internal_oroomdata());
  }
  if (from._internal_llroomid() != 0) {
    _internal_set_llroomid(from._internal_llroomid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerBattle_BC_Result_Notify::CopyFrom(const Msg_ServerBattle_BC_Result_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerBattle_BC_Result_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerBattle_BC_Result_Notify::IsInitialized() const {
  return true;
}

void Msg_ServerBattle_BC_Result_Notify::InternalSwap(Msg_ServerBattle_BC_Result_Notify* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecresult_.InternalSwap(&other->vecresult_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strroomlogid_, lhs_arena,
      &other->strroomlogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_Result_Notify, llroomid_)
      + sizeof(Msg_ServerBattle_BC_Result_Notify::llroomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerBattle_BC_Result_Notify, oroomdata_)>(
          reinterpret_cast<char*>(&oroomdata_),
          reinterpret_cast<char*>(&other->oroomdata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerBattle_BC_Result_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_getter, &descriptor_table_msg_5fmodule_5fserverbattle_2eproto_once,
      file_level_metadata_msg_5fmodule_5fserverbattle_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMsg::MsgModule_ServerBattle*
Arena::CreateMaybeMessage< ::ProtoMsg::MsgModule_ServerBattle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::MsgModule_ServerBattle >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_Register_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_Register_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_Register_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_Register_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::user_conv_id_t*
Arena::CreateMaybeMessage< ::ProtoMsg::user_conv_id_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::user_conv_id_t >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_CB_CreateRoom_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_Heart_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_Heart_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_Heart_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_Heart_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_RoomInfo_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_LoadInfo_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::room_data_t*
Arena::CreateMaybeMessage< ::ProtoMsg::room_data_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::room_data_t >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerBattle_BC_Result_Notify*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerBattle_BC_Result_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerBattle_BC_Result_Notify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
