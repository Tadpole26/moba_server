// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_http.proto

#include "msg_module_http.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ProtoMsg {
PROTOBUF_CONSTEXPR MsgModule_Http::MsgModule_Http(
    ::_pbi::ConstantInitialized){}
struct MsgModule_HttpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgModule_HttpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgModule_HttpDefaultTypeInternal() {}
  union {
    MsgModule_Http _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgModule_HttpDefaultTypeInternal _MsgModule_Http_default_instance_;
PROTOBUF_CONSTEXPR HttpRetMsg::HttpRetMsg(
    ::_pbi::ConstantInitialized)
  : strmsg_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uimsgid_(0u){}
struct HttpRetMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpRetMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpRetMsgDefaultTypeInternal() {}
  union {
    HttpRetMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpRetMsgDefaultTypeInternal _HttpRetMsg_default_instance_;
PROTOBUF_CONSTEXPR HttpGetUniqRolId::HttpGetUniqRolId(
    ::_pbi::ConstantInitialized)
  : strplayername_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llplayerid_(int64_t{0})
  , uistate_(0u)
  , uiserverid_(0u){}
struct HttpGetUniqRolIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpGetUniqRolIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpGetUniqRolIdDefaultTypeInternal() {}
  union {
    HttpGetUniqRolId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpGetUniqRolIdDefaultTypeInternal _HttpGetUniqRolId_default_instance_;
PROTOBUF_CONSTEXPR HttpUserLoginRet::HttpUserLoginRet(
    ::_pbi::ConstantInitialized)
  : strprovincename_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strsessionid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , strdevid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llplayerid_(int64_t{0})
  , eresult_(0)

  , uigateid_(0u)
  , iprovince_(0)
  , uigmlevel_(0u)
  , uiproarea_(0u){}
struct HttpUserLoginRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpUserLoginRetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpUserLoginRetDefaultTypeInternal() {}
  union {
    HttpUserLoginRet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpUserLoginRetDefaultTypeInternal _HttpUserLoginRet_default_instance_;
PROTOBUF_CONSTEXPR HttpModifyNameRet::HttpModifyNameRet(
    ::_pbi::ConstantInitialized)
  : strplayername_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , llplayerid_(int64_t{0})
  , eresult_(0)

  , uiserverid_(0u){}
struct HttpModifyNameRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpModifyNameRetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpModifyNameRetDefaultTypeInternal() {}
  union {
    HttpModifyNameRet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpModifyNameRetDefaultTypeInternal _HttpModifyNameRet_default_instance_;
}  // namespace ProtoMsg
static ::_pb::Metadata file_level_metadata_msg_5fmodule_5fhttp_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_5fmodule_5fhttp_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fmodule_5fhttp_2eproto = nullptr;

const uint32_t TableStruct_msg_5fmodule_5fhttp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::MsgModule_Http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpRetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpRetMsg, uimsgid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpRetMsg, strmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpGetUniqRolId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpGetUniqRolId, llplayerid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpGetUniqRolId, uistate_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpGetUniqRolId, uiserverid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpGetUniqRolId, strplayername_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, llplayerid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, eresult_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, uigateid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, iprovince_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, strprovincename_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, strsessionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, uigmlevel_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, strdevid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpUserLoginRet, uiproarea_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpModifyNameRet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpModifyNameRet, llplayerid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpModifyNameRet, eresult_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpModifyNameRet, uiserverid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::HttpModifyNameRet, strplayername_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ProtoMsg::MsgModule_Http)},
  { 6, -1, -1, sizeof(::ProtoMsg::HttpRetMsg)},
  { 14, -1, -1, sizeof(::ProtoMsg::HttpGetUniqRolId)},
  { 24, -1, -1, sizeof(::ProtoMsg::HttpUserLoginRet)},
  { 39, -1, -1, sizeof(::ProtoMsg::HttpModifyNameRet)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ProtoMsg::_MsgModule_Http_default_instance_._instance,
  &::ProtoMsg::_HttpRetMsg_default_instance_._instance,
  &::ProtoMsg::_HttpGetUniqRolId_default_instance_._instance,
  &::ProtoMsg::_HttpUserLoginRet_default_instance_._instance,
  &::ProtoMsg::_HttpModifyNameRet_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fmodule_5fhttp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025msg_module_http.proto\022\010ProtoMsg\032\021resul"
  "t_code.proto\"-\n\016MsgModule_Http\"\033\n\006MsgCmd"
  "\022\021\n\rMsg_Http_None\020\000\"-\n\nHttpRetMsg\022\017\n\007uiM"
  "sgId\030\001 \001(\r\022\016\n\006strMsg\030\002 \001(\014\"b\n\020HttpGetUni"
  "qRolId\022\022\n\nllPlayerId\030\001 \001(\003\022\017\n\007uiState\030\002 "
  "\001(\r\022\022\n\nuiServerId\030\003 \001(\r\022\025\n\rstrPlayerName"
  "\030\004 \001(\t\"\331\001\n\020HttpUserLoginRet\022\022\n\nllPlayerI"
  "d\030\001 \001(\003\022%\n\007eResult\030\002 \001(\0162\024.ProtoMsg.Resu"
  "ltCode\022\020\n\010uiGateId\030\003 \001(\r\022\021\n\tiProvince\030\004 "
  "\001(\005\022\027\n\017strProvinceName\030\005 \001(\t\022\024\n\014strSessi"
  "onId\030\006 \001(\t\022\021\n\tuiGmLevel\030\007 \001(\r\022\020\n\010strDevI"
  "d\030\010 \001(\t\022\021\n\tuiProArea\030\t \001(\r\"y\n\021HttpModify"
  "NameRet\022\022\n\nllPlayerId\030\001 \001(\003\022%\n\007eResult\030\002"
  " \001(\0162\024.ProtoMsg.ResultCode\022\022\n\nuiServerId"
  "\030\003 \001(\r\022\025\n\rstrPlayerName\030\004 \001(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_msg_5fmodule_5fhttp_2eproto_deps[1] = {
  &::descriptor_table_result_5fcode_2eproto,
};
static ::_pbi::once_flag descriptor_table_msg_5fmodule_5fhttp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fmodule_5fhttp_2eproto = {
    false, false, 597, descriptor_table_protodef_msg_5fmodule_5fhttp_2eproto,
    "msg_module_http.proto",
    &descriptor_table_msg_5fmodule_5fhttp_2eproto_once, descriptor_table_msg_5fmodule_5fhttp_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_msg_5fmodule_5fhttp_2eproto::offsets,
    file_level_metadata_msg_5fmodule_5fhttp_2eproto, file_level_enum_descriptors_msg_5fmodule_5fhttp_2eproto,
    file_level_service_descriptors_msg_5fmodule_5fhttp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fmodule_5fhttp_2eproto_getter() {
  return &descriptor_table_msg_5fmodule_5fhttp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fmodule_5fhttp_2eproto(&descriptor_table_msg_5fmodule_5fhttp_2eproto);
namespace ProtoMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_Http_MsgCmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fmodule_5fhttp_2eproto);
  return file_level_enum_descriptors_msg_5fmodule_5fhttp_2eproto[0];
}
bool MsgModule_Http_MsgCmd_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgModule_Http_MsgCmd MsgModule_Http::Msg_Http_None;
constexpr MsgModule_Http_MsgCmd MsgModule_Http::MsgCmd_MIN;
constexpr MsgModule_Http_MsgCmd MsgModule_Http::MsgCmd_MAX;
constexpr int MsgModule_Http::MsgCmd_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgModule_Http::_Internal {
 public:
};

MsgModule_Http::MsgModule_Http(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.MsgModule_Http)
}
MsgModule_Http::MsgModule_Http(const MsgModule_Http& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MsgModule_Http)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgModule_Http::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgModule_Http::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgModule_Http::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fhttp_2eproto_getter, &descriptor_table_msg_5fmodule_5fhttp_2eproto_once,
      file_level_metadata_msg_5fmodule_5fhttp_2eproto[0]);
}

// ===================================================================

class HttpRetMsg::_Internal {
 public:
};

HttpRetMsg::HttpRetMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.HttpRetMsg)
}
HttpRetMsg::HttpRetMsg(const HttpRetMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strmsg().empty()) {
    strmsg_.Set(from._internal_strmsg(), 
      GetArenaForAllocation());
  }
  uimsgid_ = from.uimsgid_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.HttpRetMsg)
}

inline void HttpRetMsg::SharedCtor() {
strmsg_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strmsg_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
uimsgid_ = 0u;
}

HttpRetMsg::~HttpRetMsg() {
  // @@protoc_insertion_point(destructor:ProtoMsg.HttpRetMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HttpRetMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strmsg_.Destroy();
}

void HttpRetMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HttpRetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.HttpRetMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strmsg_.ClearToEmpty();
  uimsgid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HttpRetMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uiMsgId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uimsgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes strMsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_strmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HttpRetMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.HttpRetMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiMsgId = 1;
  if (this->_internal_uimsgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uimsgid(), target);
  }

  // bytes strMsg = 2;
  if (!this->_internal_strmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_strmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.HttpRetMsg)
  return target;
}

size_t HttpRetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.HttpRetMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes strMsg = 2;
  if (!this->_internal_strmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_strmsg());
  }

  // uint32 uiMsgId = 1;
  if (this->_internal_uimsgid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uimsgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HttpRetMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HttpRetMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HttpRetMsg::GetClassData() const { return &_class_data_; }

void HttpRetMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HttpRetMsg *>(to)->MergeFrom(
      static_cast<const HttpRetMsg &>(from));
}


void HttpRetMsg::MergeFrom(const HttpRetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.HttpRetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strmsg().empty()) {
    _internal_set_strmsg(from._internal_strmsg());
  }
  if (from._internal_uimsgid() != 0) {
    _internal_set_uimsgid(from._internal_uimsgid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HttpRetMsg::CopyFrom(const HttpRetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.HttpRetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpRetMsg::IsInitialized() const {
  return true;
}

void HttpRetMsg::InternalSwap(HttpRetMsg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strmsg_, lhs_arena,
      &other->strmsg_, rhs_arena
  );
  swap(uimsgid_, other->uimsgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HttpRetMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fhttp_2eproto_getter, &descriptor_table_msg_5fmodule_5fhttp_2eproto_once,
      file_level_metadata_msg_5fmodule_5fhttp_2eproto[1]);
}

// ===================================================================

class HttpGetUniqRolId::_Internal {
 public:
};

HttpGetUniqRolId::HttpGetUniqRolId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.HttpGetUniqRolId)
}
HttpGetUniqRolId::HttpGetUniqRolId(const HttpGetUniqRolId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strplayername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strplayername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strplayername().empty()) {
    strplayername_.Set(from._internal_strplayername(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llplayerid_, &from.llplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiserverid_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.HttpGetUniqRolId)
}

inline void HttpGetUniqRolId::SharedCtor() {
strplayername_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strplayername_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llplayerid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiserverid_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
}

HttpGetUniqRolId::~HttpGetUniqRolId() {
  // @@protoc_insertion_point(destructor:ProtoMsg.HttpGetUniqRolId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HttpGetUniqRolId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strplayername_.Destroy();
}

void HttpGetUniqRolId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HttpGetUniqRolId::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.HttpGetUniqRolId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strplayername_.ClearToEmpty();
  ::memset(&llplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiserverid_) -
      reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HttpGetUniqRolId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llPlayerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llplayerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiState = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uistate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiServerId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strPlayerName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strplayername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.HttpGetUniqRolId.strPlayerName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HttpGetUniqRolId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.HttpGetUniqRolId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llplayerid(), target);
  }

  // uint32 uiState = 2;
  if (this->_internal_uistate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uistate(), target);
  }

  // uint32 uiServerId = 3;
  if (this->_internal_uiserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiserverid(), target);
  }

  // string strPlayerName = 4;
  if (!this->_internal_strplayername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strplayername().data(), static_cast<int>(this->_internal_strplayername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.HttpGetUniqRolId.strPlayerName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strplayername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.HttpGetUniqRolId)
  return target;
}

size_t HttpGetUniqRolId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.HttpGetUniqRolId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strPlayerName = 4;
  if (!this->_internal_strplayername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strplayername());
  }

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llplayerid());
  }

  // uint32 uiState = 2;
  if (this->_internal_uistate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uistate());
  }

  // uint32 uiServerId = 3;
  if (this->_internal_uiserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HttpGetUniqRolId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HttpGetUniqRolId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HttpGetUniqRolId::GetClassData() const { return &_class_data_; }

void HttpGetUniqRolId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HttpGetUniqRolId *>(to)->MergeFrom(
      static_cast<const HttpGetUniqRolId &>(from));
}


void HttpGetUniqRolId::MergeFrom(const HttpGetUniqRolId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.HttpGetUniqRolId)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strplayername().empty()) {
    _internal_set_strplayername(from._internal_strplayername());
  }
  if (from._internal_llplayerid() != 0) {
    _internal_set_llplayerid(from._internal_llplayerid());
  }
  if (from._internal_uistate() != 0) {
    _internal_set_uistate(from._internal_uistate());
  }
  if (from._internal_uiserverid() != 0) {
    _internal_set_uiserverid(from._internal_uiserverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HttpGetUniqRolId::CopyFrom(const HttpGetUniqRolId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.HttpGetUniqRolId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpGetUniqRolId::IsInitialized() const {
  return true;
}

void HttpGetUniqRolId::InternalSwap(HttpGetUniqRolId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strplayername_, lhs_arena,
      &other->strplayername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HttpGetUniqRolId, uiserverid_)
      + sizeof(HttpGetUniqRolId::uiserverid_)
      - PROTOBUF_FIELD_OFFSET(HttpGetUniqRolId, llplayerid_)>(
          reinterpret_cast<char*>(&llplayerid_),
          reinterpret_cast<char*>(&other->llplayerid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HttpGetUniqRolId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fhttp_2eproto_getter, &descriptor_table_msg_5fmodule_5fhttp_2eproto_once,
      file_level_metadata_msg_5fmodule_5fhttp_2eproto[2]);
}

// ===================================================================

class HttpUserLoginRet::_Internal {
 public:
};

HttpUserLoginRet::HttpUserLoginRet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.HttpUserLoginRet)
}
HttpUserLoginRet::HttpUserLoginRet(const HttpUserLoginRet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strprovincename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strprovincename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strprovincename().empty()) {
    strprovincename_.Set(from._internal_strprovincename(), 
      GetArenaForAllocation());
  }
  strsessionid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strsessionid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strsessionid().empty()) {
    strsessionid_.Set(from._internal_strsessionid(), 
      GetArenaForAllocation());
  }
  strdevid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strdevid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strdevid().empty()) {
    strdevid_.Set(from._internal_strdevid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llplayerid_, &from.llplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiproarea_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiproarea_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.HttpUserLoginRet)
}

inline void HttpUserLoginRet::SharedCtor() {
strprovincename_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strprovincename_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strsessionid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strsessionid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
strdevid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strdevid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llplayerid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiproarea_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiproarea_));
}

HttpUserLoginRet::~HttpUserLoginRet() {
  // @@protoc_insertion_point(destructor:ProtoMsg.HttpUserLoginRet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HttpUserLoginRet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strprovincename_.Destroy();
  strsessionid_.Destroy();
  strdevid_.Destroy();
}

void HttpUserLoginRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HttpUserLoginRet::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.HttpUserLoginRet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strprovincename_.ClearToEmpty();
  strsessionid_.ClearToEmpty();
  strdevid_.ClearToEmpty();
  ::memset(&llplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiproarea_) -
      reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiproarea_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HttpUserLoginRet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llPlayerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llplayerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ResultCode eResult = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eresult(static_cast<::ProtoMsg::ResultCode>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 uiGateId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uigateid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 iProvince = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          iprovince_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strProvinceName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_strprovincename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.HttpUserLoginRet.strProvinceName"));
        } else
          goto handle_unusual;
        continue;
      // string strSessionId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_strsessionid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.HttpUserLoginRet.strSessionId"));
        } else
          goto handle_unusual;
        continue;
      // uint32 uiGmLevel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uigmlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strDevId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_strdevid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.HttpUserLoginRet.strDevId"));
        } else
          goto handle_unusual;
        continue;
      // uint32 uiProArea = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uiproarea_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HttpUserLoginRet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.HttpUserLoginRet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llplayerid(), target);
  }

  // .ProtoMsg.ResultCode eResult = 2;
  if (this->_internal_eresult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_eresult(), target);
  }

  // uint32 uiGateId = 3;
  if (this->_internal_uigateid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uigateid(), target);
  }

  // int32 iProvince = 4;
  if (this->_internal_iprovince() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_iprovince(), target);
  }

  // string strProvinceName = 5;
  if (!this->_internal_strprovincename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strprovincename().data(), static_cast<int>(this->_internal_strprovincename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.HttpUserLoginRet.strProvinceName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_strprovincename(), target);
  }

  // string strSessionId = 6;
  if (!this->_internal_strsessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strsessionid().data(), static_cast<int>(this->_internal_strsessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.HttpUserLoginRet.strSessionId");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strsessionid(), target);
  }

  // uint32 uiGmLevel = 7;
  if (this->_internal_uigmlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_uigmlevel(), target);
  }

  // string strDevId = 8;
  if (!this->_internal_strdevid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strdevid().data(), static_cast<int>(this->_internal_strdevid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.HttpUserLoginRet.strDevId");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_strdevid(), target);
  }

  // uint32 uiProArea = 9;
  if (this->_internal_uiproarea() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(9, this->_internal_uiproarea(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.HttpUserLoginRet)
  return target;
}

size_t HttpUserLoginRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.HttpUserLoginRet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strProvinceName = 5;
  if (!this->_internal_strprovincename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strprovincename());
  }

  // string strSessionId = 6;
  if (!this->_internal_strsessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strsessionid());
  }

  // string strDevId = 8;
  if (!this->_internal_strdevid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strdevid());
  }

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llplayerid());
  }

  // .ProtoMsg.ResultCode eResult = 2;
  if (this->_internal_eresult() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eresult());
  }

  // uint32 uiGateId = 3;
  if (this->_internal_uigateid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uigateid());
  }

  // int32 iProvince = 4;
  if (this->_internal_iprovince() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_iprovince());
  }

  // uint32 uiGmLevel = 7;
  if (this->_internal_uigmlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uigmlevel());
  }

  // uint32 uiProArea = 9;
  if (this->_internal_uiproarea() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiproarea());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HttpUserLoginRet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HttpUserLoginRet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HttpUserLoginRet::GetClassData() const { return &_class_data_; }

void HttpUserLoginRet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HttpUserLoginRet *>(to)->MergeFrom(
      static_cast<const HttpUserLoginRet &>(from));
}


void HttpUserLoginRet::MergeFrom(const HttpUserLoginRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.HttpUserLoginRet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strprovincename().empty()) {
    _internal_set_strprovincename(from._internal_strprovincename());
  }
  if (!from._internal_strsessionid().empty()) {
    _internal_set_strsessionid(from._internal_strsessionid());
  }
  if (!from._internal_strdevid().empty()) {
    _internal_set_strdevid(from._internal_strdevid());
  }
  if (from._internal_llplayerid() != 0) {
    _internal_set_llplayerid(from._internal_llplayerid());
  }
  if (from._internal_eresult() != 0) {
    _internal_set_eresult(from._internal_eresult());
  }
  if (from._internal_uigateid() != 0) {
    _internal_set_uigateid(from._internal_uigateid());
  }
  if (from._internal_iprovince() != 0) {
    _internal_set_iprovince(from._internal_iprovince());
  }
  if (from._internal_uigmlevel() != 0) {
    _internal_set_uigmlevel(from._internal_uigmlevel());
  }
  if (from._internal_uiproarea() != 0) {
    _internal_set_uiproarea(from._internal_uiproarea());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HttpUserLoginRet::CopyFrom(const HttpUserLoginRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.HttpUserLoginRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpUserLoginRet::IsInitialized() const {
  return true;
}

void HttpUserLoginRet::InternalSwap(HttpUserLoginRet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strprovincename_, lhs_arena,
      &other->strprovincename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strsessionid_, lhs_arena,
      &other->strsessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strdevid_, lhs_arena,
      &other->strdevid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HttpUserLoginRet, uiproarea_)
      + sizeof(HttpUserLoginRet::uiproarea_)
      - PROTOBUF_FIELD_OFFSET(HttpUserLoginRet, llplayerid_)>(
          reinterpret_cast<char*>(&llplayerid_),
          reinterpret_cast<char*>(&other->llplayerid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HttpUserLoginRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fhttp_2eproto_getter, &descriptor_table_msg_5fmodule_5fhttp_2eproto_once,
      file_level_metadata_msg_5fmodule_5fhttp_2eproto[3]);
}

// ===================================================================

class HttpModifyNameRet::_Internal {
 public:
};

HttpModifyNameRet::HttpModifyNameRet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.HttpModifyNameRet)
}
HttpModifyNameRet::HttpModifyNameRet(const HttpModifyNameRet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strplayername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strplayername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strplayername().empty()) {
    strplayername_.Set(from._internal_strplayername(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llplayerid_, &from.llplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiserverid_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.HttpModifyNameRet)
}

inline void HttpModifyNameRet::SharedCtor() {
strplayername_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strplayername_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llplayerid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiserverid_) -
    reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
}

HttpModifyNameRet::~HttpModifyNameRet() {
  // @@protoc_insertion_point(destructor:ProtoMsg.HttpModifyNameRet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HttpModifyNameRet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strplayername_.Destroy();
}

void HttpModifyNameRet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HttpModifyNameRet::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.HttpModifyNameRet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strplayername_.ClearToEmpty();
  ::memset(&llplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiserverid_) -
      reinterpret_cast<char*>(&llplayerid_)) + sizeof(uiserverid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HttpModifyNameRet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llPlayerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llplayerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ProtoMsg.ResultCode eResult = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eresult(static_cast<::ProtoMsg::ResultCode>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 uiServerId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strPlayerName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strplayername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.HttpModifyNameRet.strPlayerName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HttpModifyNameRet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.HttpModifyNameRet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_llplayerid(), target);
  }

  // .ProtoMsg.ResultCode eResult = 2;
  if (this->_internal_eresult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_eresult(), target);
  }

  // uint32 uiServerId = 3;
  if (this->_internal_uiserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiserverid(), target);
  }

  // string strPlayerName = 4;
  if (!this->_internal_strplayername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strplayername().data(), static_cast<int>(this->_internal_strplayername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.HttpModifyNameRet.strPlayerName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strplayername(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.HttpModifyNameRet)
  return target;
}

size_t HttpModifyNameRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.HttpModifyNameRet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strPlayerName = 4;
  if (!this->_internal_strplayername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strplayername());
  }

  // int64 llPlayerId = 1;
  if (this->_internal_llplayerid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_llplayerid());
  }

  // .ProtoMsg.ResultCode eResult = 2;
  if (this->_internal_eresult() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_eresult());
  }

  // uint32 uiServerId = 3;
  if (this->_internal_uiserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HttpModifyNameRet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HttpModifyNameRet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HttpModifyNameRet::GetClassData() const { return &_class_data_; }

void HttpModifyNameRet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HttpModifyNameRet *>(to)->MergeFrom(
      static_cast<const HttpModifyNameRet &>(from));
}


void HttpModifyNameRet::MergeFrom(const HttpModifyNameRet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.HttpModifyNameRet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strplayername().empty()) {
    _internal_set_strplayername(from._internal_strplayername());
  }
  if (from._internal_llplayerid() != 0) {
    _internal_set_llplayerid(from._internal_llplayerid());
  }
  if (from._internal_eresult() != 0) {
    _internal_set_eresult(from._internal_eresult());
  }
  if (from._internal_uiserverid() != 0) {
    _internal_set_uiserverid(from._internal_uiserverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HttpModifyNameRet::CopyFrom(const HttpModifyNameRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.HttpModifyNameRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpModifyNameRet::IsInitialized() const {
  return true;
}

void HttpModifyNameRet::InternalSwap(HttpModifyNameRet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strplayername_, lhs_arena,
      &other->strplayername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HttpModifyNameRet, uiserverid_)
      + sizeof(HttpModifyNameRet::uiserverid_)
      - PROTOBUF_FIELD_OFFSET(HttpModifyNameRet, llplayerid_)>(
          reinterpret_cast<char*>(&llplayerid_),
          reinterpret_cast<char*>(&other->llplayerid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HttpModifyNameRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fhttp_2eproto_getter, &descriptor_table_msg_5fmodule_5fhttp_2eproto_once,
      file_level_metadata_msg_5fmodule_5fhttp_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMsg::MsgModule_Http*
Arena::CreateMaybeMessage< ::ProtoMsg::MsgModule_Http >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::MsgModule_Http >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::HttpRetMsg*
Arena::CreateMaybeMessage< ::ProtoMsg::HttpRetMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::HttpRetMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::HttpGetUniqRolId*
Arena::CreateMaybeMessage< ::ProtoMsg::HttpGetUniqRolId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::HttpGetUniqRolId >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::HttpUserLoginRet*
Arena::CreateMaybeMessage< ::ProtoMsg::HttpUserLoginRet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::HttpUserLoginRet >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::HttpModifyNameRet*
Arena::CreateMaybeMessage< ::ProtoMsg::HttpModifyNameRet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::HttpModifyNameRet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
