// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_ranker.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5franker_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5franker_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fmodule_5franker_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmodule_5franker_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fmodule_5franker_2eproto;
namespace ProtoMsg {
class MsgModule_Ranker;
struct MsgModule_RankerDefaultTypeInternal;
extern MsgModule_RankerDefaultTypeInternal _MsgModule_Ranker_default_instance_;
class Msg_Ranker_GetRankerList_Req;
struct Msg_Ranker_GetRankerList_ReqDefaultTypeInternal;
extern Msg_Ranker_GetRankerList_ReqDefaultTypeInternal _Msg_Ranker_GetRankerList_Req_default_instance_;
class Msg_Ranker_GetRankerList_Rsp;
struct Msg_Ranker_GetRankerList_RspDefaultTypeInternal;
extern Msg_Ranker_GetRankerList_RspDefaultTypeInternal _Msg_Ranker_GetRankerList_Rsp_default_instance_;
class ranker_info_t;
struct ranker_info_tDefaultTypeInternal;
extern ranker_info_tDefaultTypeInternal _ranker_info_t_default_instance_;
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMsg::MsgModule_Ranker* Arena::CreateMaybeMessage<::ProtoMsg::MsgModule_Ranker>(Arena*);
template<> ::ProtoMsg::Msg_Ranker_GetRankerList_Req* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Ranker_GetRankerList_Req>(Arena*);
template<> ::ProtoMsg::Msg_Ranker_GetRankerList_Rsp* Arena::CreateMaybeMessage<::ProtoMsg::Msg_Ranker_GetRankerList_Rsp>(Arena*);
template<> ::ProtoMsg::ranker_info_t* Arena::CreateMaybeMessage<::ProtoMsg::ranker_info_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMsg {

enum MsgModule_Ranker_MsgCmd : int {
  MsgModule_Ranker_MsgCmd_Msg_Ranker_None = 0,
  MsgModule_Ranker_MsgCmd_Msg_Ranker_GetRankerList_Req = 1,
  MsgModule_Ranker_MsgCmd_Msg_Ranker_GetRankerList_Rsp = 2,
  MsgModule_Ranker_MsgCmd_MsgModule_Ranker_MsgCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgModule_Ranker_MsgCmd_MsgModule_Ranker_MsgCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgModule_Ranker_MsgCmd_IsValid(int value);
constexpr MsgModule_Ranker_MsgCmd MsgModule_Ranker_MsgCmd_MsgCmd_MIN = MsgModule_Ranker_MsgCmd_Msg_Ranker_None;
constexpr MsgModule_Ranker_MsgCmd MsgModule_Ranker_MsgCmd_MsgCmd_MAX = MsgModule_Ranker_MsgCmd_Msg_Ranker_GetRankerList_Rsp;
constexpr int MsgModule_Ranker_MsgCmd_MsgCmd_ARRAYSIZE = MsgModule_Ranker_MsgCmd_MsgCmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_Ranker_MsgCmd_descriptor();
template<typename T>
inline const std::string& MsgModule_Ranker_MsgCmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgModule_Ranker_MsgCmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgModule_Ranker_MsgCmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgModule_Ranker_MsgCmd_descriptor(), enum_t_value);
}
inline bool MsgModule_Ranker_MsgCmd_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgModule_Ranker_MsgCmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgModule_Ranker_MsgCmd>(
    MsgModule_Ranker_MsgCmd_descriptor(), name, value);
}
// ===================================================================

class MsgModule_Ranker final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.MsgModule_Ranker) */ {
 public:
  inline MsgModule_Ranker() : MsgModule_Ranker(nullptr) {}
  explicit PROTOBUF_CONSTEXPR MsgModule_Ranker(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgModule_Ranker(const MsgModule_Ranker& from);
  MsgModule_Ranker(MsgModule_Ranker&& from) noexcept
    : MsgModule_Ranker() {
    *this = ::std::move(from);
  }

  inline MsgModule_Ranker& operator=(const MsgModule_Ranker& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModule_Ranker& operator=(MsgModule_Ranker&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgModule_Ranker& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgModule_Ranker* internal_default_instance() {
    return reinterpret_cast<const MsgModule_Ranker*>(
               &_MsgModule_Ranker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgModule_Ranker& a, MsgModule_Ranker& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModule_Ranker* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModule_Ranker* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgModule_Ranker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgModule_Ranker>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgModule_Ranker& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgModule_Ranker& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.MsgModule_Ranker";
  }
  protected:
  explicit MsgModule_Ranker(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgModule_Ranker_MsgCmd MsgCmd;
  static constexpr MsgCmd Msg_Ranker_None =
    MsgModule_Ranker_MsgCmd_Msg_Ranker_None;
  static constexpr MsgCmd Msg_Ranker_GetRankerList_Req =
    MsgModule_Ranker_MsgCmd_Msg_Ranker_GetRankerList_Req;
  static constexpr MsgCmd Msg_Ranker_GetRankerList_Rsp =
    MsgModule_Ranker_MsgCmd_Msg_Ranker_GetRankerList_Rsp;
  static inline bool MsgCmd_IsValid(int value) {
    return MsgModule_Ranker_MsgCmd_IsValid(value);
  }
  static constexpr MsgCmd MsgCmd_MIN =
    MsgModule_Ranker_MsgCmd_MsgCmd_MIN;
  static constexpr MsgCmd MsgCmd_MAX =
    MsgModule_Ranker_MsgCmd_MsgCmd_MAX;
  static constexpr int MsgCmd_ARRAYSIZE =
    MsgModule_Ranker_MsgCmd_MsgCmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgCmd_descriptor() {
    return MsgModule_Ranker_MsgCmd_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgCmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgCmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgCmd_Name.");
    return MsgModule_Ranker_MsgCmd_Name(enum_t_value);
  }
  static inline bool MsgCmd_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgCmd* value) {
    return MsgModule_Ranker_MsgCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MsgModule_Ranker)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5franker_2eproto;
};
// -------------------------------------------------------------------

class ranker_info_t final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.ranker_info_t) */ {
 public:
  inline ranker_info_t() : ranker_info_t(nullptr) {}
  ~ranker_info_t() override;
  explicit PROTOBUF_CONSTEXPR ranker_info_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ranker_info_t(const ranker_info_t& from);
  ranker_info_t(ranker_info_t&& from) noexcept
    : ranker_info_t() {
    *this = ::std::move(from);
  }

  inline ranker_info_t& operator=(const ranker_info_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline ranker_info_t& operator=(ranker_info_t&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ranker_info_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const ranker_info_t* internal_default_instance() {
    return reinterpret_cast<const ranker_info_t*>(
               &_ranker_info_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ranker_info_t& a, ranker_info_t& b) {
    a.Swap(&b);
  }
  inline void Swap(ranker_info_t* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ranker_info_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ranker_info_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ranker_info_t>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ranker_info_t& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ranker_info_t& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ranker_info_t* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.ranker_info_t";
  }
  protected:
  explicit ranker_info_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrNameFieldNumber = 7,
    kLlUserIdFieldNumber = 2,
    kIRankFieldNumber = 1,
    kIScoreFieldNumber = 3,
    kIHeadIdFieldNumber = 4,
    kIFrameIdFieldNumber = 5,
    kILevelFieldNumber = 6,
  };
  // string strName = 7;
  void clear_strname();
  const std::string& strname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strname();
  PROTOBUF_NODISCARD std::string* release_strname();
  void set_allocated_strname(std::string* strname);
  private:
  const std::string& _internal_strname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strname(const std::string& value);
  std::string* _internal_mutable_strname();
  public:

  // int64 llUserId = 2;
  void clear_lluserid();
  int64_t lluserid() const;
  void set_lluserid(int64_t value);
  private:
  int64_t _internal_lluserid() const;
  void _internal_set_lluserid(int64_t value);
  public:

  // int32 iRank = 1;
  void clear_irank();
  int32_t irank() const;
  void set_irank(int32_t value);
  private:
  int32_t _internal_irank() const;
  void _internal_set_irank(int32_t value);
  public:

  // int32 iScore = 3;
  void clear_iscore();
  int32_t iscore() const;
  void set_iscore(int32_t value);
  private:
  int32_t _internal_iscore() const;
  void _internal_set_iscore(int32_t value);
  public:

  // int32 iHeadId = 4;
  void clear_iheadid();
  int32_t iheadid() const;
  void set_iheadid(int32_t value);
  private:
  int32_t _internal_iheadid() const;
  void _internal_set_iheadid(int32_t value);
  public:

  // int32 iFrameId = 5;
  void clear_iframeid();
  int32_t iframeid() const;
  void set_iframeid(int32_t value);
  private:
  int32_t _internal_iframeid() const;
  void _internal_set_iframeid(int32_t value);
  public:

  // int32 iLevel = 6;
  void clear_ilevel();
  int32_t ilevel() const;
  void set_ilevel(int32_t value);
  private:
  int32_t _internal_ilevel() const;
  void _internal_set_ilevel(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMsg.ranker_info_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strname_;
  int64_t lluserid_;
  int32_t irank_;
  int32_t iscore_;
  int32_t iheadid_;
  int32_t iframeid_;
  int32_t ilevel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5franker_2eproto;
};
// -------------------------------------------------------------------

class Msg_Ranker_GetRankerList_Req final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Ranker_GetRankerList_Req) */ {
 public:
  inline Msg_Ranker_GetRankerList_Req() : Msg_Ranker_GetRankerList_Req(nullptr) {}
  explicit PROTOBUF_CONSTEXPR Msg_Ranker_GetRankerList_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Ranker_GetRankerList_Req(const Msg_Ranker_GetRankerList_Req& from);
  Msg_Ranker_GetRankerList_Req(Msg_Ranker_GetRankerList_Req&& from) noexcept
    : Msg_Ranker_GetRankerList_Req() {
    *this = ::std::move(from);
  }

  inline Msg_Ranker_GetRankerList_Req& operator=(const Msg_Ranker_GetRankerList_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Ranker_GetRankerList_Req& operator=(Msg_Ranker_GetRankerList_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Ranker_GetRankerList_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Ranker_GetRankerList_Req* internal_default_instance() {
    return reinterpret_cast<const Msg_Ranker_GetRankerList_Req*>(
               &_Msg_Ranker_GetRankerList_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_Ranker_GetRankerList_Req& a, Msg_Ranker_GetRankerList_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Ranker_GetRankerList_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Ranker_GetRankerList_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Ranker_GetRankerList_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Ranker_GetRankerList_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Msg_Ranker_GetRankerList_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Msg_Ranker_GetRankerList_Req& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Ranker_GetRankerList_Req";
  }
  protected:
  explicit Msg_Ranker_GetRankerList_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Ranker_GetRankerList_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_msg_5fmodule_5franker_2eproto;
};
// -------------------------------------------------------------------

class Msg_Ranker_GetRankerList_Rsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Msg_Ranker_GetRankerList_Rsp) */ {
 public:
  inline Msg_Ranker_GetRankerList_Rsp() : Msg_Ranker_GetRankerList_Rsp(nullptr) {}
  ~Msg_Ranker_GetRankerList_Rsp() override;
  explicit PROTOBUF_CONSTEXPR Msg_Ranker_GetRankerList_Rsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Ranker_GetRankerList_Rsp(const Msg_Ranker_GetRankerList_Rsp& from);
  Msg_Ranker_GetRankerList_Rsp(Msg_Ranker_GetRankerList_Rsp&& from) noexcept
    : Msg_Ranker_GetRankerList_Rsp() {
    *this = ::std::move(from);
  }

  inline Msg_Ranker_GetRankerList_Rsp& operator=(const Msg_Ranker_GetRankerList_Rsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Ranker_GetRankerList_Rsp& operator=(Msg_Ranker_GetRankerList_Rsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Ranker_GetRankerList_Rsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Ranker_GetRankerList_Rsp* internal_default_instance() {
    return reinterpret_cast<const Msg_Ranker_GetRankerList_Rsp*>(
               &_Msg_Ranker_GetRankerList_Rsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_Ranker_GetRankerList_Rsp& a, Msg_Ranker_GetRankerList_Rsp& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Ranker_GetRankerList_Rsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Ranker_GetRankerList_Rsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_Ranker_GetRankerList_Rsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_Ranker_GetRankerList_Rsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Ranker_GetRankerList_Rsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Ranker_GetRankerList_Rsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Ranker_GetRankerList_Rsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMsg.Msg_Ranker_GetRankerList_Rsp";
  }
  protected:
  explicit Msg_Ranker_GetRankerList_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecRankerListFieldNumber = 2,
    kOOwnRankerFieldNumber = 1,
  };
  // repeated .ProtoMsg.ranker_info_t vecRankerList = 2;
  int vecrankerlist_size() const;
  private:
  int _internal_vecrankerlist_size() const;
  public:
  void clear_vecrankerlist();
  ::ProtoMsg::ranker_info_t* mutable_vecrankerlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::ranker_info_t >*
      mutable_vecrankerlist();
  private:
  const ::ProtoMsg::ranker_info_t& _internal_vecrankerlist(int index) const;
  ::ProtoMsg::ranker_info_t* _internal_add_vecrankerlist();
  public:
  const ::ProtoMsg::ranker_info_t& vecrankerlist(int index) const;
  ::ProtoMsg::ranker_info_t* add_vecrankerlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::ranker_info_t >&
      vecrankerlist() const;

  // .ProtoMsg.ranker_info_t oOwnRanker = 1;
  bool has_oownranker() const;
  private:
  bool _internal_has_oownranker() const;
  public:
  void clear_oownranker();
  const ::ProtoMsg::ranker_info_t& oownranker() const;
  PROTOBUF_NODISCARD ::ProtoMsg::ranker_info_t* release_oownranker();
  ::ProtoMsg::ranker_info_t* mutable_oownranker();
  void set_allocated_oownranker(::ProtoMsg::ranker_info_t* oownranker);
  private:
  const ::ProtoMsg::ranker_info_t& _internal_oownranker() const;
  ::ProtoMsg::ranker_info_t* _internal_mutable_oownranker();
  public:
  void unsafe_arena_set_allocated_oownranker(
      ::ProtoMsg::ranker_info_t* oownranker);
  ::ProtoMsg::ranker_info_t* unsafe_arena_release_oownranker();

  // @@protoc_insertion_point(class_scope:ProtoMsg.Msg_Ranker_GetRankerList_Rsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::ranker_info_t > vecrankerlist_;
  ::ProtoMsg::ranker_info_t* oownranker_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fmodule_5franker_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgModule_Ranker

// -------------------------------------------------------------------

// ranker_info_t

// int32 iRank = 1;
inline void ranker_info_t::clear_irank() {
  irank_ = 0;
}
inline int32_t ranker_info_t::_internal_irank() const {
  return irank_;
}
inline int32_t ranker_info_t::irank() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.iRank)
  return _internal_irank();
}
inline void ranker_info_t::_internal_set_irank(int32_t value) {
  
  irank_ = value;
}
inline void ranker_info_t::set_irank(int32_t value) {
  _internal_set_irank(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.iRank)
}

// int64 llUserId = 2;
inline void ranker_info_t::clear_lluserid() {
  lluserid_ = int64_t{0};
}
inline int64_t ranker_info_t::_internal_lluserid() const {
  return lluserid_;
}
inline int64_t ranker_info_t::lluserid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.llUserId)
  return _internal_lluserid();
}
inline void ranker_info_t::_internal_set_lluserid(int64_t value) {
  
  lluserid_ = value;
}
inline void ranker_info_t::set_lluserid(int64_t value) {
  _internal_set_lluserid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.llUserId)
}

// int32 iScore = 3;
inline void ranker_info_t::clear_iscore() {
  iscore_ = 0;
}
inline int32_t ranker_info_t::_internal_iscore() const {
  return iscore_;
}
inline int32_t ranker_info_t::iscore() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.iScore)
  return _internal_iscore();
}
inline void ranker_info_t::_internal_set_iscore(int32_t value) {
  
  iscore_ = value;
}
inline void ranker_info_t::set_iscore(int32_t value) {
  _internal_set_iscore(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.iScore)
}

// int32 iHeadId = 4;
inline void ranker_info_t::clear_iheadid() {
  iheadid_ = 0;
}
inline int32_t ranker_info_t::_internal_iheadid() const {
  return iheadid_;
}
inline int32_t ranker_info_t::iheadid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.iHeadId)
  return _internal_iheadid();
}
inline void ranker_info_t::_internal_set_iheadid(int32_t value) {
  
  iheadid_ = value;
}
inline void ranker_info_t::set_iheadid(int32_t value) {
  _internal_set_iheadid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.iHeadId)
}

// int32 iFrameId = 5;
inline void ranker_info_t::clear_iframeid() {
  iframeid_ = 0;
}
inline int32_t ranker_info_t::_internal_iframeid() const {
  return iframeid_;
}
inline int32_t ranker_info_t::iframeid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.iFrameId)
  return _internal_iframeid();
}
inline void ranker_info_t::_internal_set_iframeid(int32_t value) {
  
  iframeid_ = value;
}
inline void ranker_info_t::set_iframeid(int32_t value) {
  _internal_set_iframeid(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.iFrameId)
}

// int32 iLevel = 6;
inline void ranker_info_t::clear_ilevel() {
  ilevel_ = 0;
}
inline int32_t ranker_info_t::_internal_ilevel() const {
  return ilevel_;
}
inline int32_t ranker_info_t::ilevel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.iLevel)
  return _internal_ilevel();
}
inline void ranker_info_t::_internal_set_ilevel(int32_t value) {
  
  ilevel_ = value;
}
inline void ranker_info_t::set_ilevel(int32_t value) {
  _internal_set_ilevel(value);
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.iLevel)
}

// string strName = 7;
inline void ranker_info_t::clear_strname() {
  strname_.ClearToEmpty();
}
inline const std::string& ranker_info_t::strname() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.ranker_info_t.strName)
  return _internal_strname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ranker_info_t::set_strname(ArgT0&& arg0, ArgT... args) {
 
 strname_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoMsg.ranker_info_t.strName)
}
inline std::string* ranker_info_t::mutable_strname() {
  std::string* _s = _internal_mutable_strname();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.ranker_info_t.strName)
  return _s;
}
inline const std::string& ranker_info_t::_internal_strname() const {
  return strname_.Get();
}
inline void ranker_info_t::_internal_set_strname(const std::string& value) {
  
  strname_.Set(value, GetArenaForAllocation());
}
inline std::string* ranker_info_t::_internal_mutable_strname() {
  
  return strname_.Mutable(GetArenaForAllocation());
}
inline std::string* ranker_info_t::release_strname() {
  // @@protoc_insertion_point(field_release:ProtoMsg.ranker_info_t.strName)
  return strname_.Release();
}
inline void ranker_info_t::set_allocated_strname(std::string* strname) {
  if (strname != nullptr) {
    
  } else {
    
  }
  strname_.SetAllocated(strname, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strname_.IsDefault()) {
    strname_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.ranker_info_t.strName)
}

// -------------------------------------------------------------------

// Msg_Ranker_GetRankerList_Req

// -------------------------------------------------------------------

// Msg_Ranker_GetRankerList_Rsp

// .ProtoMsg.ranker_info_t oOwnRanker = 1;
inline bool Msg_Ranker_GetRankerList_Rsp::_internal_has_oownranker() const {
  return this != internal_default_instance() && oownranker_ != nullptr;
}
inline bool Msg_Ranker_GetRankerList_Rsp::has_oownranker() const {
  return _internal_has_oownranker();
}
inline void Msg_Ranker_GetRankerList_Rsp::clear_oownranker() {
  if (GetArenaForAllocation() == nullptr && oownranker_ != nullptr) {
    delete oownranker_;
  }
  oownranker_ = nullptr;
}
inline const ::ProtoMsg::ranker_info_t& Msg_Ranker_GetRankerList_Rsp::_internal_oownranker() const {
  const ::ProtoMsg::ranker_info_t* p = oownranker_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMsg::ranker_info_t&>(
      ::ProtoMsg::_ranker_info_t_default_instance_);
}
inline const ::ProtoMsg::ranker_info_t& Msg_Ranker_GetRankerList_Rsp::oownranker() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.oOwnRanker)
  return _internal_oownranker();
}
inline void Msg_Ranker_GetRankerList_Rsp::unsafe_arena_set_allocated_oownranker(
    ::ProtoMsg::ranker_info_t* oownranker) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oownranker_);
  }
  oownranker_ = oownranker;
  if (oownranker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.oOwnRanker)
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::release_oownranker() {
  
  ::ProtoMsg::ranker_info_t* temp = oownranker_;
  oownranker_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::unsafe_arena_release_oownranker() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.oOwnRanker)
  
  ::ProtoMsg::ranker_info_t* temp = oownranker_;
  oownranker_ = nullptr;
  return temp;
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::_internal_mutable_oownranker() {
  
  if (oownranker_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMsg::ranker_info_t>(GetArenaForAllocation());
    oownranker_ = p;
  }
  return oownranker_;
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::mutable_oownranker() {
  ::ProtoMsg::ranker_info_t* _msg = _internal_mutable_oownranker();
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.oOwnRanker)
  return _msg;
}
inline void Msg_Ranker_GetRankerList_Rsp::set_allocated_oownranker(::ProtoMsg::ranker_info_t* oownranker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete oownranker_;
  }
  if (oownranker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(oownranker);
    if (message_arena != submessage_arena) {
      oownranker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oownranker, submessage_arena);
    }
    
  } else {
    
  }
  oownranker_ = oownranker;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.oOwnRanker)
}

// repeated .ProtoMsg.ranker_info_t vecRankerList = 2;
inline int Msg_Ranker_GetRankerList_Rsp::_internal_vecrankerlist_size() const {
  return vecrankerlist_.size();
}
inline int Msg_Ranker_GetRankerList_Rsp::vecrankerlist_size() const {
  return _internal_vecrankerlist_size();
}
inline void Msg_Ranker_GetRankerList_Rsp::clear_vecrankerlist() {
  vecrankerlist_.Clear();
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::mutable_vecrankerlist(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.vecRankerList)
  return vecrankerlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::ranker_info_t >*
Msg_Ranker_GetRankerList_Rsp::mutable_vecrankerlist() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.vecRankerList)
  return &vecrankerlist_;
}
inline const ::ProtoMsg::ranker_info_t& Msg_Ranker_GetRankerList_Rsp::_internal_vecrankerlist(int index) const {
  return vecrankerlist_.Get(index);
}
inline const ::ProtoMsg::ranker_info_t& Msg_Ranker_GetRankerList_Rsp::vecrankerlist(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.vecRankerList)
  return _internal_vecrankerlist(index);
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::_internal_add_vecrankerlist() {
  return vecrankerlist_.Add();
}
inline ::ProtoMsg::ranker_info_t* Msg_Ranker_GetRankerList_Rsp::add_vecrankerlist() {
  ::ProtoMsg::ranker_info_t* _add = _internal_add_vecrankerlist();
  // @@protoc_insertion_point(field_add:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.vecRankerList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMsg::ranker_info_t >&
Msg_Ranker_GetRankerList_Rsp::vecrankerlist() const {
  // @@protoc_insertion_point(field_list:ProtoMsg.Msg_Ranker_GetRankerList_Rsp.vecRankerList)
  return vecrankerlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoMsg::MsgModule_Ranker_MsgCmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MsgModule_Ranker_MsgCmd>() {
  return ::ProtoMsg::MsgModule_Ranker_MsgCmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fmodule_5franker_2eproto
