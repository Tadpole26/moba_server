// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_module_servercommon.proto

#include "msg_module_servercommon.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ProtoMsg {
PROTOBUF_CONSTEXPR MsgModule_ServerCommon::MsgModule_ServerCommon(
    ::_pbi::ConstantInitialized){}
struct MsgModule_ServerCommonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgModule_ServerCommonDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgModule_ServerCommonDefaultTypeInternal() {}
  union {
    MsgModule_ServerCommon _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgModule_ServerCommonDefaultTypeInternal _MsgModule_ServerCommon_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerCommon_Register_Req::Msg_ServerCommon_Register_Req(
    ::_pbi::ConstantInitialized)
  : strexip_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uiserverkind_(0u)
  , uiserverid_(0u)
  , uiplatid_(0u)
  , uiindex_(0u)
  , uigroupid_(0u){}
struct Msg_ServerCommon_Register_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerCommon_Register_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerCommon_Register_ReqDefaultTypeInternal() {}
  union {
    Msg_ServerCommon_Register_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerCommon_Register_ReqDefaultTypeInternal _Msg_ServerCommon_Register_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerCommon_Register_Rsp::Msg_ServerCommon_Register_Rsp(
    ::_pbi::ConstantInitialized)
  : strcomment_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uiserverkind_(0u)
  , uiserverid_(0u)
  , bfirstcon_(false){}
struct Msg_ServerCommon_Register_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerCommon_Register_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerCommon_Register_RspDefaultTypeInternal() {}
  union {
    Msg_ServerCommon_Register_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerCommon_Register_RspDefaultTypeInternal _Msg_ServerCommon_Register_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerCommon_BeatHart_Req::Msg_ServerCommon_BeatHart_Req(
    ::_pbi::ConstantInitialized){}
struct Msg_ServerCommon_BeatHart_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerCommon_BeatHart_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerCommon_BeatHart_ReqDefaultTypeInternal() {}
  union {
    Msg_ServerCommon_BeatHart_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerCommon_BeatHart_ReqDefaultTypeInternal _Msg_ServerCommon_BeatHart_Req_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerCommon_BeatHart_Rsp::Msg_ServerCommon_BeatHart_Rsp(
    ::_pbi::ConstantInitialized){}
struct Msg_ServerCommon_BeatHart_RspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerCommon_BeatHart_RspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerCommon_BeatHart_RspDefaultTypeInternal() {}
  union {
    Msg_ServerCommon_BeatHart_Rsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerCommon_BeatHart_RspDefaultTypeInternal _Msg_ServerCommon_BeatHart_Rsp_default_instance_;
PROTOBUF_CONSTEXPR Msg_ServerCommon_Transmit::Msg_ServerCommon_Transmit(
    ::_pbi::ConstantInitialized)
  : vecuids_()
  , _vecuids_cached_byte_size_(0)
  , strcmdmsg_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , lluid_(int64_t{0})
  , uimoduleid_(0u)
  , uicmd_(0u)
  , uisequence_(0u)
  , uiretcode_(0u){}
struct Msg_ServerCommon_TransmitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_ServerCommon_TransmitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_ServerCommon_TransmitDefaultTypeInternal() {}
  union {
    Msg_ServerCommon_Transmit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_ServerCommon_TransmitDefaultTypeInternal _Msg_ServerCommon_Transmit_default_instance_;
}  // namespace ProtoMsg
static ::_pb::Metadata file_level_metadata_msg_5fmodule_5fservercommon_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msg_5fmodule_5fservercommon_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fmodule_5fservercommon_2eproto = nullptr;

const uint32_t TableStruct_msg_5fmodule_5fservercommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::MsgModule_ServerCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, uiserverkind_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, uiserverid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, uiplatid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, uiindex_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, uigroupid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Req, strexip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Rsp, uiserverkind_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Rsp, uiserverid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Rsp, bfirstcon_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Register_Rsp, strcomment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_BeatHart_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_BeatHart_Rsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, lluid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, vecuids_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, uimoduleid_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, uicmd_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, uisequence_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, uiretcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoMsg::Msg_ServerCommon_Transmit, strcmdmsg_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ProtoMsg::MsgModule_ServerCommon)},
  { 6, -1, -1, sizeof(::ProtoMsg::Msg_ServerCommon_Register_Req)},
  { 18, -1, -1, sizeof(::ProtoMsg::Msg_ServerCommon_Register_Rsp)},
  { 28, -1, -1, sizeof(::ProtoMsg::Msg_ServerCommon_BeatHart_Req)},
  { 34, -1, -1, sizeof(::ProtoMsg::Msg_ServerCommon_BeatHart_Rsp)},
  { 40, -1, -1, sizeof(::ProtoMsg::Msg_ServerCommon_Transmit)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ProtoMsg::_MsgModule_ServerCommon_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerCommon_Register_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerCommon_Register_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerCommon_BeatHart_Req_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerCommon_BeatHart_Rsp_default_instance_._instance,
  &::ProtoMsg::_Msg_ServerCommon_Transmit_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fmodule_5fservercommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035msg_module_servercommon.proto\022\010ProtoMs"
  "g\"\351\001\n\026MsgModule_ServerCommon\"\316\001\n\006MsgCmd\022"
  "\031\n\025Msg_ServerCommon_None\020\000\022!\n\035Msg_Server"
  "Common_Register_Req\020\001\022!\n\035Msg_ServerCommo"
  "n_Register_Rsp\020\002\022!\n\035Msg_ServerCommon_Bea"
  "tHart_Req\020\003\022!\n\035Msg_ServerCommon_BeatHart"
  "_Rsp\020\004\022\035\n\031Msg_ServerCommon_Transmit\020\005\"\220\001"
  "\n\035Msg_ServerCommon_Register_Req\022\024\n\014uiSer"
  "verKind\030\001 \001(\r\022\022\n\nuiServerId\030\002 \001(\r\022\020\n\010uiP"
  "latId\030\003 \001(\r\022\017\n\007uiIndex\030\004 \001(\r\022\021\n\tuiGroupI"
  "d\030\005 \001(\r\022\017\n\007strExIp\030\006 \001(\t\"p\n\035Msg_ServerCo"
  "mmon_Register_Rsp\022\024\n\014uiServerKind\030\001 \001(\r\022"
  "\022\n\nuiServerId\030\002 \001(\r\022\021\n\tbFirstCon\030\003 \001(\010\022\022"
  "\n\nstrComment\030\004 \001(\t\"\037\n\035Msg_ServerCommon_B"
  "eatHart_Req\"\037\n\035Msg_ServerCommon_BeatHart"
  "_Rsp\"\230\001\n\031Msg_ServerCommon_Transmit\022\r\n\005ll"
  "Uid\030\001 \001(\003\022\017\n\007vecUIds\030\002 \003(\003\022\022\n\nuiModuleId"
  "\030\003 \001(\r\022\r\n\005uiCmd\030\004 \001(\r\022\022\n\nuiSequence\030\005 \001("
  "\r\022\021\n\tuiRetCode\030\006 \001(\r\022\021\n\tstrCmdMsg\030\007 \001(\014b"
  "\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_msg_5fmodule_5fservercommon_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fmodule_5fservercommon_2eproto = {
    false, false, 767, descriptor_table_protodef_msg_5fmodule_5fservercommon_2eproto,
    "msg_module_servercommon.proto",
    &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once, nullptr, 0, 6,
    schemas, file_default_instances, TableStruct_msg_5fmodule_5fservercommon_2eproto::offsets,
    file_level_metadata_msg_5fmodule_5fservercommon_2eproto, file_level_enum_descriptors_msg_5fmodule_5fservercommon_2eproto,
    file_level_service_descriptors_msg_5fmodule_5fservercommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter() {
  return &descriptor_table_msg_5fmodule_5fservercommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fmodule_5fservercommon_2eproto(&descriptor_table_msg_5fmodule_5fservercommon_2eproto);
namespace ProtoMsg {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgModule_ServerCommon_MsgCmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fmodule_5fservercommon_2eproto);
  return file_level_enum_descriptors_msg_5fmodule_5fservercommon_2eproto[0];
}
bool MsgModule_ServerCommon_MsgCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_None;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_Register_Req;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_Register_Rsp;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_BeatHart_Req;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_BeatHart_Rsp;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::Msg_ServerCommon_Transmit;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::MsgCmd_MIN;
constexpr MsgModule_ServerCommon_MsgCmd MsgModule_ServerCommon::MsgCmd_MAX;
constexpr int MsgModule_ServerCommon::MsgCmd_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgModule_ServerCommon::_Internal {
 public:
};

MsgModule_ServerCommon::MsgModule_ServerCommon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.MsgModule_ServerCommon)
}
MsgModule_ServerCommon::MsgModule_ServerCommon(const MsgModule_ServerCommon& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MsgModule_ServerCommon)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgModule_ServerCommon::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgModule_ServerCommon::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgModule_ServerCommon::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[0]);
}

// ===================================================================

class Msg_ServerCommon_Register_Req::_Internal {
 public:
};

Msg_ServerCommon_Register_Req::Msg_ServerCommon_Register_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerCommon_Register_Req)
}
Msg_ServerCommon_Register_Req::Msg_ServerCommon_Register_Req(const Msg_ServerCommon_Register_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strexip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strexip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strexip().empty()) {
    strexip_.Set(from._internal_strexip(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uiserverkind_, &from.uiserverkind_,
    static_cast<size_t>(reinterpret_cast<char*>(&uigroupid_) -
    reinterpret_cast<char*>(&uiserverkind_)) + sizeof(uigroupid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerCommon_Register_Req)
}

inline void Msg_ServerCommon_Register_Req::SharedCtor() {
strexip_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strexip_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uiserverkind_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uigroupid_) -
    reinterpret_cast<char*>(&uiserverkind_)) + sizeof(uigroupid_));
}

Msg_ServerCommon_Register_Req::~Msg_ServerCommon_Register_Req() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerCommon_Register_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerCommon_Register_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strexip_.Destroy();
}

void Msg_ServerCommon_Register_Req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerCommon_Register_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerCommon_Register_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strexip_.ClearToEmpty();
  ::memset(&uiserverkind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uigroupid_) -
      reinterpret_cast<char*>(&uiserverkind_)) + sizeof(uigroupid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerCommon_Register_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uiServerKind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiserverkind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiServerId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiPlatId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiplatid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiIndex = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uiindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiGroupId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uigroupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strExIp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_strexip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerCommon_Register_Req.strExIp"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerCommon_Register_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerCommon_Register_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiServerKind = 1;
  if (this->_internal_uiserverkind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uiserverkind(), target);
  }

  // uint32 uiServerId = 2;
  if (this->_internal_uiserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiserverid(), target);
  }

  // uint32 uiPlatId = 3;
  if (this->_internal_uiplatid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiplatid(), target);
  }

  // uint32 uiIndex = 4;
  if (this->_internal_uiindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uiindex(), target);
  }

  // uint32 uiGroupId = 5;
  if (this->_internal_uigroupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uigroupid(), target);
  }

  // string strExIp = 6;
  if (!this->_internal_strexip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strexip().data(), static_cast<int>(this->_internal_strexip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerCommon_Register_Req.strExIp");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_strexip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerCommon_Register_Req)
  return target;
}

size_t Msg_ServerCommon_Register_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerCommon_Register_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strExIp = 6;
  if (!this->_internal_strexip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strexip());
  }

  // uint32 uiServerKind = 1;
  if (this->_internal_uiserverkind() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverkind());
  }

  // uint32 uiServerId = 2;
  if (this->_internal_uiserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverid());
  }

  // uint32 uiPlatId = 3;
  if (this->_internal_uiplatid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiplatid());
  }

  // uint32 uiIndex = 4;
  if (this->_internal_uiindex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiindex());
  }

  // uint32 uiGroupId = 5;
  if (this->_internal_uigroupid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uigroupid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerCommon_Register_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerCommon_Register_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerCommon_Register_Req::GetClassData() const { return &_class_data_; }

void Msg_ServerCommon_Register_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerCommon_Register_Req *>(to)->MergeFrom(
      static_cast<const Msg_ServerCommon_Register_Req &>(from));
}


void Msg_ServerCommon_Register_Req::MergeFrom(const Msg_ServerCommon_Register_Req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerCommon_Register_Req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strexip().empty()) {
    _internal_set_strexip(from._internal_strexip());
  }
  if (from._internal_uiserverkind() != 0) {
    _internal_set_uiserverkind(from._internal_uiserverkind());
  }
  if (from._internal_uiserverid() != 0) {
    _internal_set_uiserverid(from._internal_uiserverid());
  }
  if (from._internal_uiplatid() != 0) {
    _internal_set_uiplatid(from._internal_uiplatid());
  }
  if (from._internal_uiindex() != 0) {
    _internal_set_uiindex(from._internal_uiindex());
  }
  if (from._internal_uigroupid() != 0) {
    _internal_set_uigroupid(from._internal_uigroupid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerCommon_Register_Req::CopyFrom(const Msg_ServerCommon_Register_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerCommon_Register_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerCommon_Register_Req::IsInitialized() const {
  return true;
}

void Msg_ServerCommon_Register_Req::InternalSwap(Msg_ServerCommon_Register_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strexip_, lhs_arena,
      &other->strexip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Register_Req, uigroupid_)
      + sizeof(Msg_ServerCommon_Register_Req::uigroupid_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Register_Req, uiserverkind_)>(
          reinterpret_cast<char*>(&uiserverkind_),
          reinterpret_cast<char*>(&other->uiserverkind_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerCommon_Register_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[1]);
}

// ===================================================================

class Msg_ServerCommon_Register_Rsp::_Internal {
 public:
};

Msg_ServerCommon_Register_Rsp::Msg_ServerCommon_Register_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerCommon_Register_Rsp)
}
Msg_ServerCommon_Register_Rsp::Msg_ServerCommon_Register_Rsp(const Msg_ServerCommon_Register_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strcomment_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strcomment_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strcomment().empty()) {
    strcomment_.Set(from._internal_strcomment(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uiserverkind_, &from.uiserverkind_,
    static_cast<size_t>(reinterpret_cast<char*>(&bfirstcon_) -
    reinterpret_cast<char*>(&uiserverkind_)) + sizeof(bfirstcon_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerCommon_Register_Rsp)
}

inline void Msg_ServerCommon_Register_Rsp::SharedCtor() {
strcomment_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strcomment_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uiserverkind_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bfirstcon_) -
    reinterpret_cast<char*>(&uiserverkind_)) + sizeof(bfirstcon_));
}

Msg_ServerCommon_Register_Rsp::~Msg_ServerCommon_Register_Rsp() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerCommon_Register_Rsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strcomment_.Destroy();
}

void Msg_ServerCommon_Register_Rsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerCommon_Register_Rsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strcomment_.ClearToEmpty();
  ::memset(&uiserverkind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bfirstcon_) -
      reinterpret_cast<char*>(&uiserverkind_)) + sizeof(bfirstcon_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerCommon_Register_Rsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 uiServerKind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiserverkind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiServerId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bFirstCon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          bfirstcon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string strComment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_strcomment();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ProtoMsg.Msg_ServerCommon_Register_Rsp.strComment"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerCommon_Register_Rsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiServerKind = 1;
  if (this->_internal_uiserverkind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uiserverkind(), target);
  }

  // uint32 uiServerId = 2;
  if (this->_internal_uiserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uiserverid(), target);
  }

  // bool bFirstCon = 3;
  if (this->_internal_bfirstcon() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_bfirstcon(), target);
  }

  // string strComment = 4;
  if (!this->_internal_strcomment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strcomment().data(), static_cast<int>(this->_internal_strcomment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.Msg_ServerCommon_Register_Rsp.strComment");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_strcomment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  return target;
}

size_t Msg_ServerCommon_Register_Rsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strComment = 4;
  if (!this->_internal_strcomment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strcomment());
  }

  // uint32 uiServerKind = 1;
  if (this->_internal_uiserverkind() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverkind());
  }

  // uint32 uiServerId = 2;
  if (this->_internal_uiserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiserverid());
  }

  // bool bFirstCon = 3;
  if (this->_internal_bfirstcon() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerCommon_Register_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerCommon_Register_Rsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerCommon_Register_Rsp::GetClassData() const { return &_class_data_; }

void Msg_ServerCommon_Register_Rsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerCommon_Register_Rsp *>(to)->MergeFrom(
      static_cast<const Msg_ServerCommon_Register_Rsp &>(from));
}


void Msg_ServerCommon_Register_Rsp::MergeFrom(const Msg_ServerCommon_Register_Rsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strcomment().empty()) {
    _internal_set_strcomment(from._internal_strcomment());
  }
  if (from._internal_uiserverkind() != 0) {
    _internal_set_uiserverkind(from._internal_uiserverkind());
  }
  if (from._internal_uiserverid() != 0) {
    _internal_set_uiserverid(from._internal_uiserverid());
  }
  if (from._internal_bfirstcon() != 0) {
    _internal_set_bfirstcon(from._internal_bfirstcon());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerCommon_Register_Rsp::CopyFrom(const Msg_ServerCommon_Register_Rsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerCommon_Register_Rsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerCommon_Register_Rsp::IsInitialized() const {
  return true;
}

void Msg_ServerCommon_Register_Rsp::InternalSwap(Msg_ServerCommon_Register_Rsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strcomment_, lhs_arena,
      &other->strcomment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Register_Rsp, bfirstcon_)
      + sizeof(Msg_ServerCommon_Register_Rsp::bfirstcon_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Register_Rsp, uiserverkind_)>(
          reinterpret_cast<char*>(&uiserverkind_),
          reinterpret_cast<char*>(&other->uiserverkind_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerCommon_Register_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[2]);
}

// ===================================================================

class Msg_ServerCommon_BeatHart_Req::_Internal {
 public:
};

Msg_ServerCommon_BeatHart_Req::Msg_ServerCommon_BeatHart_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerCommon_BeatHart_Req)
}
Msg_ServerCommon_BeatHart_Req::Msg_ServerCommon_BeatHart_Req(const Msg_ServerCommon_BeatHart_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerCommon_BeatHart_Req)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerCommon_BeatHart_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerCommon_BeatHart_Req::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerCommon_BeatHart_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[3]);
}

// ===================================================================

class Msg_ServerCommon_BeatHart_Rsp::_Internal {
 public:
};

Msg_ServerCommon_BeatHart_Rsp::Msg_ServerCommon_BeatHart_Rsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerCommon_BeatHart_Rsp)
}
Msg_ServerCommon_BeatHart_Rsp::Msg_ServerCommon_BeatHart_Rsp(const Msg_ServerCommon_BeatHart_Rsp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerCommon_BeatHart_Rsp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerCommon_BeatHart_Rsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerCommon_BeatHart_Rsp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerCommon_BeatHart_Rsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[4]);
}

// ===================================================================

class Msg_ServerCommon_Transmit::_Internal {
 public:
};

Msg_ServerCommon_Transmit::Msg_ServerCommon_Transmit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vecuids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ProtoMsg.Msg_ServerCommon_Transmit)
}
Msg_ServerCommon_Transmit::Msg_ServerCommon_Transmit(const Msg_ServerCommon_Transmit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vecuids_(from.vecuids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strcmdmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strcmdmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strcmdmsg().empty()) {
    strcmdmsg_.Set(from._internal_strcmdmsg(), 
      GetArenaForAllocation());
  }
  ::memcpy(&lluid_, &from.lluid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiretcode_) -
    reinterpret_cast<char*>(&lluid_)) + sizeof(uiretcode_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Msg_ServerCommon_Transmit)
}

inline void Msg_ServerCommon_Transmit::SharedCtor() {
strcmdmsg_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strcmdmsg_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lluid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiretcode_) -
    reinterpret_cast<char*>(&lluid_)) + sizeof(uiretcode_));
}

Msg_ServerCommon_Transmit::~Msg_ServerCommon_Transmit() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Msg_ServerCommon_Transmit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_ServerCommon_Transmit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strcmdmsg_.Destroy();
}

void Msg_ServerCommon_Transmit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ServerCommon_Transmit::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Msg_ServerCommon_Transmit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vecuids_.Clear();
  strcmdmsg_.ClearToEmpty();
  ::memset(&lluid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiretcode_) -
      reinterpret_cast<char*>(&lluid_)) + sizeof(uiretcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ServerCommon_Transmit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llUid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lluid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 vecUIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_vecuids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_vecuids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiModuleId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uimoduleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiCmd = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uicmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiSequence = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uisequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiRetCode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uiretcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes strCmdMsg = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_strcmdmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ServerCommon_Transmit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Msg_ServerCommon_Transmit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llUid = 1;
  if (this->_internal_lluid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_lluid(), target);
  }

  // repeated int64 vecUIds = 2;
  {
    int byte_size = _vecuids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_vecuids(), byte_size, target);
    }
  }

  // uint32 uiModuleId = 3;
  if (this->_internal_uimoduleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uimoduleid(), target);
  }

  // uint32 uiCmd = 4;
  if (this->_internal_uicmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uicmd(), target);
  }

  // uint32 uiSequence = 5;
  if (this->_internal_uisequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uisequence(), target);
  }

  // uint32 uiRetCode = 6;
  if (this->_internal_uiretcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_uiretcode(), target);
  }

  // bytes strCmdMsg = 7;
  if (!this->_internal_strcmdmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_strcmdmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Msg_ServerCommon_Transmit)
  return target;
}

size_t Msg_ServerCommon_Transmit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Msg_ServerCommon_Transmit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 vecUIds = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->vecuids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _vecuids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes strCmdMsg = 7;
  if (!this->_internal_strcmdmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_strcmdmsg());
  }

  // int64 llUid = 1;
  if (this->_internal_lluid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_lluid());
  }

  // uint32 uiModuleId = 3;
  if (this->_internal_uimoduleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uimoduleid());
  }

  // uint32 uiCmd = 4;
  if (this->_internal_uicmd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uicmd());
  }

  // uint32 uiSequence = 5;
  if (this->_internal_uisequence() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uisequence());
  }

  // uint32 uiRetCode = 6;
  if (this->_internal_uiretcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uiretcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ServerCommon_Transmit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ServerCommon_Transmit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ServerCommon_Transmit::GetClassData() const { return &_class_data_; }

void Msg_ServerCommon_Transmit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ServerCommon_Transmit *>(to)->MergeFrom(
      static_cast<const Msg_ServerCommon_Transmit &>(from));
}


void Msg_ServerCommon_Transmit::MergeFrom(const Msg_ServerCommon_Transmit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Msg_ServerCommon_Transmit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vecuids_.MergeFrom(from.vecuids_);
  if (!from._internal_strcmdmsg().empty()) {
    _internal_set_strcmdmsg(from._internal_strcmdmsg());
  }
  if (from._internal_lluid() != 0) {
    _internal_set_lluid(from._internal_lluid());
  }
  if (from._internal_uimoduleid() != 0) {
    _internal_set_uimoduleid(from._internal_uimoduleid());
  }
  if (from._internal_uicmd() != 0) {
    _internal_set_uicmd(from._internal_uicmd());
  }
  if (from._internal_uisequence() != 0) {
    _internal_set_uisequence(from._internal_uisequence());
  }
  if (from._internal_uiretcode() != 0) {
    _internal_set_uiretcode(from._internal_uiretcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ServerCommon_Transmit::CopyFrom(const Msg_ServerCommon_Transmit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Msg_ServerCommon_Transmit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ServerCommon_Transmit::IsInitialized() const {
  return true;
}

void Msg_ServerCommon_Transmit::InternalSwap(Msg_ServerCommon_Transmit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vecuids_.InternalSwap(&other->vecuids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &strcmdmsg_, lhs_arena,
      &other->strcmdmsg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Transmit, uiretcode_)
      + sizeof(Msg_ServerCommon_Transmit::uiretcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_ServerCommon_Transmit, lluid_)>(
          reinterpret_cast<char*>(&lluid_),
          reinterpret_cast<char*>(&other->lluid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ServerCommon_Transmit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fmodule_5fservercommon_2eproto_getter, &descriptor_table_msg_5fmodule_5fservercommon_2eproto_once,
      file_level_metadata_msg_5fmodule_5fservercommon_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMsg::MsgModule_ServerCommon*
Arena::CreateMaybeMessage< ::ProtoMsg::MsgModule_ServerCommon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::MsgModule_ServerCommon >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerCommon_Register_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerCommon_Register_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerCommon_Register_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerCommon_Register_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerCommon_Register_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerCommon_Register_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerCommon_BeatHart_Req*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerCommon_BeatHart_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerCommon_BeatHart_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerCommon_BeatHart_Rsp*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerCommon_BeatHart_Rsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerCommon_BeatHart_Rsp >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMsg::Msg_ServerCommon_Transmit*
Arena::CreateMaybeMessage< ::ProtoMsg::Msg_ServerCommon_Transmit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMsg::Msg_ServerCommon_Transmit >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
